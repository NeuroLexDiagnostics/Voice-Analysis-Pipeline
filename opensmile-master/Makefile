# Makefile.in generated by automake 1.16.1 from Makefile.am.
# Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2018 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.




VPATH = /Users/ali/Coding/opensmile-master
am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/opensmile
pkgincludedir = $(includedir)/opensmile
pkglibdir = $(libdir)/opensmile
pkglibexecdir = $(libexecdir)/opensmile
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-apple-darwin18.2.0
host_triplet = x86_64-apple-darwin18.2.0
bin_PROGRAMS = SMILExtract$(EXEEXT)
subdir = .
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/android.m4 \
	$(top_srcdir)/m4/find_pthread.m4 $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/m4/opencv.m4 $(top_srcdir)/m4/portaudio.m4 \
	$(top_srcdir)/m4/targets.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(top_srcdir)/configure \
	$(am__configure_deps) $(am__DIST_COMMON)
am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \
 configure.lineno config.status.lineno
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__installdirs = "$(DESTDIR)$(bindir)" "$(DESTDIR)$(libdir)"
PROGRAMS = $(bin_PROGRAMS)
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
LTLIBRARIES = $(lib_LTLIBRARIES)
am__DEPENDENCIES_1 =
am__DEPENDENCIES_2 = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
libopensmile_la_DEPENDENCIES = $(am__DEPENDENCIES_2)
am__dirstamp = $(am__leading_dot)dirstamp
am__objects_1 = src/classifiers/julius/libopensmile_la-juliusSink.lo \
	src/classifiers/libsvm/libopensmile_la-svm.lo \
	src/classifiers/libopensmile_la-libsvmliveSink.lo \
	src/classifiers/libopensmile_la-svmSink.lo \
	src/core/libopensmile_la-commandlineParser.lo \
	src/core/libopensmile_la-componentManager.lo \
	src/core/libopensmile_la-configManager.lo \
	src/core/libopensmile_la-dataMemory.lo \
	src/core/libopensmile_la-dataProcessor.lo \
	src/core/libopensmile_la-dataReader.lo \
	src/core/libopensmile_la-dataSelector.lo \
	src/core/libopensmile_la-dataSink.lo \
	src/core/libopensmile_la-dataSource.lo \
	src/core/libopensmile_la-dataWriter.lo \
	src/core/libopensmile_la-exceptions.lo \
	src/core/libopensmile_la-nullSink.lo \
	src/core/libopensmile_la-smileCommon.lo \
	src/core/libopensmile_la-smileComponent.lo \
	src/core/libopensmile_la-smileLogger.lo \
	src/core/libopensmile_la-vecToWinProcessor.lo \
	src/core/libopensmile_la-vectorProcessor.lo \
	src/core/libopensmile_la-vectorTransform.lo \
	src/core/libopensmile_la-winToVecProcessor.lo \
	src/core/libopensmile_la-windowProcessor.lo \
	src/dsp/libopensmile_la-dbA.lo \
	src/dsp/libopensmile_la-signalGenerator.lo \
	src/dsp/libopensmile_la-smileResample.lo \
	src/dsp/libopensmile_la-specResample.lo \
	src/dsp/libopensmile_la-vadV1.lo \
	src/dspcore/libopensmile_la-acf.lo \
	src/dspcore/libopensmile_la-amdf.lo \
	src/dspcore/libopensmile_la-contourSmoother.lo \
	src/dspcore/libopensmile_la-deltaRegression.lo \
	src/dspcore/libopensmile_la-fftmagphase.lo \
	src/dspcore/libopensmile_la-fftsg.lo \
	src/dspcore/libopensmile_la-framer.lo \
	src/dspcore/libopensmile_la-fullinputMean.lo \
	src/dspcore/libopensmile_la-fullturnMean.lo \
	src/dspcore/libopensmile_la-monoMixdown.lo \
	src/dspcore/libopensmile_la-preemphasis.lo \
	src/dspcore/libopensmile_la-transformFft.lo \
	src/dspcore/libopensmile_la-turnDetector.lo \
	src/dspcore/libopensmile_la-vectorMVN.lo \
	src/dspcore/libopensmile_la-vectorPreemphasis.lo \
	src/dspcore/libopensmile_la-windower.lo \
	src/examples/libopensmile_la-exampleSink.lo \
	src/examples/libopensmile_la-exampleSource.lo \
	src/examples/libopensmile_la-simpleMessageSender.lo \
	src/functionals/libopensmile_la-functionalComponent.lo \
	src/functionals/libopensmile_la-functionalCrossings.lo \
	src/functionals/libopensmile_la-functionalDCT.lo \
	src/functionals/libopensmile_la-functionalExtremes.lo \
	src/functionals/libopensmile_la-functionalLpc.lo \
	src/functionals/libopensmile_la-functionalMeans.lo \
	src/functionals/libopensmile_la-functionalMoments.lo \
	src/functionals/libopensmile_la-functionalOnset.lo \
	src/functionals/libopensmile_la-functionalPeaks.lo \
	src/functionals/libopensmile_la-functionalPeaks2.lo \
	src/functionals/libopensmile_la-functionalPercentiles.lo \
	src/functionals/libopensmile_la-functionalRegression.lo \
	src/functionals/libopensmile_la-functionalSamples.lo \
	src/functionals/libopensmile_la-functionalSegments.lo \
	src/functionals/libopensmile_la-functionalTimes.lo \
	src/functionals/libopensmile_la-functionals.lo \
	src/lld/libopensmile_la-lsp.lo \
	src/dsp/libopensmile_la-specScale.lo \
	src/io/libopensmile_la-libsvmSink.lo \
	src/iocore/libopensmile_la-arffSink.lo \
	src/iocore/libopensmile_la-arffSource.lo \
	src/iocore/libopensmile_la-csvSink.lo \
	src/iocore/libopensmile_la-csvSource.lo \
	src/iocore/libopensmile_la-datadumpSink.lo \
	src/iocore/libopensmile_la-htkSink.lo \
	src/iocore/libopensmile_la-htkSource.lo \
	src/iocore/libopensmile_la-waveSink.lo \
	src/iocore/libopensmile_la-waveSinkCut.lo \
	src/iocore/libopensmile_la-waveSource.lo \
	src/lld/libopensmile_la-cens.lo \
	src/lld/libopensmile_la-chroma.lo \
	src/lld/libopensmile_la-harmonics.lo \
	src/lld/libopensmile_la-formantLpc.lo \
	src/lld/libopensmile_la-formantSmoother.lo \
	src/lld/libopensmile_la-lpc.lo \
	src/lld/libopensmile_la-pitchDirection.lo \
	src/lld/libopensmile_la-pitchJitter.lo \
	src/lld/libopensmile_la-pitchShs.lo \
	src/lld/libopensmile_la-pitchSmootherViterbi.lo \
	src/lld/libopensmile_la-tonefilt.lo \
	src/lld/libopensmile_la-tonespec.lo \
	src/lldcore/libopensmile_la-energy.lo \
	src/lldcore/libopensmile_la-intensity.lo \
	src/lldcore/libopensmile_la-melspec.lo \
	src/lldcore/libopensmile_la-mfcc.lo \
	src/lldcore/libopensmile_la-mzcr.lo \
	src/lldcore/libopensmile_la-pitchACF.lo \
	src/lldcore/libopensmile_la-pitchBase.lo \
	src/lldcore/libopensmile_la-pitchSmoother.lo \
	src/lldcore/libopensmile_la-plp.lo \
	src/lldcore/libopensmile_la-spectral.lo \
	src/other/libopensmile_la-bowProducer.lo \
	src/other/libopensmile_la-maxIndex.lo \
	src/other/libopensmile_la-valbasedSelector.lo \
	src/other/libopensmile_la-vectorConcat.lo \
	src/other/libopensmile_la-vectorOperation.lo \
	src/portaudio/libopensmile_la-portaudioDuplex.lo \
	src/portaudio/libopensmile_la-portaudioSink.lo \
	src/portaudio/libopensmile_la-portaudioSource.lo \
	src/portaudio/libopensmile_la-portaudioWavplayer.lo \
	src/android/libopensmile_la-openslesSource.lo \
	src/android/libopensmile_la-jniMessageInterface.lo \
	src/rnn/libopensmile_la-rnn.lo \
	src/rnn/libopensmile_la-rnnProcessor.lo \
	src/rnn/libopensmile_la-rnnSink.lo \
	src/rnn/libopensmile_la-rnnVad2.lo \
	src/smileutil/libopensmile_la-smileUtil.lo \
	src/smileutil/libopensmile_la-smileUtilSpline.lo \
	src/smileutil/libopensmile_la-zerosolve.lo \
	src/video/libopensmile_la-openCVSource.lo
am__objects_2 = $(am__objects_1)
am_libopensmile_la_OBJECTS = $(am__objects_2)
libopensmile_la_OBJECTS = $(am_libopensmile_la_OBJECTS)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
libopensmile_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(AM_CXXFLAGS) $(CXXFLAGS) $(libopensmile_la_LDFLAGS) \
	$(LDFLAGS) -o $@
am_SMILExtract_OBJECTS =  \
	progsrc/smilextract/SMILExtract-SMILExtract.$(OBJEXT)
SMILExtract_OBJECTS = $(am_SMILExtract_OBJECTS)
SMILExtract_DEPENDENCIES = $(am__DEPENDENCIES_2)
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(srcdir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__maybe_remake_depfiles = depfiles
am__depfiles_remade =  \
	progsrc/smilextract/$(DEPDIR)/SMILExtract-SMILExtract.Po \
	src/android/$(DEPDIR)/libopensmile_la-jniMessageInterface.Plo \
	src/android/$(DEPDIR)/libopensmile_la-openslesSource.Plo \
	src/classifiers/$(DEPDIR)/libopensmile_la-libsvmliveSink.Plo \
	src/classifiers/$(DEPDIR)/libopensmile_la-svmSink.Plo \
	src/classifiers/julius/$(DEPDIR)/libopensmile_la-juliusSink.Plo \
	src/classifiers/libsvm/$(DEPDIR)/libopensmile_la-svm.Plo \
	src/core/$(DEPDIR)/libopensmile_la-commandlineParser.Plo \
	src/core/$(DEPDIR)/libopensmile_la-componentManager.Plo \
	src/core/$(DEPDIR)/libopensmile_la-configManager.Plo \
	src/core/$(DEPDIR)/libopensmile_la-dataMemory.Plo \
	src/core/$(DEPDIR)/libopensmile_la-dataProcessor.Plo \
	src/core/$(DEPDIR)/libopensmile_la-dataReader.Plo \
	src/core/$(DEPDIR)/libopensmile_la-dataSelector.Plo \
	src/core/$(DEPDIR)/libopensmile_la-dataSink.Plo \
	src/core/$(DEPDIR)/libopensmile_la-dataSource.Plo \
	src/core/$(DEPDIR)/libopensmile_la-dataWriter.Plo \
	src/core/$(DEPDIR)/libopensmile_la-exceptions.Plo \
	src/core/$(DEPDIR)/libopensmile_la-nullSink.Plo \
	src/core/$(DEPDIR)/libopensmile_la-smileCommon.Plo \
	src/core/$(DEPDIR)/libopensmile_la-smileComponent.Plo \
	src/core/$(DEPDIR)/libopensmile_la-smileLogger.Plo \
	src/core/$(DEPDIR)/libopensmile_la-vecToWinProcessor.Plo \
	src/core/$(DEPDIR)/libopensmile_la-vectorProcessor.Plo \
	src/core/$(DEPDIR)/libopensmile_la-vectorTransform.Plo \
	src/core/$(DEPDIR)/libopensmile_la-winToVecProcessor.Plo \
	src/core/$(DEPDIR)/libopensmile_la-windowProcessor.Plo \
	src/dsp/$(DEPDIR)/libopensmile_la-dbA.Plo \
	src/dsp/$(DEPDIR)/libopensmile_la-signalGenerator.Plo \
	src/dsp/$(DEPDIR)/libopensmile_la-smileResample.Plo \
	src/dsp/$(DEPDIR)/libopensmile_la-specResample.Plo \
	src/dsp/$(DEPDIR)/libopensmile_la-specScale.Plo \
	src/dsp/$(DEPDIR)/libopensmile_la-vadV1.Plo \
	src/dspcore/$(DEPDIR)/libopensmile_la-acf.Plo \
	src/dspcore/$(DEPDIR)/libopensmile_la-amdf.Plo \
	src/dspcore/$(DEPDIR)/libopensmile_la-contourSmoother.Plo \
	src/dspcore/$(DEPDIR)/libopensmile_la-deltaRegression.Plo \
	src/dspcore/$(DEPDIR)/libopensmile_la-fftmagphase.Plo \
	src/dspcore/$(DEPDIR)/libopensmile_la-fftsg.Plo \
	src/dspcore/$(DEPDIR)/libopensmile_la-framer.Plo \
	src/dspcore/$(DEPDIR)/libopensmile_la-fullinputMean.Plo \
	src/dspcore/$(DEPDIR)/libopensmile_la-fullturnMean.Plo \
	src/dspcore/$(DEPDIR)/libopensmile_la-monoMixdown.Plo \
	src/dspcore/$(DEPDIR)/libopensmile_la-preemphasis.Plo \
	src/dspcore/$(DEPDIR)/libopensmile_la-transformFft.Plo \
	src/dspcore/$(DEPDIR)/libopensmile_la-turnDetector.Plo \
	src/dspcore/$(DEPDIR)/libopensmile_la-vectorMVN.Plo \
	src/dspcore/$(DEPDIR)/libopensmile_la-vectorPreemphasis.Plo \
	src/dspcore/$(DEPDIR)/libopensmile_la-windower.Plo \
	src/examples/$(DEPDIR)/libopensmile_la-exampleSink.Plo \
	src/examples/$(DEPDIR)/libopensmile_la-exampleSource.Plo \
	src/examples/$(DEPDIR)/libopensmile_la-simpleMessageSender.Plo \
	src/functionals/$(DEPDIR)/libopensmile_la-functionalComponent.Plo \
	src/functionals/$(DEPDIR)/libopensmile_la-functionalCrossings.Plo \
	src/functionals/$(DEPDIR)/libopensmile_la-functionalDCT.Plo \
	src/functionals/$(DEPDIR)/libopensmile_la-functionalExtremes.Plo \
	src/functionals/$(DEPDIR)/libopensmile_la-functionalLpc.Plo \
	src/functionals/$(DEPDIR)/libopensmile_la-functionalMeans.Plo \
	src/functionals/$(DEPDIR)/libopensmile_la-functionalMoments.Plo \
	src/functionals/$(DEPDIR)/libopensmile_la-functionalOnset.Plo \
	src/functionals/$(DEPDIR)/libopensmile_la-functionalPeaks.Plo \
	src/functionals/$(DEPDIR)/libopensmile_la-functionalPeaks2.Plo \
	src/functionals/$(DEPDIR)/libopensmile_la-functionalPercentiles.Plo \
	src/functionals/$(DEPDIR)/libopensmile_la-functionalRegression.Plo \
	src/functionals/$(DEPDIR)/libopensmile_la-functionalSamples.Plo \
	src/functionals/$(DEPDIR)/libopensmile_la-functionalSegments.Plo \
	src/functionals/$(DEPDIR)/libopensmile_la-functionalTimes.Plo \
	src/functionals/$(DEPDIR)/libopensmile_la-functionals.Plo \
	src/io/$(DEPDIR)/libopensmile_la-libsvmSink.Plo \
	src/iocore/$(DEPDIR)/libopensmile_la-arffSink.Plo \
	src/iocore/$(DEPDIR)/libopensmile_la-arffSource.Plo \
	src/iocore/$(DEPDIR)/libopensmile_la-csvSink.Plo \
	src/iocore/$(DEPDIR)/libopensmile_la-csvSource.Plo \
	src/iocore/$(DEPDIR)/libopensmile_la-datadumpSink.Plo \
	src/iocore/$(DEPDIR)/libopensmile_la-htkSink.Plo \
	src/iocore/$(DEPDIR)/libopensmile_la-htkSource.Plo \
	src/iocore/$(DEPDIR)/libopensmile_la-waveSink.Plo \
	src/iocore/$(DEPDIR)/libopensmile_la-waveSinkCut.Plo \
	src/iocore/$(DEPDIR)/libopensmile_la-waveSource.Plo \
	src/lld/$(DEPDIR)/libopensmile_la-cens.Plo \
	src/lld/$(DEPDIR)/libopensmile_la-chroma.Plo \
	src/lld/$(DEPDIR)/libopensmile_la-formantLpc.Plo \
	src/lld/$(DEPDIR)/libopensmile_la-formantSmoother.Plo \
	src/lld/$(DEPDIR)/libopensmile_la-harmonics.Plo \
	src/lld/$(DEPDIR)/libopensmile_la-lpc.Plo \
	src/lld/$(DEPDIR)/libopensmile_la-lsp.Plo \
	src/lld/$(DEPDIR)/libopensmile_la-pitchDirection.Plo \
	src/lld/$(DEPDIR)/libopensmile_la-pitchJitter.Plo \
	src/lld/$(DEPDIR)/libopensmile_la-pitchShs.Plo \
	src/lld/$(DEPDIR)/libopensmile_la-pitchSmootherViterbi.Plo \
	src/lld/$(DEPDIR)/libopensmile_la-tonefilt.Plo \
	src/lld/$(DEPDIR)/libopensmile_la-tonespec.Plo \
	src/lldcore/$(DEPDIR)/libopensmile_la-energy.Plo \
	src/lldcore/$(DEPDIR)/libopensmile_la-intensity.Plo \
	src/lldcore/$(DEPDIR)/libopensmile_la-melspec.Plo \
	src/lldcore/$(DEPDIR)/libopensmile_la-mfcc.Plo \
	src/lldcore/$(DEPDIR)/libopensmile_la-mzcr.Plo \
	src/lldcore/$(DEPDIR)/libopensmile_la-pitchACF.Plo \
	src/lldcore/$(DEPDIR)/libopensmile_la-pitchBase.Plo \
	src/lldcore/$(DEPDIR)/libopensmile_la-pitchSmoother.Plo \
	src/lldcore/$(DEPDIR)/libopensmile_la-plp.Plo \
	src/lldcore/$(DEPDIR)/libopensmile_la-spectral.Plo \
	src/other/$(DEPDIR)/libopensmile_la-bowProducer.Plo \
	src/other/$(DEPDIR)/libopensmile_la-maxIndex.Plo \
	src/other/$(DEPDIR)/libopensmile_la-valbasedSelector.Plo \
	src/other/$(DEPDIR)/libopensmile_la-vectorConcat.Plo \
	src/other/$(DEPDIR)/libopensmile_la-vectorOperation.Plo \
	src/portaudio/$(DEPDIR)/libopensmile_la-portaudioDuplex.Plo \
	src/portaudio/$(DEPDIR)/libopensmile_la-portaudioSink.Plo \
	src/portaudio/$(DEPDIR)/libopensmile_la-portaudioSource.Plo \
	src/portaudio/$(DEPDIR)/libopensmile_la-portaudioWavplayer.Plo \
	src/rnn/$(DEPDIR)/libopensmile_la-rnn.Plo \
	src/rnn/$(DEPDIR)/libopensmile_la-rnnProcessor.Plo \
	src/rnn/$(DEPDIR)/libopensmile_la-rnnSink.Plo \
	src/rnn/$(DEPDIR)/libopensmile_la-rnnVad2.Plo \
	src/smileutil/$(DEPDIR)/libopensmile_la-smileUtil.Plo \
	src/smileutil/$(DEPDIR)/libopensmile_la-smileUtilSpline.Plo \
	src/smileutil/$(DEPDIR)/libopensmile_la-zerosolve.Plo \
	src/video/$(DEPDIR)/libopensmile_la-openCVSource.Plo
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_$(V))
am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_$(V))
am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
SOURCES = $(libopensmile_la_SOURCES) $(SMILExtract_SOURCES)
DIST_SOURCES = $(libopensmile_la_SOURCES) $(SMILExtract_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) \
	$(LISP)config.h.in
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
CSCOPE = cscope
AM_RECURSIVE_TARGETS = cscope
am__DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/config.h.in AUTHORS \
	COPYING ChangeLog INSTALL NEWS README compile config.guess \
	config.sub depcomp install-sh ltmain.sh missing
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
distdir = $(PACKAGE)-$(VERSION)
top_distdir = $(distdir)
am__remove_distdir = \
  if test -d "$(distdir)"; then \
    find "$(distdir)" -type d ! -perm -200 -exec chmod u+w {} ';' \
      && rm -rf "$(distdir)" \
      || { sleep 5 && rm -rf "$(distdir)"; }; \
  else :; fi
am__post_remove_distdir = $(am__remove_distdir)
DIST_ARCHIVES = $(distdir).tar.gz
GZIP_ENV = --best
DIST_TARGETS = dist-gzip
distuninstallcheck_listfiles = find . -type f -print
am__distuninstallcheck_listfiles = $(distuninstallcheck_listfiles) \
  | sed 's|^\./|$(prefix)/|' | grep -v '$(infodir)/dir$$'
distcleancheck_listfiles = find . -type f -print
ACLOCAL = ${SHELL} /Users/ali/Coding/opensmile-master/missing aclocal-1.16
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 1
ANDROID_LDFLAGS = 
AR = ar
AUTOCONF = ${SHELL} /Users/ali/Coding/opensmile-master/missing autoconf
AUTOHEADER = ${SHELL} /Users/ali/Coding/opensmile-master/missing autoheader
AUTOMAKE = ${SHELL} /Users/ali/Coding/opensmile-master/missing automake-1.16
AWK = awk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLIB = -ldl
DLLTOOL = false
DSYMUTIL = dsymutil
DUMPBIN = 
ECHO_C = \c
ECHO_N = 
ECHO_T = 
EGREP = /usr/bin/grep -E
EXEEXT = 
FGREP = /usr/bin/grep -F
GREP = /usr/bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LD = /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ld
LDFLAGS = 
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = lipo
LN_S = ln -s
LTLIBOBJS = 
LT_SYS_LIBRARY_PATH = 
MAKEINFO = ${SHELL} /Users/ali/Coding/opensmile-master/missing makeinfo
MANIFEST_TOOL = :
MKDIR_P = /Users/ali/Coding/opensmile-master/install-sh -c -d
NM = /usr/bin/nm -B
NMEDIT = nmedit
OBJDUMP = objdump
OBJEXT = o
OPENCV_CPPFLAGS = 
OPENCV_LDFLAGS = 
OPENCV_ROOT = no
OTOOL = otool
OTOOL64 = :
PACKAGE = opensmile
PACKAGE_BUGREPORT = 
PACKAGE_NAME = openSMILE
PACKAGE_STRING = openSMILE 2.3.0
PACKAGE_TARNAME = opensmile
PACKAGE_URL = 
PACKAGE_VERSION = 2.3.0
PATH_SEPARATOR = :
PORTAUDIO_CPPFLAGS = -I/usr/include
PORTAUDIO_LDFLAGS = -lportaudio
PORTAUDIO_ROOT = /usr
PTHREAD_CC = gcc
PTHREAD_CFLAGS = -D_THREAD_SAFE 
PTHREAD_LIBS = 
RANLIB = ranlib
SED = /usr/bin/sed
SET_MAKE = 
SHELL = /bin/sh
STRIP = strip
VERSION = 2.3.0
abs_builddir = /Users/ali/coding/opensmile-master
abs_srcdir = /Users/ali/Coding/opensmile-master
abs_top_builddir = /Users/ali/coding/opensmile-master
abs_top_srcdir = /Users/ali/Coding/opensmile-master
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_DUMPBIN = 
acx_pthread_config = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = x86_64-apple-darwin18.2.0
build_alias = 
build_cpu = x86_64
build_os = darwin18.2.0
build_vendor = apple
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-apple-darwin18.2.0
host_alias = 
host_cpu = x86_64
host_os = darwin18.2.0
host_vendor = apple
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /Users/ali/Coding/opensmile-master/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = /Users/ali/Coding/opensmile-master
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = 
top_builddir = .
top_srcdir = /Users/ali/Coding/opensmile-master
ACLOCAL_AMFLAGS = -I m4
AUTOMAKE_OPTIONS = subdir-objects
#bin_PROGRAMS += SEMAINExtract
SMILELIB_SOURCES = \
	src/classifiers/julius/juliusSink.cpp \
	src/classifiers/libsvm/svm.cpp \
	src/classifiers/libsvmliveSink.cpp \
	src/classifiers/svmSink.cpp \
	src/core/commandlineParser.cpp \
	src/core/componentManager.cpp \
	src/core/configManager.cpp \
	src/core/dataMemory.cpp \
	src/core/dataProcessor.cpp \
	src/core/dataReader.cpp \
	src/core/dataSelector.cpp \
	src/core/dataSink.cpp \
	src/core/dataSource.cpp \
	src/core/dataWriter.cpp \
	src/core/exceptions.cpp \
	src/core/nullSink.cpp \
	src/core/smileCommon.cpp \
	src/core/smileComponent.cpp \
	src/core/smileLogger.cpp \
	src/core/vecToWinProcessor.cpp \
	src/core/vectorProcessor.cpp \
	src/core/vectorTransform.cpp \
	src/core/winToVecProcessor.cpp \
	src/core/windowProcessor.cpp \
	src/dsp/dbA.cpp \
	src/dsp/signalGenerator.cpp \
	src/dsp/smileResample.cpp \
	src/dsp/specResample.cpp \
	src/dsp/vadV1.cpp \
	src/dspcore/acf.cpp \
	src/dspcore/amdf.cpp \
	src/dspcore/contourSmoother.cpp \
	src/dspcore/deltaRegression.cpp \
	src/dspcore/fftmagphase.cpp \
	src/dspcore/fftsg.c \
	src/dspcore/framer.cpp \
	src/dspcore/fullinputMean.cpp \
	src/dspcore/fullturnMean.cpp \
	src/dspcore/monoMixdown.cpp \
	src/dspcore/preemphasis.cpp \
	src/dspcore/transformFft.cpp \
	src/dspcore/turnDetector.cpp \
	src/dspcore/vectorMVN.cpp \
	src/dspcore/vectorPreemphasis.cpp \
	src/dspcore/windower.cpp \
	src/examples/exampleSink.cpp \
	src/examples/exampleSource.cpp \
        src/examples/simpleMessageSender.cpp \
	src/functionals/functionalComponent.cpp \
	src/functionals/functionalCrossings.cpp \
	src/functionals/functionalDCT.cpp \
	src/functionals/functionalExtremes.cpp \
	src/functionals/functionalLpc.cpp \
	src/functionals/functionalMeans.cpp \
	src/functionals/functionalMoments.cpp \
	src/functionals/functionalOnset.cpp \
	src/functionals/functionalPeaks.cpp \
	src/functionals/functionalPeaks2.cpp \
	src/functionals/functionalPercentiles.cpp \
	src/functionals/functionalRegression.cpp \
	src/functionals/functionalSamples.cpp \
	src/functionals/functionalSegments.cpp \
	src/functionals/functionalTimes.cpp \
	src/functionals/functionals.cpp \
	src/lld/lsp.cpp \
	src/dsp/specScale.cpp \
	src/io/libsvmSink.cpp \
	src/iocore/arffSink.cpp \
	src/iocore/arffSource.cpp \
	src/iocore/csvSink.cpp \
	src/iocore/csvSource.cpp \
	src/iocore/datadumpSink.cpp \
	src/iocore/htkSink.cpp \
	src/iocore/htkSource.cpp \
	src/iocore/waveSink.cpp \
	src/iocore/waveSinkCut.cpp \
	src/iocore/waveSource.cpp \
	src/lld/cens.cpp \
	src/lld/chroma.cpp \
	src/lld/harmonics.cpp \
	src/lld/formantLpc.cpp \
	src/lld/formantSmoother.cpp \
	src/lld/lpc.cpp \
	src/lld/pitchDirection.cpp \
	src/lld/pitchJitter.cpp \
	src/lld/pitchShs.cpp \
	src/lld/pitchSmootherViterbi.cpp \
	src/lld/tonefilt.cpp \
	src/lld/tonespec.cpp \
	src/lldcore/energy.cpp \
	src/lldcore/intensity.cpp \
	src/lldcore/melspec.cpp \
	src/lldcore/mfcc.cpp \
	src/lldcore/mzcr.cpp \
	src/lldcore/pitchACF.cpp \
	src/lldcore/pitchBase.cpp \
	src/lldcore/pitchSmoother.cpp \
	src/lldcore/plp.cpp \
	src/lldcore/spectral.cpp \
	src/other/bowProducer.cpp \
	src/other/maxIndex.cpp \
	src/other/valbasedSelector.cpp \
	src/other/vectorConcat.cpp \
	src/other/vectorOperation.cpp \
	src/portaudio/portaudioDuplex.cpp \
	src/portaudio/portaudioSink.cpp \
	src/portaudio/portaudioSource.cpp \
	src/portaudio/portaudioWavplayer.cpp \
        src/android/openslesSource.cpp \
        src/android/jniMessageInterface.cpp \
	src/rnn/rnn.cpp \
	src/rnn/rnnProcessor.cpp \
	src/rnn/rnnSink.cpp \
	src/rnn/rnnVad2.cpp \
	src/smileutil/smileUtil.c \
	src/smileutil/smileUtilSpline.c \
	src/smileutil/zerosolve.cpp \
	src/video/openCVSource.cpp

SMILE_SOURCES = $(SMILELIB_SOURCES)
SMILE_CPPFLAGS = -Isrc/include -Iprogsrc/include $(SEMAINEAPI_CPPFLAGS) $(PORTAUDIO_CPPFLAGS) $(OPENCV_CPPFLAGS) -ggdb $(PTHREAD_CFLAGS)
SMILE_LIBS = $(PORTAUDIO_LDFLAGS) $(OPENCV_LDFLAGS) -lm $(SEMAINEAPI_LDFLAGS) $(PTHREAD_LIBS) $(DLIB)
SMILExtract_SOURCES = progsrc/smilextract/SMILExtract.cpp 
SMILExtract_CPPFLAGS = $(SMILE_CPPFLAGS)
SMILExtract_LDADD = $(SMILE_LIBS) -lopensmile
lib_LTLIBRARIES = libopensmile.la
libopensmile_la_SOURCES = $(SMILE_SOURCES)
libopensmile_la_CPPFLAGS = $(SMILE_CPPFLAGS)
libopensmile_la_LIBADD = $(SMILE_LIBS)
libopensmile_la_LDFLAGS = --no-undefined
all: config.h
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .c .cpp .lo .o .obj
am--refresh: Makefile
	@:
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      echo ' cd $(srcdir) && $(AUTOMAKE) --gnu'; \
	      $(am__cd) $(srcdir) && $(AUTOMAKE) --gnu \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    echo ' $(SHELL) ./config.status'; \
	    $(SHELL) ./config.status;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__maybe_remake_depfiles)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__maybe_remake_depfiles);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	$(SHELL) ./config.status --recheck

$(top_srcdir)/configure:  $(am__configure_deps)
	$(am__cd) $(srcdir) && $(AUTOCONF)
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	$(am__cd) $(srcdir) && $(ACLOCAL) $(ACLOCAL_AMFLAGS)
$(am__aclocal_m4_deps):

config.h: stamp-h1
	@test -f $@ || rm -f stamp-h1
	@test -f $@ || $(MAKE) $(AM_MAKEFLAGS) stamp-h1

stamp-h1: $(srcdir)/config.h.in $(top_builddir)/config.status
	@rm -f stamp-h1
	cd $(top_builddir) && $(SHELL) ./config.status config.h
$(srcdir)/config.h.in:  $(am__configure_deps) 
	($(am__cd) $(top_srcdir) && $(AUTOHEADER))
	rm -f stamp-h1
	touch $@

distclean-hdr:
	-rm -f config.h stamp-h1
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	 || test -f $$p1 \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(libdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(libdir)" || exit 1; \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(libdir)"; \
	}

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$f"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}
src/classifiers/julius/$(am__dirstamp):
	@$(MKDIR_P) src/classifiers/julius
	@: > src/classifiers/julius/$(am__dirstamp)
src/classifiers/julius/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/classifiers/julius/$(DEPDIR)
	@: > src/classifiers/julius/$(DEPDIR)/$(am__dirstamp)
src/classifiers/julius/libopensmile_la-juliusSink.lo:  \
	src/classifiers/julius/$(am__dirstamp) \
	src/classifiers/julius/$(DEPDIR)/$(am__dirstamp)
src/classifiers/libsvm/$(am__dirstamp):
	@$(MKDIR_P) src/classifiers/libsvm
	@: > src/classifiers/libsvm/$(am__dirstamp)
src/classifiers/libsvm/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/classifiers/libsvm/$(DEPDIR)
	@: > src/classifiers/libsvm/$(DEPDIR)/$(am__dirstamp)
src/classifiers/libsvm/libopensmile_la-svm.lo:  \
	src/classifiers/libsvm/$(am__dirstamp) \
	src/classifiers/libsvm/$(DEPDIR)/$(am__dirstamp)
src/classifiers/$(am__dirstamp):
	@$(MKDIR_P) src/classifiers
	@: > src/classifiers/$(am__dirstamp)
src/classifiers/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/classifiers/$(DEPDIR)
	@: > src/classifiers/$(DEPDIR)/$(am__dirstamp)
src/classifiers/libopensmile_la-libsvmliveSink.lo:  \
	src/classifiers/$(am__dirstamp) \
	src/classifiers/$(DEPDIR)/$(am__dirstamp)
src/classifiers/libopensmile_la-svmSink.lo:  \
	src/classifiers/$(am__dirstamp) \
	src/classifiers/$(DEPDIR)/$(am__dirstamp)
src/core/$(am__dirstamp):
	@$(MKDIR_P) src/core
	@: > src/core/$(am__dirstamp)
src/core/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/core/$(DEPDIR)
	@: > src/core/$(DEPDIR)/$(am__dirstamp)
src/core/libopensmile_la-commandlineParser.lo:  \
	src/core/$(am__dirstamp) src/core/$(DEPDIR)/$(am__dirstamp)
src/core/libopensmile_la-componentManager.lo:  \
	src/core/$(am__dirstamp) src/core/$(DEPDIR)/$(am__dirstamp)
src/core/libopensmile_la-configManager.lo: src/core/$(am__dirstamp) \
	src/core/$(DEPDIR)/$(am__dirstamp)
src/core/libopensmile_la-dataMemory.lo: src/core/$(am__dirstamp) \
	src/core/$(DEPDIR)/$(am__dirstamp)
src/core/libopensmile_la-dataProcessor.lo: src/core/$(am__dirstamp) \
	src/core/$(DEPDIR)/$(am__dirstamp)
src/core/libopensmile_la-dataReader.lo: src/core/$(am__dirstamp) \
	src/core/$(DEPDIR)/$(am__dirstamp)
src/core/libopensmile_la-dataSelector.lo: src/core/$(am__dirstamp) \
	src/core/$(DEPDIR)/$(am__dirstamp)
src/core/libopensmile_la-dataSink.lo: src/core/$(am__dirstamp) \
	src/core/$(DEPDIR)/$(am__dirstamp)
src/core/libopensmile_la-dataSource.lo: src/core/$(am__dirstamp) \
	src/core/$(DEPDIR)/$(am__dirstamp)
src/core/libopensmile_la-dataWriter.lo: src/core/$(am__dirstamp) \
	src/core/$(DEPDIR)/$(am__dirstamp)
src/core/libopensmile_la-exceptions.lo: src/core/$(am__dirstamp) \
	src/core/$(DEPDIR)/$(am__dirstamp)
src/core/libopensmile_la-nullSink.lo: src/core/$(am__dirstamp) \
	src/core/$(DEPDIR)/$(am__dirstamp)
src/core/libopensmile_la-smileCommon.lo: src/core/$(am__dirstamp) \
	src/core/$(DEPDIR)/$(am__dirstamp)
src/core/libopensmile_la-smileComponent.lo: src/core/$(am__dirstamp) \
	src/core/$(DEPDIR)/$(am__dirstamp)
src/core/libopensmile_la-smileLogger.lo: src/core/$(am__dirstamp) \
	src/core/$(DEPDIR)/$(am__dirstamp)
src/core/libopensmile_la-vecToWinProcessor.lo:  \
	src/core/$(am__dirstamp) src/core/$(DEPDIR)/$(am__dirstamp)
src/core/libopensmile_la-vectorProcessor.lo: src/core/$(am__dirstamp) \
	src/core/$(DEPDIR)/$(am__dirstamp)
src/core/libopensmile_la-vectorTransform.lo: src/core/$(am__dirstamp) \
	src/core/$(DEPDIR)/$(am__dirstamp)
src/core/libopensmile_la-winToVecProcessor.lo:  \
	src/core/$(am__dirstamp) src/core/$(DEPDIR)/$(am__dirstamp)
src/core/libopensmile_la-windowProcessor.lo: src/core/$(am__dirstamp) \
	src/core/$(DEPDIR)/$(am__dirstamp)
src/dsp/$(am__dirstamp):
	@$(MKDIR_P) src/dsp
	@: > src/dsp/$(am__dirstamp)
src/dsp/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/dsp/$(DEPDIR)
	@: > src/dsp/$(DEPDIR)/$(am__dirstamp)
src/dsp/libopensmile_la-dbA.lo: src/dsp/$(am__dirstamp) \
	src/dsp/$(DEPDIR)/$(am__dirstamp)
src/dsp/libopensmile_la-signalGenerator.lo: src/dsp/$(am__dirstamp) \
	src/dsp/$(DEPDIR)/$(am__dirstamp)
src/dsp/libopensmile_la-smileResample.lo: src/dsp/$(am__dirstamp) \
	src/dsp/$(DEPDIR)/$(am__dirstamp)
src/dsp/libopensmile_la-specResample.lo: src/dsp/$(am__dirstamp) \
	src/dsp/$(DEPDIR)/$(am__dirstamp)
src/dsp/libopensmile_la-vadV1.lo: src/dsp/$(am__dirstamp) \
	src/dsp/$(DEPDIR)/$(am__dirstamp)
src/dspcore/$(am__dirstamp):
	@$(MKDIR_P) src/dspcore
	@: > src/dspcore/$(am__dirstamp)
src/dspcore/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/dspcore/$(DEPDIR)
	@: > src/dspcore/$(DEPDIR)/$(am__dirstamp)
src/dspcore/libopensmile_la-acf.lo: src/dspcore/$(am__dirstamp) \
	src/dspcore/$(DEPDIR)/$(am__dirstamp)
src/dspcore/libopensmile_la-amdf.lo: src/dspcore/$(am__dirstamp) \
	src/dspcore/$(DEPDIR)/$(am__dirstamp)
src/dspcore/libopensmile_la-contourSmoother.lo:  \
	src/dspcore/$(am__dirstamp) \
	src/dspcore/$(DEPDIR)/$(am__dirstamp)
src/dspcore/libopensmile_la-deltaRegression.lo:  \
	src/dspcore/$(am__dirstamp) \
	src/dspcore/$(DEPDIR)/$(am__dirstamp)
src/dspcore/libopensmile_la-fftmagphase.lo:  \
	src/dspcore/$(am__dirstamp) \
	src/dspcore/$(DEPDIR)/$(am__dirstamp)
src/dspcore/libopensmile_la-fftsg.lo: src/dspcore/$(am__dirstamp) \
	src/dspcore/$(DEPDIR)/$(am__dirstamp)
src/dspcore/libopensmile_la-framer.lo: src/dspcore/$(am__dirstamp) \
	src/dspcore/$(DEPDIR)/$(am__dirstamp)
src/dspcore/libopensmile_la-fullinputMean.lo:  \
	src/dspcore/$(am__dirstamp) \
	src/dspcore/$(DEPDIR)/$(am__dirstamp)
src/dspcore/libopensmile_la-fullturnMean.lo:  \
	src/dspcore/$(am__dirstamp) \
	src/dspcore/$(DEPDIR)/$(am__dirstamp)
src/dspcore/libopensmile_la-monoMixdown.lo:  \
	src/dspcore/$(am__dirstamp) \
	src/dspcore/$(DEPDIR)/$(am__dirstamp)
src/dspcore/libopensmile_la-preemphasis.lo:  \
	src/dspcore/$(am__dirstamp) \
	src/dspcore/$(DEPDIR)/$(am__dirstamp)
src/dspcore/libopensmile_la-transformFft.lo:  \
	src/dspcore/$(am__dirstamp) \
	src/dspcore/$(DEPDIR)/$(am__dirstamp)
src/dspcore/libopensmile_la-turnDetector.lo:  \
	src/dspcore/$(am__dirstamp) \
	src/dspcore/$(DEPDIR)/$(am__dirstamp)
src/dspcore/libopensmile_la-vectorMVN.lo: src/dspcore/$(am__dirstamp) \
	src/dspcore/$(DEPDIR)/$(am__dirstamp)
src/dspcore/libopensmile_la-vectorPreemphasis.lo:  \
	src/dspcore/$(am__dirstamp) \
	src/dspcore/$(DEPDIR)/$(am__dirstamp)
src/dspcore/libopensmile_la-windower.lo: src/dspcore/$(am__dirstamp) \
	src/dspcore/$(DEPDIR)/$(am__dirstamp)
src/examples/$(am__dirstamp):
	@$(MKDIR_P) src/examples
	@: > src/examples/$(am__dirstamp)
src/examples/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/examples/$(DEPDIR)
	@: > src/examples/$(DEPDIR)/$(am__dirstamp)
src/examples/libopensmile_la-exampleSink.lo:  \
	src/examples/$(am__dirstamp) \
	src/examples/$(DEPDIR)/$(am__dirstamp)
src/examples/libopensmile_la-exampleSource.lo:  \
	src/examples/$(am__dirstamp) \
	src/examples/$(DEPDIR)/$(am__dirstamp)
src/examples/libopensmile_la-simpleMessageSender.lo:  \
	src/examples/$(am__dirstamp) \
	src/examples/$(DEPDIR)/$(am__dirstamp)
src/functionals/$(am__dirstamp):
	@$(MKDIR_P) src/functionals
	@: > src/functionals/$(am__dirstamp)
src/functionals/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/functionals/$(DEPDIR)
	@: > src/functionals/$(DEPDIR)/$(am__dirstamp)
src/functionals/libopensmile_la-functionalComponent.lo:  \
	src/functionals/$(am__dirstamp) \
	src/functionals/$(DEPDIR)/$(am__dirstamp)
src/functionals/libopensmile_la-functionalCrossings.lo:  \
	src/functionals/$(am__dirstamp) \
	src/functionals/$(DEPDIR)/$(am__dirstamp)
src/functionals/libopensmile_la-functionalDCT.lo:  \
	src/functionals/$(am__dirstamp) \
	src/functionals/$(DEPDIR)/$(am__dirstamp)
src/functionals/libopensmile_la-functionalExtremes.lo:  \
	src/functionals/$(am__dirstamp) \
	src/functionals/$(DEPDIR)/$(am__dirstamp)
src/functionals/libopensmile_la-functionalLpc.lo:  \
	src/functionals/$(am__dirstamp) \
	src/functionals/$(DEPDIR)/$(am__dirstamp)
src/functionals/libopensmile_la-functionalMeans.lo:  \
	src/functionals/$(am__dirstamp) \
	src/functionals/$(DEPDIR)/$(am__dirstamp)
src/functionals/libopensmile_la-functionalMoments.lo:  \
	src/functionals/$(am__dirstamp) \
	src/functionals/$(DEPDIR)/$(am__dirstamp)
src/functionals/libopensmile_la-functionalOnset.lo:  \
	src/functionals/$(am__dirstamp) \
	src/functionals/$(DEPDIR)/$(am__dirstamp)
src/functionals/libopensmile_la-functionalPeaks.lo:  \
	src/functionals/$(am__dirstamp) \
	src/functionals/$(DEPDIR)/$(am__dirstamp)
src/functionals/libopensmile_la-functionalPeaks2.lo:  \
	src/functionals/$(am__dirstamp) \
	src/functionals/$(DEPDIR)/$(am__dirstamp)
src/functionals/libopensmile_la-functionalPercentiles.lo:  \
	src/functionals/$(am__dirstamp) \
	src/functionals/$(DEPDIR)/$(am__dirstamp)
src/functionals/libopensmile_la-functionalRegression.lo:  \
	src/functionals/$(am__dirstamp) \
	src/functionals/$(DEPDIR)/$(am__dirstamp)
src/functionals/libopensmile_la-functionalSamples.lo:  \
	src/functionals/$(am__dirstamp) \
	src/functionals/$(DEPDIR)/$(am__dirstamp)
src/functionals/libopensmile_la-functionalSegments.lo:  \
	src/functionals/$(am__dirstamp) \
	src/functionals/$(DEPDIR)/$(am__dirstamp)
src/functionals/libopensmile_la-functionalTimes.lo:  \
	src/functionals/$(am__dirstamp) \
	src/functionals/$(DEPDIR)/$(am__dirstamp)
src/functionals/libopensmile_la-functionals.lo:  \
	src/functionals/$(am__dirstamp) \
	src/functionals/$(DEPDIR)/$(am__dirstamp)
src/lld/$(am__dirstamp):
	@$(MKDIR_P) src/lld
	@: > src/lld/$(am__dirstamp)
src/lld/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/lld/$(DEPDIR)
	@: > src/lld/$(DEPDIR)/$(am__dirstamp)
src/lld/libopensmile_la-lsp.lo: src/lld/$(am__dirstamp) \
	src/lld/$(DEPDIR)/$(am__dirstamp)
src/dsp/libopensmile_la-specScale.lo: src/dsp/$(am__dirstamp) \
	src/dsp/$(DEPDIR)/$(am__dirstamp)
src/io/$(am__dirstamp):
	@$(MKDIR_P) src/io
	@: > src/io/$(am__dirstamp)
src/io/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/io/$(DEPDIR)
	@: > src/io/$(DEPDIR)/$(am__dirstamp)
src/io/libopensmile_la-libsvmSink.lo: src/io/$(am__dirstamp) \
	src/io/$(DEPDIR)/$(am__dirstamp)
src/iocore/$(am__dirstamp):
	@$(MKDIR_P) src/iocore
	@: > src/iocore/$(am__dirstamp)
src/iocore/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/iocore/$(DEPDIR)
	@: > src/iocore/$(DEPDIR)/$(am__dirstamp)
src/iocore/libopensmile_la-arffSink.lo: src/iocore/$(am__dirstamp) \
	src/iocore/$(DEPDIR)/$(am__dirstamp)
src/iocore/libopensmile_la-arffSource.lo: src/iocore/$(am__dirstamp) \
	src/iocore/$(DEPDIR)/$(am__dirstamp)
src/iocore/libopensmile_la-csvSink.lo: src/iocore/$(am__dirstamp) \
	src/iocore/$(DEPDIR)/$(am__dirstamp)
src/iocore/libopensmile_la-csvSource.lo: src/iocore/$(am__dirstamp) \
	src/iocore/$(DEPDIR)/$(am__dirstamp)
src/iocore/libopensmile_la-datadumpSink.lo:  \
	src/iocore/$(am__dirstamp) \
	src/iocore/$(DEPDIR)/$(am__dirstamp)
src/iocore/libopensmile_la-htkSink.lo: src/iocore/$(am__dirstamp) \
	src/iocore/$(DEPDIR)/$(am__dirstamp)
src/iocore/libopensmile_la-htkSource.lo: src/iocore/$(am__dirstamp) \
	src/iocore/$(DEPDIR)/$(am__dirstamp)
src/iocore/libopensmile_la-waveSink.lo: src/iocore/$(am__dirstamp) \
	src/iocore/$(DEPDIR)/$(am__dirstamp)
src/iocore/libopensmile_la-waveSinkCut.lo: src/iocore/$(am__dirstamp) \
	src/iocore/$(DEPDIR)/$(am__dirstamp)
src/iocore/libopensmile_la-waveSource.lo: src/iocore/$(am__dirstamp) \
	src/iocore/$(DEPDIR)/$(am__dirstamp)
src/lld/libopensmile_la-cens.lo: src/lld/$(am__dirstamp) \
	src/lld/$(DEPDIR)/$(am__dirstamp)
src/lld/libopensmile_la-chroma.lo: src/lld/$(am__dirstamp) \
	src/lld/$(DEPDIR)/$(am__dirstamp)
src/lld/libopensmile_la-harmonics.lo: src/lld/$(am__dirstamp) \
	src/lld/$(DEPDIR)/$(am__dirstamp)
src/lld/libopensmile_la-formantLpc.lo: src/lld/$(am__dirstamp) \
	src/lld/$(DEPDIR)/$(am__dirstamp)
src/lld/libopensmile_la-formantSmoother.lo: src/lld/$(am__dirstamp) \
	src/lld/$(DEPDIR)/$(am__dirstamp)
src/lld/libopensmile_la-lpc.lo: src/lld/$(am__dirstamp) \
	src/lld/$(DEPDIR)/$(am__dirstamp)
src/lld/libopensmile_la-pitchDirection.lo: src/lld/$(am__dirstamp) \
	src/lld/$(DEPDIR)/$(am__dirstamp)
src/lld/libopensmile_la-pitchJitter.lo: src/lld/$(am__dirstamp) \
	src/lld/$(DEPDIR)/$(am__dirstamp)
src/lld/libopensmile_la-pitchShs.lo: src/lld/$(am__dirstamp) \
	src/lld/$(DEPDIR)/$(am__dirstamp)
src/lld/libopensmile_la-pitchSmootherViterbi.lo:  \
	src/lld/$(am__dirstamp) src/lld/$(DEPDIR)/$(am__dirstamp)
src/lld/libopensmile_la-tonefilt.lo: src/lld/$(am__dirstamp) \
	src/lld/$(DEPDIR)/$(am__dirstamp)
src/lld/libopensmile_la-tonespec.lo: src/lld/$(am__dirstamp) \
	src/lld/$(DEPDIR)/$(am__dirstamp)
src/lldcore/$(am__dirstamp):
	@$(MKDIR_P) src/lldcore
	@: > src/lldcore/$(am__dirstamp)
src/lldcore/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/lldcore/$(DEPDIR)
	@: > src/lldcore/$(DEPDIR)/$(am__dirstamp)
src/lldcore/libopensmile_la-energy.lo: src/lldcore/$(am__dirstamp) \
	src/lldcore/$(DEPDIR)/$(am__dirstamp)
src/lldcore/libopensmile_la-intensity.lo: src/lldcore/$(am__dirstamp) \
	src/lldcore/$(DEPDIR)/$(am__dirstamp)
src/lldcore/libopensmile_la-melspec.lo: src/lldcore/$(am__dirstamp) \
	src/lldcore/$(DEPDIR)/$(am__dirstamp)
src/lldcore/libopensmile_la-mfcc.lo: src/lldcore/$(am__dirstamp) \
	src/lldcore/$(DEPDIR)/$(am__dirstamp)
src/lldcore/libopensmile_la-mzcr.lo: src/lldcore/$(am__dirstamp) \
	src/lldcore/$(DEPDIR)/$(am__dirstamp)
src/lldcore/libopensmile_la-pitchACF.lo: src/lldcore/$(am__dirstamp) \
	src/lldcore/$(DEPDIR)/$(am__dirstamp)
src/lldcore/libopensmile_la-pitchBase.lo: src/lldcore/$(am__dirstamp) \
	src/lldcore/$(DEPDIR)/$(am__dirstamp)
src/lldcore/libopensmile_la-pitchSmoother.lo:  \
	src/lldcore/$(am__dirstamp) \
	src/lldcore/$(DEPDIR)/$(am__dirstamp)
src/lldcore/libopensmile_la-plp.lo: src/lldcore/$(am__dirstamp) \
	src/lldcore/$(DEPDIR)/$(am__dirstamp)
src/lldcore/libopensmile_la-spectral.lo: src/lldcore/$(am__dirstamp) \
	src/lldcore/$(DEPDIR)/$(am__dirstamp)
src/other/$(am__dirstamp):
	@$(MKDIR_P) src/other
	@: > src/other/$(am__dirstamp)
src/other/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/other/$(DEPDIR)
	@: > src/other/$(DEPDIR)/$(am__dirstamp)
src/other/libopensmile_la-bowProducer.lo: src/other/$(am__dirstamp) \
	src/other/$(DEPDIR)/$(am__dirstamp)
src/other/libopensmile_la-maxIndex.lo: src/other/$(am__dirstamp) \
	src/other/$(DEPDIR)/$(am__dirstamp)
src/other/libopensmile_la-valbasedSelector.lo:  \
	src/other/$(am__dirstamp) src/other/$(DEPDIR)/$(am__dirstamp)
src/other/libopensmile_la-vectorConcat.lo: src/other/$(am__dirstamp) \
	src/other/$(DEPDIR)/$(am__dirstamp)
src/other/libopensmile_la-vectorOperation.lo:  \
	src/other/$(am__dirstamp) src/other/$(DEPDIR)/$(am__dirstamp)
src/portaudio/$(am__dirstamp):
	@$(MKDIR_P) src/portaudio
	@: > src/portaudio/$(am__dirstamp)
src/portaudio/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/portaudio/$(DEPDIR)
	@: > src/portaudio/$(DEPDIR)/$(am__dirstamp)
src/portaudio/libopensmile_la-portaudioDuplex.lo:  \
	src/portaudio/$(am__dirstamp) \
	src/portaudio/$(DEPDIR)/$(am__dirstamp)
src/portaudio/libopensmile_la-portaudioSink.lo:  \
	src/portaudio/$(am__dirstamp) \
	src/portaudio/$(DEPDIR)/$(am__dirstamp)
src/portaudio/libopensmile_la-portaudioSource.lo:  \
	src/portaudio/$(am__dirstamp) \
	src/portaudio/$(DEPDIR)/$(am__dirstamp)
src/portaudio/libopensmile_la-portaudioWavplayer.lo:  \
	src/portaudio/$(am__dirstamp) \
	src/portaudio/$(DEPDIR)/$(am__dirstamp)
src/android/$(am__dirstamp):
	@$(MKDIR_P) src/android
	@: > src/android/$(am__dirstamp)
src/android/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/android/$(DEPDIR)
	@: > src/android/$(DEPDIR)/$(am__dirstamp)
src/android/libopensmile_la-openslesSource.lo:  \
	src/android/$(am__dirstamp) \
	src/android/$(DEPDIR)/$(am__dirstamp)
src/android/libopensmile_la-jniMessageInterface.lo:  \
	src/android/$(am__dirstamp) \
	src/android/$(DEPDIR)/$(am__dirstamp)
src/rnn/$(am__dirstamp):
	@$(MKDIR_P) src/rnn
	@: > src/rnn/$(am__dirstamp)
src/rnn/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/rnn/$(DEPDIR)
	@: > src/rnn/$(DEPDIR)/$(am__dirstamp)
src/rnn/libopensmile_la-rnn.lo: src/rnn/$(am__dirstamp) \
	src/rnn/$(DEPDIR)/$(am__dirstamp)
src/rnn/libopensmile_la-rnnProcessor.lo: src/rnn/$(am__dirstamp) \
	src/rnn/$(DEPDIR)/$(am__dirstamp)
src/rnn/libopensmile_la-rnnSink.lo: src/rnn/$(am__dirstamp) \
	src/rnn/$(DEPDIR)/$(am__dirstamp)
src/rnn/libopensmile_la-rnnVad2.lo: src/rnn/$(am__dirstamp) \
	src/rnn/$(DEPDIR)/$(am__dirstamp)
src/smileutil/$(am__dirstamp):
	@$(MKDIR_P) src/smileutil
	@: > src/smileutil/$(am__dirstamp)
src/smileutil/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/smileutil/$(DEPDIR)
	@: > src/smileutil/$(DEPDIR)/$(am__dirstamp)
src/smileutil/libopensmile_la-smileUtil.lo:  \
	src/smileutil/$(am__dirstamp) \
	src/smileutil/$(DEPDIR)/$(am__dirstamp)
src/smileutil/libopensmile_la-smileUtilSpline.lo:  \
	src/smileutil/$(am__dirstamp) \
	src/smileutil/$(DEPDIR)/$(am__dirstamp)
src/smileutil/libopensmile_la-zerosolve.lo:  \
	src/smileutil/$(am__dirstamp) \
	src/smileutil/$(DEPDIR)/$(am__dirstamp)
src/video/$(am__dirstamp):
	@$(MKDIR_P) src/video
	@: > src/video/$(am__dirstamp)
src/video/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/video/$(DEPDIR)
	@: > src/video/$(DEPDIR)/$(am__dirstamp)
src/video/libopensmile_la-openCVSource.lo: src/video/$(am__dirstamp) \
	src/video/$(DEPDIR)/$(am__dirstamp)

libopensmile.la: $(libopensmile_la_OBJECTS) $(libopensmile_la_DEPENDENCIES) $(EXTRA_libopensmile_la_DEPENDENCIES) 
	$(AM_V_CXXLD)$(libopensmile_la_LINK) -rpath $(libdir) $(libopensmile_la_OBJECTS) $(libopensmile_la_LIBADD) $(LIBS)
progsrc/smilextract/$(am__dirstamp):
	@$(MKDIR_P) progsrc/smilextract
	@: > progsrc/smilextract/$(am__dirstamp)
progsrc/smilextract/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) progsrc/smilextract/$(DEPDIR)
	@: > progsrc/smilextract/$(DEPDIR)/$(am__dirstamp)
progsrc/smilextract/SMILExtract-SMILExtract.$(OBJEXT):  \
	progsrc/smilextract/$(am__dirstamp) \
	progsrc/smilextract/$(DEPDIR)/$(am__dirstamp)

SMILExtract$(EXEEXT): $(SMILExtract_OBJECTS) $(SMILExtract_DEPENDENCIES) $(EXTRA_SMILExtract_DEPENDENCIES) 
	@rm -f SMILExtract$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(SMILExtract_OBJECTS) $(SMILExtract_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)
	-rm -f progsrc/smilextract/*.$(OBJEXT)
	-rm -f src/android/*.$(OBJEXT)
	-rm -f src/android/*.lo
	-rm -f src/classifiers/*.$(OBJEXT)
	-rm -f src/classifiers/*.lo
	-rm -f src/classifiers/julius/*.$(OBJEXT)
	-rm -f src/classifiers/julius/*.lo
	-rm -f src/classifiers/libsvm/*.$(OBJEXT)
	-rm -f src/classifiers/libsvm/*.lo
	-rm -f src/core/*.$(OBJEXT)
	-rm -f src/core/*.lo
	-rm -f src/dsp/*.$(OBJEXT)
	-rm -f src/dsp/*.lo
	-rm -f src/dspcore/*.$(OBJEXT)
	-rm -f src/dspcore/*.lo
	-rm -f src/examples/*.$(OBJEXT)
	-rm -f src/examples/*.lo
	-rm -f src/functionals/*.$(OBJEXT)
	-rm -f src/functionals/*.lo
	-rm -f src/io/*.$(OBJEXT)
	-rm -f src/io/*.lo
	-rm -f src/iocore/*.$(OBJEXT)
	-rm -f src/iocore/*.lo
	-rm -f src/lld/*.$(OBJEXT)
	-rm -f src/lld/*.lo
	-rm -f src/lldcore/*.$(OBJEXT)
	-rm -f src/lldcore/*.lo
	-rm -f src/other/*.$(OBJEXT)
	-rm -f src/other/*.lo
	-rm -f src/portaudio/*.$(OBJEXT)
	-rm -f src/portaudio/*.lo
	-rm -f src/rnn/*.$(OBJEXT)
	-rm -f src/rnn/*.lo
	-rm -f src/smileutil/*.$(OBJEXT)
	-rm -f src/smileutil/*.lo
	-rm -f src/video/*.$(OBJEXT)
	-rm -f src/video/*.lo

distclean-compile:
	-rm -f *.tab.c

include progsrc/smilextract/$(DEPDIR)/SMILExtract-SMILExtract.Po # am--include-marker
include src/android/$(DEPDIR)/libopensmile_la-jniMessageInterface.Plo # am--include-marker
include src/android/$(DEPDIR)/libopensmile_la-openslesSource.Plo # am--include-marker
include src/classifiers/$(DEPDIR)/libopensmile_la-libsvmliveSink.Plo # am--include-marker
include src/classifiers/$(DEPDIR)/libopensmile_la-svmSink.Plo # am--include-marker
include src/classifiers/julius/$(DEPDIR)/libopensmile_la-juliusSink.Plo # am--include-marker
include src/classifiers/libsvm/$(DEPDIR)/libopensmile_la-svm.Plo # am--include-marker
include src/core/$(DEPDIR)/libopensmile_la-commandlineParser.Plo # am--include-marker
include src/core/$(DEPDIR)/libopensmile_la-componentManager.Plo # am--include-marker
include src/core/$(DEPDIR)/libopensmile_la-configManager.Plo # am--include-marker
include src/core/$(DEPDIR)/libopensmile_la-dataMemory.Plo # am--include-marker
include src/core/$(DEPDIR)/libopensmile_la-dataProcessor.Plo # am--include-marker
include src/core/$(DEPDIR)/libopensmile_la-dataReader.Plo # am--include-marker
include src/core/$(DEPDIR)/libopensmile_la-dataSelector.Plo # am--include-marker
include src/core/$(DEPDIR)/libopensmile_la-dataSink.Plo # am--include-marker
include src/core/$(DEPDIR)/libopensmile_la-dataSource.Plo # am--include-marker
include src/core/$(DEPDIR)/libopensmile_la-dataWriter.Plo # am--include-marker
include src/core/$(DEPDIR)/libopensmile_la-exceptions.Plo # am--include-marker
include src/core/$(DEPDIR)/libopensmile_la-nullSink.Plo # am--include-marker
include src/core/$(DEPDIR)/libopensmile_la-smileCommon.Plo # am--include-marker
include src/core/$(DEPDIR)/libopensmile_la-smileComponent.Plo # am--include-marker
include src/core/$(DEPDIR)/libopensmile_la-smileLogger.Plo # am--include-marker
include src/core/$(DEPDIR)/libopensmile_la-vecToWinProcessor.Plo # am--include-marker
include src/core/$(DEPDIR)/libopensmile_la-vectorProcessor.Plo # am--include-marker
include src/core/$(DEPDIR)/libopensmile_la-vectorTransform.Plo # am--include-marker
include src/core/$(DEPDIR)/libopensmile_la-winToVecProcessor.Plo # am--include-marker
include src/core/$(DEPDIR)/libopensmile_la-windowProcessor.Plo # am--include-marker
include src/dsp/$(DEPDIR)/libopensmile_la-dbA.Plo # am--include-marker
include src/dsp/$(DEPDIR)/libopensmile_la-signalGenerator.Plo # am--include-marker
include src/dsp/$(DEPDIR)/libopensmile_la-smileResample.Plo # am--include-marker
include src/dsp/$(DEPDIR)/libopensmile_la-specResample.Plo # am--include-marker
include src/dsp/$(DEPDIR)/libopensmile_la-specScale.Plo # am--include-marker
include src/dsp/$(DEPDIR)/libopensmile_la-vadV1.Plo # am--include-marker
include src/dspcore/$(DEPDIR)/libopensmile_la-acf.Plo # am--include-marker
include src/dspcore/$(DEPDIR)/libopensmile_la-amdf.Plo # am--include-marker
include src/dspcore/$(DEPDIR)/libopensmile_la-contourSmoother.Plo # am--include-marker
include src/dspcore/$(DEPDIR)/libopensmile_la-deltaRegression.Plo # am--include-marker
include src/dspcore/$(DEPDIR)/libopensmile_la-fftmagphase.Plo # am--include-marker
include src/dspcore/$(DEPDIR)/libopensmile_la-fftsg.Plo # am--include-marker
include src/dspcore/$(DEPDIR)/libopensmile_la-framer.Plo # am--include-marker
include src/dspcore/$(DEPDIR)/libopensmile_la-fullinputMean.Plo # am--include-marker
include src/dspcore/$(DEPDIR)/libopensmile_la-fullturnMean.Plo # am--include-marker
include src/dspcore/$(DEPDIR)/libopensmile_la-monoMixdown.Plo # am--include-marker
include src/dspcore/$(DEPDIR)/libopensmile_la-preemphasis.Plo # am--include-marker
include src/dspcore/$(DEPDIR)/libopensmile_la-transformFft.Plo # am--include-marker
include src/dspcore/$(DEPDIR)/libopensmile_la-turnDetector.Plo # am--include-marker
include src/dspcore/$(DEPDIR)/libopensmile_la-vectorMVN.Plo # am--include-marker
include src/dspcore/$(DEPDIR)/libopensmile_la-vectorPreemphasis.Plo # am--include-marker
include src/dspcore/$(DEPDIR)/libopensmile_la-windower.Plo # am--include-marker
include src/examples/$(DEPDIR)/libopensmile_la-exampleSink.Plo # am--include-marker
include src/examples/$(DEPDIR)/libopensmile_la-exampleSource.Plo # am--include-marker
include src/examples/$(DEPDIR)/libopensmile_la-simpleMessageSender.Plo # am--include-marker
include src/functionals/$(DEPDIR)/libopensmile_la-functionalComponent.Plo # am--include-marker
include src/functionals/$(DEPDIR)/libopensmile_la-functionalCrossings.Plo # am--include-marker
include src/functionals/$(DEPDIR)/libopensmile_la-functionalDCT.Plo # am--include-marker
include src/functionals/$(DEPDIR)/libopensmile_la-functionalExtremes.Plo # am--include-marker
include src/functionals/$(DEPDIR)/libopensmile_la-functionalLpc.Plo # am--include-marker
include src/functionals/$(DEPDIR)/libopensmile_la-functionalMeans.Plo # am--include-marker
include src/functionals/$(DEPDIR)/libopensmile_la-functionalMoments.Plo # am--include-marker
include src/functionals/$(DEPDIR)/libopensmile_la-functionalOnset.Plo # am--include-marker
include src/functionals/$(DEPDIR)/libopensmile_la-functionalPeaks.Plo # am--include-marker
include src/functionals/$(DEPDIR)/libopensmile_la-functionalPeaks2.Plo # am--include-marker
include src/functionals/$(DEPDIR)/libopensmile_la-functionalPercentiles.Plo # am--include-marker
include src/functionals/$(DEPDIR)/libopensmile_la-functionalRegression.Plo # am--include-marker
include src/functionals/$(DEPDIR)/libopensmile_la-functionalSamples.Plo # am--include-marker
include src/functionals/$(DEPDIR)/libopensmile_la-functionalSegments.Plo # am--include-marker
include src/functionals/$(DEPDIR)/libopensmile_la-functionalTimes.Plo # am--include-marker
include src/functionals/$(DEPDIR)/libopensmile_la-functionals.Plo # am--include-marker
include src/io/$(DEPDIR)/libopensmile_la-libsvmSink.Plo # am--include-marker
include src/iocore/$(DEPDIR)/libopensmile_la-arffSink.Plo # am--include-marker
include src/iocore/$(DEPDIR)/libopensmile_la-arffSource.Plo # am--include-marker
include src/iocore/$(DEPDIR)/libopensmile_la-csvSink.Plo # am--include-marker
include src/iocore/$(DEPDIR)/libopensmile_la-csvSource.Plo # am--include-marker
include src/iocore/$(DEPDIR)/libopensmile_la-datadumpSink.Plo # am--include-marker
include src/iocore/$(DEPDIR)/libopensmile_la-htkSink.Plo # am--include-marker
include src/iocore/$(DEPDIR)/libopensmile_la-htkSource.Plo # am--include-marker
include src/iocore/$(DEPDIR)/libopensmile_la-waveSink.Plo # am--include-marker
include src/iocore/$(DEPDIR)/libopensmile_la-waveSinkCut.Plo # am--include-marker
include src/iocore/$(DEPDIR)/libopensmile_la-waveSource.Plo # am--include-marker
include src/lld/$(DEPDIR)/libopensmile_la-cens.Plo # am--include-marker
include src/lld/$(DEPDIR)/libopensmile_la-chroma.Plo # am--include-marker
include src/lld/$(DEPDIR)/libopensmile_la-formantLpc.Plo # am--include-marker
include src/lld/$(DEPDIR)/libopensmile_la-formantSmoother.Plo # am--include-marker
include src/lld/$(DEPDIR)/libopensmile_la-harmonics.Plo # am--include-marker
include src/lld/$(DEPDIR)/libopensmile_la-lpc.Plo # am--include-marker
include src/lld/$(DEPDIR)/libopensmile_la-lsp.Plo # am--include-marker
include src/lld/$(DEPDIR)/libopensmile_la-pitchDirection.Plo # am--include-marker
include src/lld/$(DEPDIR)/libopensmile_la-pitchJitter.Plo # am--include-marker
include src/lld/$(DEPDIR)/libopensmile_la-pitchShs.Plo # am--include-marker
include src/lld/$(DEPDIR)/libopensmile_la-pitchSmootherViterbi.Plo # am--include-marker
include src/lld/$(DEPDIR)/libopensmile_la-tonefilt.Plo # am--include-marker
include src/lld/$(DEPDIR)/libopensmile_la-tonespec.Plo # am--include-marker
include src/lldcore/$(DEPDIR)/libopensmile_la-energy.Plo # am--include-marker
include src/lldcore/$(DEPDIR)/libopensmile_la-intensity.Plo # am--include-marker
include src/lldcore/$(DEPDIR)/libopensmile_la-melspec.Plo # am--include-marker
include src/lldcore/$(DEPDIR)/libopensmile_la-mfcc.Plo # am--include-marker
include src/lldcore/$(DEPDIR)/libopensmile_la-mzcr.Plo # am--include-marker
include src/lldcore/$(DEPDIR)/libopensmile_la-pitchACF.Plo # am--include-marker
include src/lldcore/$(DEPDIR)/libopensmile_la-pitchBase.Plo # am--include-marker
include src/lldcore/$(DEPDIR)/libopensmile_la-pitchSmoother.Plo # am--include-marker
include src/lldcore/$(DEPDIR)/libopensmile_la-plp.Plo # am--include-marker
include src/lldcore/$(DEPDIR)/libopensmile_la-spectral.Plo # am--include-marker
include src/other/$(DEPDIR)/libopensmile_la-bowProducer.Plo # am--include-marker
include src/other/$(DEPDIR)/libopensmile_la-maxIndex.Plo # am--include-marker
include src/other/$(DEPDIR)/libopensmile_la-valbasedSelector.Plo # am--include-marker
include src/other/$(DEPDIR)/libopensmile_la-vectorConcat.Plo # am--include-marker
include src/other/$(DEPDIR)/libopensmile_la-vectorOperation.Plo # am--include-marker
include src/portaudio/$(DEPDIR)/libopensmile_la-portaudioDuplex.Plo # am--include-marker
include src/portaudio/$(DEPDIR)/libopensmile_la-portaudioSink.Plo # am--include-marker
include src/portaudio/$(DEPDIR)/libopensmile_la-portaudioSource.Plo # am--include-marker
include src/portaudio/$(DEPDIR)/libopensmile_la-portaudioWavplayer.Plo # am--include-marker
include src/rnn/$(DEPDIR)/libopensmile_la-rnn.Plo # am--include-marker
include src/rnn/$(DEPDIR)/libopensmile_la-rnnProcessor.Plo # am--include-marker
include src/rnn/$(DEPDIR)/libopensmile_la-rnnSink.Plo # am--include-marker
include src/rnn/$(DEPDIR)/libopensmile_la-rnnVad2.Plo # am--include-marker
include src/smileutil/$(DEPDIR)/libopensmile_la-smileUtil.Plo # am--include-marker
include src/smileutil/$(DEPDIR)/libopensmile_la-smileUtilSpline.Plo # am--include-marker
include src/smileutil/$(DEPDIR)/libopensmile_la-zerosolve.Plo # am--include-marker
include src/video/$(DEPDIR)/libopensmile_la-openCVSource.Plo # am--include-marker

$(am__depfiles_remade):
	@$(MKDIR_P) $(@D)
	@echo '# dummy' >$@-t && $(am__mv) $@-t $@

am--depfiles: $(am__depfiles_remade)

.c.o:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ $<

.c.obj:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
	$(LTCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Plo
#	$(AM_V_CC)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LTCOMPILE) -c -o $@ $<

src/dspcore/libopensmile_la-fftsg.lo: src/dspcore/fftsg.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT src/dspcore/libopensmile_la-fftsg.lo -MD -MP -MF src/dspcore/$(DEPDIR)/libopensmile_la-fftsg.Tpo -c -o src/dspcore/libopensmile_la-fftsg.lo `test -f 'src/dspcore/fftsg.c' || echo '$(srcdir)/'`src/dspcore/fftsg.c
	$(AM_V_at)$(am__mv) src/dspcore/$(DEPDIR)/libopensmile_la-fftsg.Tpo src/dspcore/$(DEPDIR)/libopensmile_la-fftsg.Plo
#	$(AM_V_CC)source='src/dspcore/fftsg.c' object='src/dspcore/libopensmile_la-fftsg.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o src/dspcore/libopensmile_la-fftsg.lo `test -f 'src/dspcore/fftsg.c' || echo '$(srcdir)/'`src/dspcore/fftsg.c

src/smileutil/libopensmile_la-smileUtil.lo: src/smileutil/smileUtil.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT src/smileutil/libopensmile_la-smileUtil.lo -MD -MP -MF src/smileutil/$(DEPDIR)/libopensmile_la-smileUtil.Tpo -c -o src/smileutil/libopensmile_la-smileUtil.lo `test -f 'src/smileutil/smileUtil.c' || echo '$(srcdir)/'`src/smileutil/smileUtil.c
	$(AM_V_at)$(am__mv) src/smileutil/$(DEPDIR)/libopensmile_la-smileUtil.Tpo src/smileutil/$(DEPDIR)/libopensmile_la-smileUtil.Plo
#	$(AM_V_CC)source='src/smileutil/smileUtil.c' object='src/smileutil/libopensmile_la-smileUtil.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o src/smileutil/libopensmile_la-smileUtil.lo `test -f 'src/smileutil/smileUtil.c' || echo '$(srcdir)/'`src/smileutil/smileUtil.c

src/smileutil/libopensmile_la-smileUtilSpline.lo: src/smileutil/smileUtilSpline.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT src/smileutil/libopensmile_la-smileUtilSpline.lo -MD -MP -MF src/smileutil/$(DEPDIR)/libopensmile_la-smileUtilSpline.Tpo -c -o src/smileutil/libopensmile_la-smileUtilSpline.lo `test -f 'src/smileutil/smileUtilSpline.c' || echo '$(srcdir)/'`src/smileutil/smileUtilSpline.c
	$(AM_V_at)$(am__mv) src/smileutil/$(DEPDIR)/libopensmile_la-smileUtilSpline.Tpo src/smileutil/$(DEPDIR)/libopensmile_la-smileUtilSpline.Plo
#	$(AM_V_CC)source='src/smileutil/smileUtilSpline.c' object='src/smileutil/libopensmile_la-smileUtilSpline.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o src/smileutil/libopensmile_la-smileUtilSpline.lo `test -f 'src/smileutil/smileUtilSpline.c' || echo '$(srcdir)/'`src/smileutil/smileUtilSpline.c

.cpp.o:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Plo
#	$(AM_V_CXX)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LTCXXCOMPILE) -c -o $@ $<

src/classifiers/julius/libopensmile_la-juliusSink.lo: src/classifiers/julius/juliusSink.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/classifiers/julius/libopensmile_la-juliusSink.lo -MD -MP -MF src/classifiers/julius/$(DEPDIR)/libopensmile_la-juliusSink.Tpo -c -o src/classifiers/julius/libopensmile_la-juliusSink.lo `test -f 'src/classifiers/julius/juliusSink.cpp' || echo '$(srcdir)/'`src/classifiers/julius/juliusSink.cpp
	$(AM_V_at)$(am__mv) src/classifiers/julius/$(DEPDIR)/libopensmile_la-juliusSink.Tpo src/classifiers/julius/$(DEPDIR)/libopensmile_la-juliusSink.Plo
#	$(AM_V_CXX)source='src/classifiers/julius/juliusSink.cpp' object='src/classifiers/julius/libopensmile_la-juliusSink.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/classifiers/julius/libopensmile_la-juliusSink.lo `test -f 'src/classifiers/julius/juliusSink.cpp' || echo '$(srcdir)/'`src/classifiers/julius/juliusSink.cpp

src/classifiers/libsvm/libopensmile_la-svm.lo: src/classifiers/libsvm/svm.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/classifiers/libsvm/libopensmile_la-svm.lo -MD -MP -MF src/classifiers/libsvm/$(DEPDIR)/libopensmile_la-svm.Tpo -c -o src/classifiers/libsvm/libopensmile_la-svm.lo `test -f 'src/classifiers/libsvm/svm.cpp' || echo '$(srcdir)/'`src/classifiers/libsvm/svm.cpp
	$(AM_V_at)$(am__mv) src/classifiers/libsvm/$(DEPDIR)/libopensmile_la-svm.Tpo src/classifiers/libsvm/$(DEPDIR)/libopensmile_la-svm.Plo
#	$(AM_V_CXX)source='src/classifiers/libsvm/svm.cpp' object='src/classifiers/libsvm/libopensmile_la-svm.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/classifiers/libsvm/libopensmile_la-svm.lo `test -f 'src/classifiers/libsvm/svm.cpp' || echo '$(srcdir)/'`src/classifiers/libsvm/svm.cpp

src/classifiers/libopensmile_la-libsvmliveSink.lo: src/classifiers/libsvmliveSink.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/classifiers/libopensmile_la-libsvmliveSink.lo -MD -MP -MF src/classifiers/$(DEPDIR)/libopensmile_la-libsvmliveSink.Tpo -c -o src/classifiers/libopensmile_la-libsvmliveSink.lo `test -f 'src/classifiers/libsvmliveSink.cpp' || echo '$(srcdir)/'`src/classifiers/libsvmliveSink.cpp
	$(AM_V_at)$(am__mv) src/classifiers/$(DEPDIR)/libopensmile_la-libsvmliveSink.Tpo src/classifiers/$(DEPDIR)/libopensmile_la-libsvmliveSink.Plo
#	$(AM_V_CXX)source='src/classifiers/libsvmliveSink.cpp' object='src/classifiers/libopensmile_la-libsvmliveSink.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/classifiers/libopensmile_la-libsvmliveSink.lo `test -f 'src/classifiers/libsvmliveSink.cpp' || echo '$(srcdir)/'`src/classifiers/libsvmliveSink.cpp

src/classifiers/libopensmile_la-svmSink.lo: src/classifiers/svmSink.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/classifiers/libopensmile_la-svmSink.lo -MD -MP -MF src/classifiers/$(DEPDIR)/libopensmile_la-svmSink.Tpo -c -o src/classifiers/libopensmile_la-svmSink.lo `test -f 'src/classifiers/svmSink.cpp' || echo '$(srcdir)/'`src/classifiers/svmSink.cpp
	$(AM_V_at)$(am__mv) src/classifiers/$(DEPDIR)/libopensmile_la-svmSink.Tpo src/classifiers/$(DEPDIR)/libopensmile_la-svmSink.Plo
#	$(AM_V_CXX)source='src/classifiers/svmSink.cpp' object='src/classifiers/libopensmile_la-svmSink.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/classifiers/libopensmile_la-svmSink.lo `test -f 'src/classifiers/svmSink.cpp' || echo '$(srcdir)/'`src/classifiers/svmSink.cpp

src/core/libopensmile_la-commandlineParser.lo: src/core/commandlineParser.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/core/libopensmile_la-commandlineParser.lo -MD -MP -MF src/core/$(DEPDIR)/libopensmile_la-commandlineParser.Tpo -c -o src/core/libopensmile_la-commandlineParser.lo `test -f 'src/core/commandlineParser.cpp' || echo '$(srcdir)/'`src/core/commandlineParser.cpp
	$(AM_V_at)$(am__mv) src/core/$(DEPDIR)/libopensmile_la-commandlineParser.Tpo src/core/$(DEPDIR)/libopensmile_la-commandlineParser.Plo
#	$(AM_V_CXX)source='src/core/commandlineParser.cpp' object='src/core/libopensmile_la-commandlineParser.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/core/libopensmile_la-commandlineParser.lo `test -f 'src/core/commandlineParser.cpp' || echo '$(srcdir)/'`src/core/commandlineParser.cpp

src/core/libopensmile_la-componentManager.lo: src/core/componentManager.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/core/libopensmile_la-componentManager.lo -MD -MP -MF src/core/$(DEPDIR)/libopensmile_la-componentManager.Tpo -c -o src/core/libopensmile_la-componentManager.lo `test -f 'src/core/componentManager.cpp' || echo '$(srcdir)/'`src/core/componentManager.cpp
	$(AM_V_at)$(am__mv) src/core/$(DEPDIR)/libopensmile_la-componentManager.Tpo src/core/$(DEPDIR)/libopensmile_la-componentManager.Plo
#	$(AM_V_CXX)source='src/core/componentManager.cpp' object='src/core/libopensmile_la-componentManager.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/core/libopensmile_la-componentManager.lo `test -f 'src/core/componentManager.cpp' || echo '$(srcdir)/'`src/core/componentManager.cpp

src/core/libopensmile_la-configManager.lo: src/core/configManager.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/core/libopensmile_la-configManager.lo -MD -MP -MF src/core/$(DEPDIR)/libopensmile_la-configManager.Tpo -c -o src/core/libopensmile_la-configManager.lo `test -f 'src/core/configManager.cpp' || echo '$(srcdir)/'`src/core/configManager.cpp
	$(AM_V_at)$(am__mv) src/core/$(DEPDIR)/libopensmile_la-configManager.Tpo src/core/$(DEPDIR)/libopensmile_la-configManager.Plo
#	$(AM_V_CXX)source='src/core/configManager.cpp' object='src/core/libopensmile_la-configManager.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/core/libopensmile_la-configManager.lo `test -f 'src/core/configManager.cpp' || echo '$(srcdir)/'`src/core/configManager.cpp

src/core/libopensmile_la-dataMemory.lo: src/core/dataMemory.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/core/libopensmile_la-dataMemory.lo -MD -MP -MF src/core/$(DEPDIR)/libopensmile_la-dataMemory.Tpo -c -o src/core/libopensmile_la-dataMemory.lo `test -f 'src/core/dataMemory.cpp' || echo '$(srcdir)/'`src/core/dataMemory.cpp
	$(AM_V_at)$(am__mv) src/core/$(DEPDIR)/libopensmile_la-dataMemory.Tpo src/core/$(DEPDIR)/libopensmile_la-dataMemory.Plo
#	$(AM_V_CXX)source='src/core/dataMemory.cpp' object='src/core/libopensmile_la-dataMemory.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/core/libopensmile_la-dataMemory.lo `test -f 'src/core/dataMemory.cpp' || echo '$(srcdir)/'`src/core/dataMemory.cpp

src/core/libopensmile_la-dataProcessor.lo: src/core/dataProcessor.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/core/libopensmile_la-dataProcessor.lo -MD -MP -MF src/core/$(DEPDIR)/libopensmile_la-dataProcessor.Tpo -c -o src/core/libopensmile_la-dataProcessor.lo `test -f 'src/core/dataProcessor.cpp' || echo '$(srcdir)/'`src/core/dataProcessor.cpp
	$(AM_V_at)$(am__mv) src/core/$(DEPDIR)/libopensmile_la-dataProcessor.Tpo src/core/$(DEPDIR)/libopensmile_la-dataProcessor.Plo
#	$(AM_V_CXX)source='src/core/dataProcessor.cpp' object='src/core/libopensmile_la-dataProcessor.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/core/libopensmile_la-dataProcessor.lo `test -f 'src/core/dataProcessor.cpp' || echo '$(srcdir)/'`src/core/dataProcessor.cpp

src/core/libopensmile_la-dataReader.lo: src/core/dataReader.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/core/libopensmile_la-dataReader.lo -MD -MP -MF src/core/$(DEPDIR)/libopensmile_la-dataReader.Tpo -c -o src/core/libopensmile_la-dataReader.lo `test -f 'src/core/dataReader.cpp' || echo '$(srcdir)/'`src/core/dataReader.cpp
	$(AM_V_at)$(am__mv) src/core/$(DEPDIR)/libopensmile_la-dataReader.Tpo src/core/$(DEPDIR)/libopensmile_la-dataReader.Plo
#	$(AM_V_CXX)source='src/core/dataReader.cpp' object='src/core/libopensmile_la-dataReader.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/core/libopensmile_la-dataReader.lo `test -f 'src/core/dataReader.cpp' || echo '$(srcdir)/'`src/core/dataReader.cpp

src/core/libopensmile_la-dataSelector.lo: src/core/dataSelector.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/core/libopensmile_la-dataSelector.lo -MD -MP -MF src/core/$(DEPDIR)/libopensmile_la-dataSelector.Tpo -c -o src/core/libopensmile_la-dataSelector.lo `test -f 'src/core/dataSelector.cpp' || echo '$(srcdir)/'`src/core/dataSelector.cpp
	$(AM_V_at)$(am__mv) src/core/$(DEPDIR)/libopensmile_la-dataSelector.Tpo src/core/$(DEPDIR)/libopensmile_la-dataSelector.Plo
#	$(AM_V_CXX)source='src/core/dataSelector.cpp' object='src/core/libopensmile_la-dataSelector.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/core/libopensmile_la-dataSelector.lo `test -f 'src/core/dataSelector.cpp' || echo '$(srcdir)/'`src/core/dataSelector.cpp

src/core/libopensmile_la-dataSink.lo: src/core/dataSink.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/core/libopensmile_la-dataSink.lo -MD -MP -MF src/core/$(DEPDIR)/libopensmile_la-dataSink.Tpo -c -o src/core/libopensmile_la-dataSink.lo `test -f 'src/core/dataSink.cpp' || echo '$(srcdir)/'`src/core/dataSink.cpp
	$(AM_V_at)$(am__mv) src/core/$(DEPDIR)/libopensmile_la-dataSink.Tpo src/core/$(DEPDIR)/libopensmile_la-dataSink.Plo
#	$(AM_V_CXX)source='src/core/dataSink.cpp' object='src/core/libopensmile_la-dataSink.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/core/libopensmile_la-dataSink.lo `test -f 'src/core/dataSink.cpp' || echo '$(srcdir)/'`src/core/dataSink.cpp

src/core/libopensmile_la-dataSource.lo: src/core/dataSource.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/core/libopensmile_la-dataSource.lo -MD -MP -MF src/core/$(DEPDIR)/libopensmile_la-dataSource.Tpo -c -o src/core/libopensmile_la-dataSource.lo `test -f 'src/core/dataSource.cpp' || echo '$(srcdir)/'`src/core/dataSource.cpp
	$(AM_V_at)$(am__mv) src/core/$(DEPDIR)/libopensmile_la-dataSource.Tpo src/core/$(DEPDIR)/libopensmile_la-dataSource.Plo
#	$(AM_V_CXX)source='src/core/dataSource.cpp' object='src/core/libopensmile_la-dataSource.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/core/libopensmile_la-dataSource.lo `test -f 'src/core/dataSource.cpp' || echo '$(srcdir)/'`src/core/dataSource.cpp

src/core/libopensmile_la-dataWriter.lo: src/core/dataWriter.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/core/libopensmile_la-dataWriter.lo -MD -MP -MF src/core/$(DEPDIR)/libopensmile_la-dataWriter.Tpo -c -o src/core/libopensmile_la-dataWriter.lo `test -f 'src/core/dataWriter.cpp' || echo '$(srcdir)/'`src/core/dataWriter.cpp
	$(AM_V_at)$(am__mv) src/core/$(DEPDIR)/libopensmile_la-dataWriter.Tpo src/core/$(DEPDIR)/libopensmile_la-dataWriter.Plo
#	$(AM_V_CXX)source='src/core/dataWriter.cpp' object='src/core/libopensmile_la-dataWriter.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/core/libopensmile_la-dataWriter.lo `test -f 'src/core/dataWriter.cpp' || echo '$(srcdir)/'`src/core/dataWriter.cpp

src/core/libopensmile_la-exceptions.lo: src/core/exceptions.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/core/libopensmile_la-exceptions.lo -MD -MP -MF src/core/$(DEPDIR)/libopensmile_la-exceptions.Tpo -c -o src/core/libopensmile_la-exceptions.lo `test -f 'src/core/exceptions.cpp' || echo '$(srcdir)/'`src/core/exceptions.cpp
	$(AM_V_at)$(am__mv) src/core/$(DEPDIR)/libopensmile_la-exceptions.Tpo src/core/$(DEPDIR)/libopensmile_la-exceptions.Plo
#	$(AM_V_CXX)source='src/core/exceptions.cpp' object='src/core/libopensmile_la-exceptions.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/core/libopensmile_la-exceptions.lo `test -f 'src/core/exceptions.cpp' || echo '$(srcdir)/'`src/core/exceptions.cpp

src/core/libopensmile_la-nullSink.lo: src/core/nullSink.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/core/libopensmile_la-nullSink.lo -MD -MP -MF src/core/$(DEPDIR)/libopensmile_la-nullSink.Tpo -c -o src/core/libopensmile_la-nullSink.lo `test -f 'src/core/nullSink.cpp' || echo '$(srcdir)/'`src/core/nullSink.cpp
	$(AM_V_at)$(am__mv) src/core/$(DEPDIR)/libopensmile_la-nullSink.Tpo src/core/$(DEPDIR)/libopensmile_la-nullSink.Plo
#	$(AM_V_CXX)source='src/core/nullSink.cpp' object='src/core/libopensmile_la-nullSink.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/core/libopensmile_la-nullSink.lo `test -f 'src/core/nullSink.cpp' || echo '$(srcdir)/'`src/core/nullSink.cpp

src/core/libopensmile_la-smileCommon.lo: src/core/smileCommon.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/core/libopensmile_la-smileCommon.lo -MD -MP -MF src/core/$(DEPDIR)/libopensmile_la-smileCommon.Tpo -c -o src/core/libopensmile_la-smileCommon.lo `test -f 'src/core/smileCommon.cpp' || echo '$(srcdir)/'`src/core/smileCommon.cpp
	$(AM_V_at)$(am__mv) src/core/$(DEPDIR)/libopensmile_la-smileCommon.Tpo src/core/$(DEPDIR)/libopensmile_la-smileCommon.Plo
#	$(AM_V_CXX)source='src/core/smileCommon.cpp' object='src/core/libopensmile_la-smileCommon.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/core/libopensmile_la-smileCommon.lo `test -f 'src/core/smileCommon.cpp' || echo '$(srcdir)/'`src/core/smileCommon.cpp

src/core/libopensmile_la-smileComponent.lo: src/core/smileComponent.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/core/libopensmile_la-smileComponent.lo -MD -MP -MF src/core/$(DEPDIR)/libopensmile_la-smileComponent.Tpo -c -o src/core/libopensmile_la-smileComponent.lo `test -f 'src/core/smileComponent.cpp' || echo '$(srcdir)/'`src/core/smileComponent.cpp
	$(AM_V_at)$(am__mv) src/core/$(DEPDIR)/libopensmile_la-smileComponent.Tpo src/core/$(DEPDIR)/libopensmile_la-smileComponent.Plo
#	$(AM_V_CXX)source='src/core/smileComponent.cpp' object='src/core/libopensmile_la-smileComponent.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/core/libopensmile_la-smileComponent.lo `test -f 'src/core/smileComponent.cpp' || echo '$(srcdir)/'`src/core/smileComponent.cpp

src/core/libopensmile_la-smileLogger.lo: src/core/smileLogger.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/core/libopensmile_la-smileLogger.lo -MD -MP -MF src/core/$(DEPDIR)/libopensmile_la-smileLogger.Tpo -c -o src/core/libopensmile_la-smileLogger.lo `test -f 'src/core/smileLogger.cpp' || echo '$(srcdir)/'`src/core/smileLogger.cpp
	$(AM_V_at)$(am__mv) src/core/$(DEPDIR)/libopensmile_la-smileLogger.Tpo src/core/$(DEPDIR)/libopensmile_la-smileLogger.Plo
#	$(AM_V_CXX)source='src/core/smileLogger.cpp' object='src/core/libopensmile_la-smileLogger.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/core/libopensmile_la-smileLogger.lo `test -f 'src/core/smileLogger.cpp' || echo '$(srcdir)/'`src/core/smileLogger.cpp

src/core/libopensmile_la-vecToWinProcessor.lo: src/core/vecToWinProcessor.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/core/libopensmile_la-vecToWinProcessor.lo -MD -MP -MF src/core/$(DEPDIR)/libopensmile_la-vecToWinProcessor.Tpo -c -o src/core/libopensmile_la-vecToWinProcessor.lo `test -f 'src/core/vecToWinProcessor.cpp' || echo '$(srcdir)/'`src/core/vecToWinProcessor.cpp
	$(AM_V_at)$(am__mv) src/core/$(DEPDIR)/libopensmile_la-vecToWinProcessor.Tpo src/core/$(DEPDIR)/libopensmile_la-vecToWinProcessor.Plo
#	$(AM_V_CXX)source='src/core/vecToWinProcessor.cpp' object='src/core/libopensmile_la-vecToWinProcessor.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/core/libopensmile_la-vecToWinProcessor.lo `test -f 'src/core/vecToWinProcessor.cpp' || echo '$(srcdir)/'`src/core/vecToWinProcessor.cpp

src/core/libopensmile_la-vectorProcessor.lo: src/core/vectorProcessor.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/core/libopensmile_la-vectorProcessor.lo -MD -MP -MF src/core/$(DEPDIR)/libopensmile_la-vectorProcessor.Tpo -c -o src/core/libopensmile_la-vectorProcessor.lo `test -f 'src/core/vectorProcessor.cpp' || echo '$(srcdir)/'`src/core/vectorProcessor.cpp
	$(AM_V_at)$(am__mv) src/core/$(DEPDIR)/libopensmile_la-vectorProcessor.Tpo src/core/$(DEPDIR)/libopensmile_la-vectorProcessor.Plo
#	$(AM_V_CXX)source='src/core/vectorProcessor.cpp' object='src/core/libopensmile_la-vectorProcessor.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/core/libopensmile_la-vectorProcessor.lo `test -f 'src/core/vectorProcessor.cpp' || echo '$(srcdir)/'`src/core/vectorProcessor.cpp

src/core/libopensmile_la-vectorTransform.lo: src/core/vectorTransform.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/core/libopensmile_la-vectorTransform.lo -MD -MP -MF src/core/$(DEPDIR)/libopensmile_la-vectorTransform.Tpo -c -o src/core/libopensmile_la-vectorTransform.lo `test -f 'src/core/vectorTransform.cpp' || echo '$(srcdir)/'`src/core/vectorTransform.cpp
	$(AM_V_at)$(am__mv) src/core/$(DEPDIR)/libopensmile_la-vectorTransform.Tpo src/core/$(DEPDIR)/libopensmile_la-vectorTransform.Plo
#	$(AM_V_CXX)source='src/core/vectorTransform.cpp' object='src/core/libopensmile_la-vectorTransform.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/core/libopensmile_la-vectorTransform.lo `test -f 'src/core/vectorTransform.cpp' || echo '$(srcdir)/'`src/core/vectorTransform.cpp

src/core/libopensmile_la-winToVecProcessor.lo: src/core/winToVecProcessor.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/core/libopensmile_la-winToVecProcessor.lo -MD -MP -MF src/core/$(DEPDIR)/libopensmile_la-winToVecProcessor.Tpo -c -o src/core/libopensmile_la-winToVecProcessor.lo `test -f 'src/core/winToVecProcessor.cpp' || echo '$(srcdir)/'`src/core/winToVecProcessor.cpp
	$(AM_V_at)$(am__mv) src/core/$(DEPDIR)/libopensmile_la-winToVecProcessor.Tpo src/core/$(DEPDIR)/libopensmile_la-winToVecProcessor.Plo
#	$(AM_V_CXX)source='src/core/winToVecProcessor.cpp' object='src/core/libopensmile_la-winToVecProcessor.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/core/libopensmile_la-winToVecProcessor.lo `test -f 'src/core/winToVecProcessor.cpp' || echo '$(srcdir)/'`src/core/winToVecProcessor.cpp

src/core/libopensmile_la-windowProcessor.lo: src/core/windowProcessor.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/core/libopensmile_la-windowProcessor.lo -MD -MP -MF src/core/$(DEPDIR)/libopensmile_la-windowProcessor.Tpo -c -o src/core/libopensmile_la-windowProcessor.lo `test -f 'src/core/windowProcessor.cpp' || echo '$(srcdir)/'`src/core/windowProcessor.cpp
	$(AM_V_at)$(am__mv) src/core/$(DEPDIR)/libopensmile_la-windowProcessor.Tpo src/core/$(DEPDIR)/libopensmile_la-windowProcessor.Plo
#	$(AM_V_CXX)source='src/core/windowProcessor.cpp' object='src/core/libopensmile_la-windowProcessor.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/core/libopensmile_la-windowProcessor.lo `test -f 'src/core/windowProcessor.cpp' || echo '$(srcdir)/'`src/core/windowProcessor.cpp

src/dsp/libopensmile_la-dbA.lo: src/dsp/dbA.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/dsp/libopensmile_la-dbA.lo -MD -MP -MF src/dsp/$(DEPDIR)/libopensmile_la-dbA.Tpo -c -o src/dsp/libopensmile_la-dbA.lo `test -f 'src/dsp/dbA.cpp' || echo '$(srcdir)/'`src/dsp/dbA.cpp
	$(AM_V_at)$(am__mv) src/dsp/$(DEPDIR)/libopensmile_la-dbA.Tpo src/dsp/$(DEPDIR)/libopensmile_la-dbA.Plo
#	$(AM_V_CXX)source='src/dsp/dbA.cpp' object='src/dsp/libopensmile_la-dbA.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/dsp/libopensmile_la-dbA.lo `test -f 'src/dsp/dbA.cpp' || echo '$(srcdir)/'`src/dsp/dbA.cpp

src/dsp/libopensmile_la-signalGenerator.lo: src/dsp/signalGenerator.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/dsp/libopensmile_la-signalGenerator.lo -MD -MP -MF src/dsp/$(DEPDIR)/libopensmile_la-signalGenerator.Tpo -c -o src/dsp/libopensmile_la-signalGenerator.lo `test -f 'src/dsp/signalGenerator.cpp' || echo '$(srcdir)/'`src/dsp/signalGenerator.cpp
	$(AM_V_at)$(am__mv) src/dsp/$(DEPDIR)/libopensmile_la-signalGenerator.Tpo src/dsp/$(DEPDIR)/libopensmile_la-signalGenerator.Plo
#	$(AM_V_CXX)source='src/dsp/signalGenerator.cpp' object='src/dsp/libopensmile_la-signalGenerator.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/dsp/libopensmile_la-signalGenerator.lo `test -f 'src/dsp/signalGenerator.cpp' || echo '$(srcdir)/'`src/dsp/signalGenerator.cpp

src/dsp/libopensmile_la-smileResample.lo: src/dsp/smileResample.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/dsp/libopensmile_la-smileResample.lo -MD -MP -MF src/dsp/$(DEPDIR)/libopensmile_la-smileResample.Tpo -c -o src/dsp/libopensmile_la-smileResample.lo `test -f 'src/dsp/smileResample.cpp' || echo '$(srcdir)/'`src/dsp/smileResample.cpp
	$(AM_V_at)$(am__mv) src/dsp/$(DEPDIR)/libopensmile_la-smileResample.Tpo src/dsp/$(DEPDIR)/libopensmile_la-smileResample.Plo
#	$(AM_V_CXX)source='src/dsp/smileResample.cpp' object='src/dsp/libopensmile_la-smileResample.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/dsp/libopensmile_la-smileResample.lo `test -f 'src/dsp/smileResample.cpp' || echo '$(srcdir)/'`src/dsp/smileResample.cpp

src/dsp/libopensmile_la-specResample.lo: src/dsp/specResample.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/dsp/libopensmile_la-specResample.lo -MD -MP -MF src/dsp/$(DEPDIR)/libopensmile_la-specResample.Tpo -c -o src/dsp/libopensmile_la-specResample.lo `test -f 'src/dsp/specResample.cpp' || echo '$(srcdir)/'`src/dsp/specResample.cpp
	$(AM_V_at)$(am__mv) src/dsp/$(DEPDIR)/libopensmile_la-specResample.Tpo src/dsp/$(DEPDIR)/libopensmile_la-specResample.Plo
#	$(AM_V_CXX)source='src/dsp/specResample.cpp' object='src/dsp/libopensmile_la-specResample.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/dsp/libopensmile_la-specResample.lo `test -f 'src/dsp/specResample.cpp' || echo '$(srcdir)/'`src/dsp/specResample.cpp

src/dsp/libopensmile_la-vadV1.lo: src/dsp/vadV1.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/dsp/libopensmile_la-vadV1.lo -MD -MP -MF src/dsp/$(DEPDIR)/libopensmile_la-vadV1.Tpo -c -o src/dsp/libopensmile_la-vadV1.lo `test -f 'src/dsp/vadV1.cpp' || echo '$(srcdir)/'`src/dsp/vadV1.cpp
	$(AM_V_at)$(am__mv) src/dsp/$(DEPDIR)/libopensmile_la-vadV1.Tpo src/dsp/$(DEPDIR)/libopensmile_la-vadV1.Plo
#	$(AM_V_CXX)source='src/dsp/vadV1.cpp' object='src/dsp/libopensmile_la-vadV1.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/dsp/libopensmile_la-vadV1.lo `test -f 'src/dsp/vadV1.cpp' || echo '$(srcdir)/'`src/dsp/vadV1.cpp

src/dspcore/libopensmile_la-acf.lo: src/dspcore/acf.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/dspcore/libopensmile_la-acf.lo -MD -MP -MF src/dspcore/$(DEPDIR)/libopensmile_la-acf.Tpo -c -o src/dspcore/libopensmile_la-acf.lo `test -f 'src/dspcore/acf.cpp' || echo '$(srcdir)/'`src/dspcore/acf.cpp
	$(AM_V_at)$(am__mv) src/dspcore/$(DEPDIR)/libopensmile_la-acf.Tpo src/dspcore/$(DEPDIR)/libopensmile_la-acf.Plo
#	$(AM_V_CXX)source='src/dspcore/acf.cpp' object='src/dspcore/libopensmile_la-acf.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/dspcore/libopensmile_la-acf.lo `test -f 'src/dspcore/acf.cpp' || echo '$(srcdir)/'`src/dspcore/acf.cpp

src/dspcore/libopensmile_la-amdf.lo: src/dspcore/amdf.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/dspcore/libopensmile_la-amdf.lo -MD -MP -MF src/dspcore/$(DEPDIR)/libopensmile_la-amdf.Tpo -c -o src/dspcore/libopensmile_la-amdf.lo `test -f 'src/dspcore/amdf.cpp' || echo '$(srcdir)/'`src/dspcore/amdf.cpp
	$(AM_V_at)$(am__mv) src/dspcore/$(DEPDIR)/libopensmile_la-amdf.Tpo src/dspcore/$(DEPDIR)/libopensmile_la-amdf.Plo
#	$(AM_V_CXX)source='src/dspcore/amdf.cpp' object='src/dspcore/libopensmile_la-amdf.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/dspcore/libopensmile_la-amdf.lo `test -f 'src/dspcore/amdf.cpp' || echo '$(srcdir)/'`src/dspcore/amdf.cpp

src/dspcore/libopensmile_la-contourSmoother.lo: src/dspcore/contourSmoother.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/dspcore/libopensmile_la-contourSmoother.lo -MD -MP -MF src/dspcore/$(DEPDIR)/libopensmile_la-contourSmoother.Tpo -c -o src/dspcore/libopensmile_la-contourSmoother.lo `test -f 'src/dspcore/contourSmoother.cpp' || echo '$(srcdir)/'`src/dspcore/contourSmoother.cpp
	$(AM_V_at)$(am__mv) src/dspcore/$(DEPDIR)/libopensmile_la-contourSmoother.Tpo src/dspcore/$(DEPDIR)/libopensmile_la-contourSmoother.Plo
#	$(AM_V_CXX)source='src/dspcore/contourSmoother.cpp' object='src/dspcore/libopensmile_la-contourSmoother.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/dspcore/libopensmile_la-contourSmoother.lo `test -f 'src/dspcore/contourSmoother.cpp' || echo '$(srcdir)/'`src/dspcore/contourSmoother.cpp

src/dspcore/libopensmile_la-deltaRegression.lo: src/dspcore/deltaRegression.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/dspcore/libopensmile_la-deltaRegression.lo -MD -MP -MF src/dspcore/$(DEPDIR)/libopensmile_la-deltaRegression.Tpo -c -o src/dspcore/libopensmile_la-deltaRegression.lo `test -f 'src/dspcore/deltaRegression.cpp' || echo '$(srcdir)/'`src/dspcore/deltaRegression.cpp
	$(AM_V_at)$(am__mv) src/dspcore/$(DEPDIR)/libopensmile_la-deltaRegression.Tpo src/dspcore/$(DEPDIR)/libopensmile_la-deltaRegression.Plo
#	$(AM_V_CXX)source='src/dspcore/deltaRegression.cpp' object='src/dspcore/libopensmile_la-deltaRegression.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/dspcore/libopensmile_la-deltaRegression.lo `test -f 'src/dspcore/deltaRegression.cpp' || echo '$(srcdir)/'`src/dspcore/deltaRegression.cpp

src/dspcore/libopensmile_la-fftmagphase.lo: src/dspcore/fftmagphase.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/dspcore/libopensmile_la-fftmagphase.lo -MD -MP -MF src/dspcore/$(DEPDIR)/libopensmile_la-fftmagphase.Tpo -c -o src/dspcore/libopensmile_la-fftmagphase.lo `test -f 'src/dspcore/fftmagphase.cpp' || echo '$(srcdir)/'`src/dspcore/fftmagphase.cpp
	$(AM_V_at)$(am__mv) src/dspcore/$(DEPDIR)/libopensmile_la-fftmagphase.Tpo src/dspcore/$(DEPDIR)/libopensmile_la-fftmagphase.Plo
#	$(AM_V_CXX)source='src/dspcore/fftmagphase.cpp' object='src/dspcore/libopensmile_la-fftmagphase.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/dspcore/libopensmile_la-fftmagphase.lo `test -f 'src/dspcore/fftmagphase.cpp' || echo '$(srcdir)/'`src/dspcore/fftmagphase.cpp

src/dspcore/libopensmile_la-framer.lo: src/dspcore/framer.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/dspcore/libopensmile_la-framer.lo -MD -MP -MF src/dspcore/$(DEPDIR)/libopensmile_la-framer.Tpo -c -o src/dspcore/libopensmile_la-framer.lo `test -f 'src/dspcore/framer.cpp' || echo '$(srcdir)/'`src/dspcore/framer.cpp
	$(AM_V_at)$(am__mv) src/dspcore/$(DEPDIR)/libopensmile_la-framer.Tpo src/dspcore/$(DEPDIR)/libopensmile_la-framer.Plo
#	$(AM_V_CXX)source='src/dspcore/framer.cpp' object='src/dspcore/libopensmile_la-framer.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/dspcore/libopensmile_la-framer.lo `test -f 'src/dspcore/framer.cpp' || echo '$(srcdir)/'`src/dspcore/framer.cpp

src/dspcore/libopensmile_la-fullinputMean.lo: src/dspcore/fullinputMean.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/dspcore/libopensmile_la-fullinputMean.lo -MD -MP -MF src/dspcore/$(DEPDIR)/libopensmile_la-fullinputMean.Tpo -c -o src/dspcore/libopensmile_la-fullinputMean.lo `test -f 'src/dspcore/fullinputMean.cpp' || echo '$(srcdir)/'`src/dspcore/fullinputMean.cpp
	$(AM_V_at)$(am__mv) src/dspcore/$(DEPDIR)/libopensmile_la-fullinputMean.Tpo src/dspcore/$(DEPDIR)/libopensmile_la-fullinputMean.Plo
#	$(AM_V_CXX)source='src/dspcore/fullinputMean.cpp' object='src/dspcore/libopensmile_la-fullinputMean.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/dspcore/libopensmile_la-fullinputMean.lo `test -f 'src/dspcore/fullinputMean.cpp' || echo '$(srcdir)/'`src/dspcore/fullinputMean.cpp

src/dspcore/libopensmile_la-fullturnMean.lo: src/dspcore/fullturnMean.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/dspcore/libopensmile_la-fullturnMean.lo -MD -MP -MF src/dspcore/$(DEPDIR)/libopensmile_la-fullturnMean.Tpo -c -o src/dspcore/libopensmile_la-fullturnMean.lo `test -f 'src/dspcore/fullturnMean.cpp' || echo '$(srcdir)/'`src/dspcore/fullturnMean.cpp
	$(AM_V_at)$(am__mv) src/dspcore/$(DEPDIR)/libopensmile_la-fullturnMean.Tpo src/dspcore/$(DEPDIR)/libopensmile_la-fullturnMean.Plo
#	$(AM_V_CXX)source='src/dspcore/fullturnMean.cpp' object='src/dspcore/libopensmile_la-fullturnMean.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/dspcore/libopensmile_la-fullturnMean.lo `test -f 'src/dspcore/fullturnMean.cpp' || echo '$(srcdir)/'`src/dspcore/fullturnMean.cpp

src/dspcore/libopensmile_la-monoMixdown.lo: src/dspcore/monoMixdown.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/dspcore/libopensmile_la-monoMixdown.lo -MD -MP -MF src/dspcore/$(DEPDIR)/libopensmile_la-monoMixdown.Tpo -c -o src/dspcore/libopensmile_la-monoMixdown.lo `test -f 'src/dspcore/monoMixdown.cpp' || echo '$(srcdir)/'`src/dspcore/monoMixdown.cpp
	$(AM_V_at)$(am__mv) src/dspcore/$(DEPDIR)/libopensmile_la-monoMixdown.Tpo src/dspcore/$(DEPDIR)/libopensmile_la-monoMixdown.Plo
#	$(AM_V_CXX)source='src/dspcore/monoMixdown.cpp' object='src/dspcore/libopensmile_la-monoMixdown.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/dspcore/libopensmile_la-monoMixdown.lo `test -f 'src/dspcore/monoMixdown.cpp' || echo '$(srcdir)/'`src/dspcore/monoMixdown.cpp

src/dspcore/libopensmile_la-preemphasis.lo: src/dspcore/preemphasis.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/dspcore/libopensmile_la-preemphasis.lo -MD -MP -MF src/dspcore/$(DEPDIR)/libopensmile_la-preemphasis.Tpo -c -o src/dspcore/libopensmile_la-preemphasis.lo `test -f 'src/dspcore/preemphasis.cpp' || echo '$(srcdir)/'`src/dspcore/preemphasis.cpp
	$(AM_V_at)$(am__mv) src/dspcore/$(DEPDIR)/libopensmile_la-preemphasis.Tpo src/dspcore/$(DEPDIR)/libopensmile_la-preemphasis.Plo
#	$(AM_V_CXX)source='src/dspcore/preemphasis.cpp' object='src/dspcore/libopensmile_la-preemphasis.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/dspcore/libopensmile_la-preemphasis.lo `test -f 'src/dspcore/preemphasis.cpp' || echo '$(srcdir)/'`src/dspcore/preemphasis.cpp

src/dspcore/libopensmile_la-transformFft.lo: src/dspcore/transformFft.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/dspcore/libopensmile_la-transformFft.lo -MD -MP -MF src/dspcore/$(DEPDIR)/libopensmile_la-transformFft.Tpo -c -o src/dspcore/libopensmile_la-transformFft.lo `test -f 'src/dspcore/transformFft.cpp' || echo '$(srcdir)/'`src/dspcore/transformFft.cpp
	$(AM_V_at)$(am__mv) src/dspcore/$(DEPDIR)/libopensmile_la-transformFft.Tpo src/dspcore/$(DEPDIR)/libopensmile_la-transformFft.Plo
#	$(AM_V_CXX)source='src/dspcore/transformFft.cpp' object='src/dspcore/libopensmile_la-transformFft.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/dspcore/libopensmile_la-transformFft.lo `test -f 'src/dspcore/transformFft.cpp' || echo '$(srcdir)/'`src/dspcore/transformFft.cpp

src/dspcore/libopensmile_la-turnDetector.lo: src/dspcore/turnDetector.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/dspcore/libopensmile_la-turnDetector.lo -MD -MP -MF src/dspcore/$(DEPDIR)/libopensmile_la-turnDetector.Tpo -c -o src/dspcore/libopensmile_la-turnDetector.lo `test -f 'src/dspcore/turnDetector.cpp' || echo '$(srcdir)/'`src/dspcore/turnDetector.cpp
	$(AM_V_at)$(am__mv) src/dspcore/$(DEPDIR)/libopensmile_la-turnDetector.Tpo src/dspcore/$(DEPDIR)/libopensmile_la-turnDetector.Plo
#	$(AM_V_CXX)source='src/dspcore/turnDetector.cpp' object='src/dspcore/libopensmile_la-turnDetector.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/dspcore/libopensmile_la-turnDetector.lo `test -f 'src/dspcore/turnDetector.cpp' || echo '$(srcdir)/'`src/dspcore/turnDetector.cpp

src/dspcore/libopensmile_la-vectorMVN.lo: src/dspcore/vectorMVN.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/dspcore/libopensmile_la-vectorMVN.lo -MD -MP -MF src/dspcore/$(DEPDIR)/libopensmile_la-vectorMVN.Tpo -c -o src/dspcore/libopensmile_la-vectorMVN.lo `test -f 'src/dspcore/vectorMVN.cpp' || echo '$(srcdir)/'`src/dspcore/vectorMVN.cpp
	$(AM_V_at)$(am__mv) src/dspcore/$(DEPDIR)/libopensmile_la-vectorMVN.Tpo src/dspcore/$(DEPDIR)/libopensmile_la-vectorMVN.Plo
#	$(AM_V_CXX)source='src/dspcore/vectorMVN.cpp' object='src/dspcore/libopensmile_la-vectorMVN.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/dspcore/libopensmile_la-vectorMVN.lo `test -f 'src/dspcore/vectorMVN.cpp' || echo '$(srcdir)/'`src/dspcore/vectorMVN.cpp

src/dspcore/libopensmile_la-vectorPreemphasis.lo: src/dspcore/vectorPreemphasis.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/dspcore/libopensmile_la-vectorPreemphasis.lo -MD -MP -MF src/dspcore/$(DEPDIR)/libopensmile_la-vectorPreemphasis.Tpo -c -o src/dspcore/libopensmile_la-vectorPreemphasis.lo `test -f 'src/dspcore/vectorPreemphasis.cpp' || echo '$(srcdir)/'`src/dspcore/vectorPreemphasis.cpp
	$(AM_V_at)$(am__mv) src/dspcore/$(DEPDIR)/libopensmile_la-vectorPreemphasis.Tpo src/dspcore/$(DEPDIR)/libopensmile_la-vectorPreemphasis.Plo
#	$(AM_V_CXX)source='src/dspcore/vectorPreemphasis.cpp' object='src/dspcore/libopensmile_la-vectorPreemphasis.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/dspcore/libopensmile_la-vectorPreemphasis.lo `test -f 'src/dspcore/vectorPreemphasis.cpp' || echo '$(srcdir)/'`src/dspcore/vectorPreemphasis.cpp

src/dspcore/libopensmile_la-windower.lo: src/dspcore/windower.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/dspcore/libopensmile_la-windower.lo -MD -MP -MF src/dspcore/$(DEPDIR)/libopensmile_la-windower.Tpo -c -o src/dspcore/libopensmile_la-windower.lo `test -f 'src/dspcore/windower.cpp' || echo '$(srcdir)/'`src/dspcore/windower.cpp
	$(AM_V_at)$(am__mv) src/dspcore/$(DEPDIR)/libopensmile_la-windower.Tpo src/dspcore/$(DEPDIR)/libopensmile_la-windower.Plo
#	$(AM_V_CXX)source='src/dspcore/windower.cpp' object='src/dspcore/libopensmile_la-windower.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/dspcore/libopensmile_la-windower.lo `test -f 'src/dspcore/windower.cpp' || echo '$(srcdir)/'`src/dspcore/windower.cpp

src/examples/libopensmile_la-exampleSink.lo: src/examples/exampleSink.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/examples/libopensmile_la-exampleSink.lo -MD -MP -MF src/examples/$(DEPDIR)/libopensmile_la-exampleSink.Tpo -c -o src/examples/libopensmile_la-exampleSink.lo `test -f 'src/examples/exampleSink.cpp' || echo '$(srcdir)/'`src/examples/exampleSink.cpp
	$(AM_V_at)$(am__mv) src/examples/$(DEPDIR)/libopensmile_la-exampleSink.Tpo src/examples/$(DEPDIR)/libopensmile_la-exampleSink.Plo
#	$(AM_V_CXX)source='src/examples/exampleSink.cpp' object='src/examples/libopensmile_la-exampleSink.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/examples/libopensmile_la-exampleSink.lo `test -f 'src/examples/exampleSink.cpp' || echo '$(srcdir)/'`src/examples/exampleSink.cpp

src/examples/libopensmile_la-exampleSource.lo: src/examples/exampleSource.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/examples/libopensmile_la-exampleSource.lo -MD -MP -MF src/examples/$(DEPDIR)/libopensmile_la-exampleSource.Tpo -c -o src/examples/libopensmile_la-exampleSource.lo `test -f 'src/examples/exampleSource.cpp' || echo '$(srcdir)/'`src/examples/exampleSource.cpp
	$(AM_V_at)$(am__mv) src/examples/$(DEPDIR)/libopensmile_la-exampleSource.Tpo src/examples/$(DEPDIR)/libopensmile_la-exampleSource.Plo
#	$(AM_V_CXX)source='src/examples/exampleSource.cpp' object='src/examples/libopensmile_la-exampleSource.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/examples/libopensmile_la-exampleSource.lo `test -f 'src/examples/exampleSource.cpp' || echo '$(srcdir)/'`src/examples/exampleSource.cpp

src/examples/libopensmile_la-simpleMessageSender.lo: src/examples/simpleMessageSender.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/examples/libopensmile_la-simpleMessageSender.lo -MD -MP -MF src/examples/$(DEPDIR)/libopensmile_la-simpleMessageSender.Tpo -c -o src/examples/libopensmile_la-simpleMessageSender.lo `test -f 'src/examples/simpleMessageSender.cpp' || echo '$(srcdir)/'`src/examples/simpleMessageSender.cpp
	$(AM_V_at)$(am__mv) src/examples/$(DEPDIR)/libopensmile_la-simpleMessageSender.Tpo src/examples/$(DEPDIR)/libopensmile_la-simpleMessageSender.Plo
#	$(AM_V_CXX)source='src/examples/simpleMessageSender.cpp' object='src/examples/libopensmile_la-simpleMessageSender.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/examples/libopensmile_la-simpleMessageSender.lo `test -f 'src/examples/simpleMessageSender.cpp' || echo '$(srcdir)/'`src/examples/simpleMessageSender.cpp

src/functionals/libopensmile_la-functionalComponent.lo: src/functionals/functionalComponent.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/functionals/libopensmile_la-functionalComponent.lo -MD -MP -MF src/functionals/$(DEPDIR)/libopensmile_la-functionalComponent.Tpo -c -o src/functionals/libopensmile_la-functionalComponent.lo `test -f 'src/functionals/functionalComponent.cpp' || echo '$(srcdir)/'`src/functionals/functionalComponent.cpp
	$(AM_V_at)$(am__mv) src/functionals/$(DEPDIR)/libopensmile_la-functionalComponent.Tpo src/functionals/$(DEPDIR)/libopensmile_la-functionalComponent.Plo
#	$(AM_V_CXX)source='src/functionals/functionalComponent.cpp' object='src/functionals/libopensmile_la-functionalComponent.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/functionals/libopensmile_la-functionalComponent.lo `test -f 'src/functionals/functionalComponent.cpp' || echo '$(srcdir)/'`src/functionals/functionalComponent.cpp

src/functionals/libopensmile_la-functionalCrossings.lo: src/functionals/functionalCrossings.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/functionals/libopensmile_la-functionalCrossings.lo -MD -MP -MF src/functionals/$(DEPDIR)/libopensmile_la-functionalCrossings.Tpo -c -o src/functionals/libopensmile_la-functionalCrossings.lo `test -f 'src/functionals/functionalCrossings.cpp' || echo '$(srcdir)/'`src/functionals/functionalCrossings.cpp
	$(AM_V_at)$(am__mv) src/functionals/$(DEPDIR)/libopensmile_la-functionalCrossings.Tpo src/functionals/$(DEPDIR)/libopensmile_la-functionalCrossings.Plo
#	$(AM_V_CXX)source='src/functionals/functionalCrossings.cpp' object='src/functionals/libopensmile_la-functionalCrossings.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/functionals/libopensmile_la-functionalCrossings.lo `test -f 'src/functionals/functionalCrossings.cpp' || echo '$(srcdir)/'`src/functionals/functionalCrossings.cpp

src/functionals/libopensmile_la-functionalDCT.lo: src/functionals/functionalDCT.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/functionals/libopensmile_la-functionalDCT.lo -MD -MP -MF src/functionals/$(DEPDIR)/libopensmile_la-functionalDCT.Tpo -c -o src/functionals/libopensmile_la-functionalDCT.lo `test -f 'src/functionals/functionalDCT.cpp' || echo '$(srcdir)/'`src/functionals/functionalDCT.cpp
	$(AM_V_at)$(am__mv) src/functionals/$(DEPDIR)/libopensmile_la-functionalDCT.Tpo src/functionals/$(DEPDIR)/libopensmile_la-functionalDCT.Plo
#	$(AM_V_CXX)source='src/functionals/functionalDCT.cpp' object='src/functionals/libopensmile_la-functionalDCT.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/functionals/libopensmile_la-functionalDCT.lo `test -f 'src/functionals/functionalDCT.cpp' || echo '$(srcdir)/'`src/functionals/functionalDCT.cpp

src/functionals/libopensmile_la-functionalExtremes.lo: src/functionals/functionalExtremes.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/functionals/libopensmile_la-functionalExtremes.lo -MD -MP -MF src/functionals/$(DEPDIR)/libopensmile_la-functionalExtremes.Tpo -c -o src/functionals/libopensmile_la-functionalExtremes.lo `test -f 'src/functionals/functionalExtremes.cpp' || echo '$(srcdir)/'`src/functionals/functionalExtremes.cpp
	$(AM_V_at)$(am__mv) src/functionals/$(DEPDIR)/libopensmile_la-functionalExtremes.Tpo src/functionals/$(DEPDIR)/libopensmile_la-functionalExtremes.Plo
#	$(AM_V_CXX)source='src/functionals/functionalExtremes.cpp' object='src/functionals/libopensmile_la-functionalExtremes.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/functionals/libopensmile_la-functionalExtremes.lo `test -f 'src/functionals/functionalExtremes.cpp' || echo '$(srcdir)/'`src/functionals/functionalExtremes.cpp

src/functionals/libopensmile_la-functionalLpc.lo: src/functionals/functionalLpc.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/functionals/libopensmile_la-functionalLpc.lo -MD -MP -MF src/functionals/$(DEPDIR)/libopensmile_la-functionalLpc.Tpo -c -o src/functionals/libopensmile_la-functionalLpc.lo `test -f 'src/functionals/functionalLpc.cpp' || echo '$(srcdir)/'`src/functionals/functionalLpc.cpp
	$(AM_V_at)$(am__mv) src/functionals/$(DEPDIR)/libopensmile_la-functionalLpc.Tpo src/functionals/$(DEPDIR)/libopensmile_la-functionalLpc.Plo
#	$(AM_V_CXX)source='src/functionals/functionalLpc.cpp' object='src/functionals/libopensmile_la-functionalLpc.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/functionals/libopensmile_la-functionalLpc.lo `test -f 'src/functionals/functionalLpc.cpp' || echo '$(srcdir)/'`src/functionals/functionalLpc.cpp

src/functionals/libopensmile_la-functionalMeans.lo: src/functionals/functionalMeans.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/functionals/libopensmile_la-functionalMeans.lo -MD -MP -MF src/functionals/$(DEPDIR)/libopensmile_la-functionalMeans.Tpo -c -o src/functionals/libopensmile_la-functionalMeans.lo `test -f 'src/functionals/functionalMeans.cpp' || echo '$(srcdir)/'`src/functionals/functionalMeans.cpp
	$(AM_V_at)$(am__mv) src/functionals/$(DEPDIR)/libopensmile_la-functionalMeans.Tpo src/functionals/$(DEPDIR)/libopensmile_la-functionalMeans.Plo
#	$(AM_V_CXX)source='src/functionals/functionalMeans.cpp' object='src/functionals/libopensmile_la-functionalMeans.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/functionals/libopensmile_la-functionalMeans.lo `test -f 'src/functionals/functionalMeans.cpp' || echo '$(srcdir)/'`src/functionals/functionalMeans.cpp

src/functionals/libopensmile_la-functionalMoments.lo: src/functionals/functionalMoments.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/functionals/libopensmile_la-functionalMoments.lo -MD -MP -MF src/functionals/$(DEPDIR)/libopensmile_la-functionalMoments.Tpo -c -o src/functionals/libopensmile_la-functionalMoments.lo `test -f 'src/functionals/functionalMoments.cpp' || echo '$(srcdir)/'`src/functionals/functionalMoments.cpp
	$(AM_V_at)$(am__mv) src/functionals/$(DEPDIR)/libopensmile_la-functionalMoments.Tpo src/functionals/$(DEPDIR)/libopensmile_la-functionalMoments.Plo
#	$(AM_V_CXX)source='src/functionals/functionalMoments.cpp' object='src/functionals/libopensmile_la-functionalMoments.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/functionals/libopensmile_la-functionalMoments.lo `test -f 'src/functionals/functionalMoments.cpp' || echo '$(srcdir)/'`src/functionals/functionalMoments.cpp

src/functionals/libopensmile_la-functionalOnset.lo: src/functionals/functionalOnset.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/functionals/libopensmile_la-functionalOnset.lo -MD -MP -MF src/functionals/$(DEPDIR)/libopensmile_la-functionalOnset.Tpo -c -o src/functionals/libopensmile_la-functionalOnset.lo `test -f 'src/functionals/functionalOnset.cpp' || echo '$(srcdir)/'`src/functionals/functionalOnset.cpp
	$(AM_V_at)$(am__mv) src/functionals/$(DEPDIR)/libopensmile_la-functionalOnset.Tpo src/functionals/$(DEPDIR)/libopensmile_la-functionalOnset.Plo
#	$(AM_V_CXX)source='src/functionals/functionalOnset.cpp' object='src/functionals/libopensmile_la-functionalOnset.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/functionals/libopensmile_la-functionalOnset.lo `test -f 'src/functionals/functionalOnset.cpp' || echo '$(srcdir)/'`src/functionals/functionalOnset.cpp

src/functionals/libopensmile_la-functionalPeaks.lo: src/functionals/functionalPeaks.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/functionals/libopensmile_la-functionalPeaks.lo -MD -MP -MF src/functionals/$(DEPDIR)/libopensmile_la-functionalPeaks.Tpo -c -o src/functionals/libopensmile_la-functionalPeaks.lo `test -f 'src/functionals/functionalPeaks.cpp' || echo '$(srcdir)/'`src/functionals/functionalPeaks.cpp
	$(AM_V_at)$(am__mv) src/functionals/$(DEPDIR)/libopensmile_la-functionalPeaks.Tpo src/functionals/$(DEPDIR)/libopensmile_la-functionalPeaks.Plo
#	$(AM_V_CXX)source='src/functionals/functionalPeaks.cpp' object='src/functionals/libopensmile_la-functionalPeaks.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/functionals/libopensmile_la-functionalPeaks.lo `test -f 'src/functionals/functionalPeaks.cpp' || echo '$(srcdir)/'`src/functionals/functionalPeaks.cpp

src/functionals/libopensmile_la-functionalPeaks2.lo: src/functionals/functionalPeaks2.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/functionals/libopensmile_la-functionalPeaks2.lo -MD -MP -MF src/functionals/$(DEPDIR)/libopensmile_la-functionalPeaks2.Tpo -c -o src/functionals/libopensmile_la-functionalPeaks2.lo `test -f 'src/functionals/functionalPeaks2.cpp' || echo '$(srcdir)/'`src/functionals/functionalPeaks2.cpp
	$(AM_V_at)$(am__mv) src/functionals/$(DEPDIR)/libopensmile_la-functionalPeaks2.Tpo src/functionals/$(DEPDIR)/libopensmile_la-functionalPeaks2.Plo
#	$(AM_V_CXX)source='src/functionals/functionalPeaks2.cpp' object='src/functionals/libopensmile_la-functionalPeaks2.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/functionals/libopensmile_la-functionalPeaks2.lo `test -f 'src/functionals/functionalPeaks2.cpp' || echo '$(srcdir)/'`src/functionals/functionalPeaks2.cpp

src/functionals/libopensmile_la-functionalPercentiles.lo: src/functionals/functionalPercentiles.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/functionals/libopensmile_la-functionalPercentiles.lo -MD -MP -MF src/functionals/$(DEPDIR)/libopensmile_la-functionalPercentiles.Tpo -c -o src/functionals/libopensmile_la-functionalPercentiles.lo `test -f 'src/functionals/functionalPercentiles.cpp' || echo '$(srcdir)/'`src/functionals/functionalPercentiles.cpp
	$(AM_V_at)$(am__mv) src/functionals/$(DEPDIR)/libopensmile_la-functionalPercentiles.Tpo src/functionals/$(DEPDIR)/libopensmile_la-functionalPercentiles.Plo
#	$(AM_V_CXX)source='src/functionals/functionalPercentiles.cpp' object='src/functionals/libopensmile_la-functionalPercentiles.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/functionals/libopensmile_la-functionalPercentiles.lo `test -f 'src/functionals/functionalPercentiles.cpp' || echo '$(srcdir)/'`src/functionals/functionalPercentiles.cpp

src/functionals/libopensmile_la-functionalRegression.lo: src/functionals/functionalRegression.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/functionals/libopensmile_la-functionalRegression.lo -MD -MP -MF src/functionals/$(DEPDIR)/libopensmile_la-functionalRegression.Tpo -c -o src/functionals/libopensmile_la-functionalRegression.lo `test -f 'src/functionals/functionalRegression.cpp' || echo '$(srcdir)/'`src/functionals/functionalRegression.cpp
	$(AM_V_at)$(am__mv) src/functionals/$(DEPDIR)/libopensmile_la-functionalRegression.Tpo src/functionals/$(DEPDIR)/libopensmile_la-functionalRegression.Plo
#	$(AM_V_CXX)source='src/functionals/functionalRegression.cpp' object='src/functionals/libopensmile_la-functionalRegression.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/functionals/libopensmile_la-functionalRegression.lo `test -f 'src/functionals/functionalRegression.cpp' || echo '$(srcdir)/'`src/functionals/functionalRegression.cpp

src/functionals/libopensmile_la-functionalSamples.lo: src/functionals/functionalSamples.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/functionals/libopensmile_la-functionalSamples.lo -MD -MP -MF src/functionals/$(DEPDIR)/libopensmile_la-functionalSamples.Tpo -c -o src/functionals/libopensmile_la-functionalSamples.lo `test -f 'src/functionals/functionalSamples.cpp' || echo '$(srcdir)/'`src/functionals/functionalSamples.cpp
	$(AM_V_at)$(am__mv) src/functionals/$(DEPDIR)/libopensmile_la-functionalSamples.Tpo src/functionals/$(DEPDIR)/libopensmile_la-functionalSamples.Plo
#	$(AM_V_CXX)source='src/functionals/functionalSamples.cpp' object='src/functionals/libopensmile_la-functionalSamples.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/functionals/libopensmile_la-functionalSamples.lo `test -f 'src/functionals/functionalSamples.cpp' || echo '$(srcdir)/'`src/functionals/functionalSamples.cpp

src/functionals/libopensmile_la-functionalSegments.lo: src/functionals/functionalSegments.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/functionals/libopensmile_la-functionalSegments.lo -MD -MP -MF src/functionals/$(DEPDIR)/libopensmile_la-functionalSegments.Tpo -c -o src/functionals/libopensmile_la-functionalSegments.lo `test -f 'src/functionals/functionalSegments.cpp' || echo '$(srcdir)/'`src/functionals/functionalSegments.cpp
	$(AM_V_at)$(am__mv) src/functionals/$(DEPDIR)/libopensmile_la-functionalSegments.Tpo src/functionals/$(DEPDIR)/libopensmile_la-functionalSegments.Plo
#	$(AM_V_CXX)source='src/functionals/functionalSegments.cpp' object='src/functionals/libopensmile_la-functionalSegments.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/functionals/libopensmile_la-functionalSegments.lo `test -f 'src/functionals/functionalSegments.cpp' || echo '$(srcdir)/'`src/functionals/functionalSegments.cpp

src/functionals/libopensmile_la-functionalTimes.lo: src/functionals/functionalTimes.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/functionals/libopensmile_la-functionalTimes.lo -MD -MP -MF src/functionals/$(DEPDIR)/libopensmile_la-functionalTimes.Tpo -c -o src/functionals/libopensmile_la-functionalTimes.lo `test -f 'src/functionals/functionalTimes.cpp' || echo '$(srcdir)/'`src/functionals/functionalTimes.cpp
	$(AM_V_at)$(am__mv) src/functionals/$(DEPDIR)/libopensmile_la-functionalTimes.Tpo src/functionals/$(DEPDIR)/libopensmile_la-functionalTimes.Plo
#	$(AM_V_CXX)source='src/functionals/functionalTimes.cpp' object='src/functionals/libopensmile_la-functionalTimes.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/functionals/libopensmile_la-functionalTimes.lo `test -f 'src/functionals/functionalTimes.cpp' || echo '$(srcdir)/'`src/functionals/functionalTimes.cpp

src/functionals/libopensmile_la-functionals.lo: src/functionals/functionals.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/functionals/libopensmile_la-functionals.lo -MD -MP -MF src/functionals/$(DEPDIR)/libopensmile_la-functionals.Tpo -c -o src/functionals/libopensmile_la-functionals.lo `test -f 'src/functionals/functionals.cpp' || echo '$(srcdir)/'`src/functionals/functionals.cpp
	$(AM_V_at)$(am__mv) src/functionals/$(DEPDIR)/libopensmile_la-functionals.Tpo src/functionals/$(DEPDIR)/libopensmile_la-functionals.Plo
#	$(AM_V_CXX)source='src/functionals/functionals.cpp' object='src/functionals/libopensmile_la-functionals.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/functionals/libopensmile_la-functionals.lo `test -f 'src/functionals/functionals.cpp' || echo '$(srcdir)/'`src/functionals/functionals.cpp

src/lld/libopensmile_la-lsp.lo: src/lld/lsp.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/lld/libopensmile_la-lsp.lo -MD -MP -MF src/lld/$(DEPDIR)/libopensmile_la-lsp.Tpo -c -o src/lld/libopensmile_la-lsp.lo `test -f 'src/lld/lsp.cpp' || echo '$(srcdir)/'`src/lld/lsp.cpp
	$(AM_V_at)$(am__mv) src/lld/$(DEPDIR)/libopensmile_la-lsp.Tpo src/lld/$(DEPDIR)/libopensmile_la-lsp.Plo
#	$(AM_V_CXX)source='src/lld/lsp.cpp' object='src/lld/libopensmile_la-lsp.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/lld/libopensmile_la-lsp.lo `test -f 'src/lld/lsp.cpp' || echo '$(srcdir)/'`src/lld/lsp.cpp

src/dsp/libopensmile_la-specScale.lo: src/dsp/specScale.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/dsp/libopensmile_la-specScale.lo -MD -MP -MF src/dsp/$(DEPDIR)/libopensmile_la-specScale.Tpo -c -o src/dsp/libopensmile_la-specScale.lo `test -f 'src/dsp/specScale.cpp' || echo '$(srcdir)/'`src/dsp/specScale.cpp
	$(AM_V_at)$(am__mv) src/dsp/$(DEPDIR)/libopensmile_la-specScale.Tpo src/dsp/$(DEPDIR)/libopensmile_la-specScale.Plo
#	$(AM_V_CXX)source='src/dsp/specScale.cpp' object='src/dsp/libopensmile_la-specScale.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/dsp/libopensmile_la-specScale.lo `test -f 'src/dsp/specScale.cpp' || echo '$(srcdir)/'`src/dsp/specScale.cpp

src/io/libopensmile_la-libsvmSink.lo: src/io/libsvmSink.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/io/libopensmile_la-libsvmSink.lo -MD -MP -MF src/io/$(DEPDIR)/libopensmile_la-libsvmSink.Tpo -c -o src/io/libopensmile_la-libsvmSink.lo `test -f 'src/io/libsvmSink.cpp' || echo '$(srcdir)/'`src/io/libsvmSink.cpp
	$(AM_V_at)$(am__mv) src/io/$(DEPDIR)/libopensmile_la-libsvmSink.Tpo src/io/$(DEPDIR)/libopensmile_la-libsvmSink.Plo
#	$(AM_V_CXX)source='src/io/libsvmSink.cpp' object='src/io/libopensmile_la-libsvmSink.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/io/libopensmile_la-libsvmSink.lo `test -f 'src/io/libsvmSink.cpp' || echo '$(srcdir)/'`src/io/libsvmSink.cpp

src/iocore/libopensmile_la-arffSink.lo: src/iocore/arffSink.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/iocore/libopensmile_la-arffSink.lo -MD -MP -MF src/iocore/$(DEPDIR)/libopensmile_la-arffSink.Tpo -c -o src/iocore/libopensmile_la-arffSink.lo `test -f 'src/iocore/arffSink.cpp' || echo '$(srcdir)/'`src/iocore/arffSink.cpp
	$(AM_V_at)$(am__mv) src/iocore/$(DEPDIR)/libopensmile_la-arffSink.Tpo src/iocore/$(DEPDIR)/libopensmile_la-arffSink.Plo
#	$(AM_V_CXX)source='src/iocore/arffSink.cpp' object='src/iocore/libopensmile_la-arffSink.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/iocore/libopensmile_la-arffSink.lo `test -f 'src/iocore/arffSink.cpp' || echo '$(srcdir)/'`src/iocore/arffSink.cpp

src/iocore/libopensmile_la-arffSource.lo: src/iocore/arffSource.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/iocore/libopensmile_la-arffSource.lo -MD -MP -MF src/iocore/$(DEPDIR)/libopensmile_la-arffSource.Tpo -c -o src/iocore/libopensmile_la-arffSource.lo `test -f 'src/iocore/arffSource.cpp' || echo '$(srcdir)/'`src/iocore/arffSource.cpp
	$(AM_V_at)$(am__mv) src/iocore/$(DEPDIR)/libopensmile_la-arffSource.Tpo src/iocore/$(DEPDIR)/libopensmile_la-arffSource.Plo
#	$(AM_V_CXX)source='src/iocore/arffSource.cpp' object='src/iocore/libopensmile_la-arffSource.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/iocore/libopensmile_la-arffSource.lo `test -f 'src/iocore/arffSource.cpp' || echo '$(srcdir)/'`src/iocore/arffSource.cpp

src/iocore/libopensmile_la-csvSink.lo: src/iocore/csvSink.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/iocore/libopensmile_la-csvSink.lo -MD -MP -MF src/iocore/$(DEPDIR)/libopensmile_la-csvSink.Tpo -c -o src/iocore/libopensmile_la-csvSink.lo `test -f 'src/iocore/csvSink.cpp' || echo '$(srcdir)/'`src/iocore/csvSink.cpp
	$(AM_V_at)$(am__mv) src/iocore/$(DEPDIR)/libopensmile_la-csvSink.Tpo src/iocore/$(DEPDIR)/libopensmile_la-csvSink.Plo
#	$(AM_V_CXX)source='src/iocore/csvSink.cpp' object='src/iocore/libopensmile_la-csvSink.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/iocore/libopensmile_la-csvSink.lo `test -f 'src/iocore/csvSink.cpp' || echo '$(srcdir)/'`src/iocore/csvSink.cpp

src/iocore/libopensmile_la-csvSource.lo: src/iocore/csvSource.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/iocore/libopensmile_la-csvSource.lo -MD -MP -MF src/iocore/$(DEPDIR)/libopensmile_la-csvSource.Tpo -c -o src/iocore/libopensmile_la-csvSource.lo `test -f 'src/iocore/csvSource.cpp' || echo '$(srcdir)/'`src/iocore/csvSource.cpp
	$(AM_V_at)$(am__mv) src/iocore/$(DEPDIR)/libopensmile_la-csvSource.Tpo src/iocore/$(DEPDIR)/libopensmile_la-csvSource.Plo
#	$(AM_V_CXX)source='src/iocore/csvSource.cpp' object='src/iocore/libopensmile_la-csvSource.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/iocore/libopensmile_la-csvSource.lo `test -f 'src/iocore/csvSource.cpp' || echo '$(srcdir)/'`src/iocore/csvSource.cpp

src/iocore/libopensmile_la-datadumpSink.lo: src/iocore/datadumpSink.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/iocore/libopensmile_la-datadumpSink.lo -MD -MP -MF src/iocore/$(DEPDIR)/libopensmile_la-datadumpSink.Tpo -c -o src/iocore/libopensmile_la-datadumpSink.lo `test -f 'src/iocore/datadumpSink.cpp' || echo '$(srcdir)/'`src/iocore/datadumpSink.cpp
	$(AM_V_at)$(am__mv) src/iocore/$(DEPDIR)/libopensmile_la-datadumpSink.Tpo src/iocore/$(DEPDIR)/libopensmile_la-datadumpSink.Plo
#	$(AM_V_CXX)source='src/iocore/datadumpSink.cpp' object='src/iocore/libopensmile_la-datadumpSink.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/iocore/libopensmile_la-datadumpSink.lo `test -f 'src/iocore/datadumpSink.cpp' || echo '$(srcdir)/'`src/iocore/datadumpSink.cpp

src/iocore/libopensmile_la-htkSink.lo: src/iocore/htkSink.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/iocore/libopensmile_la-htkSink.lo -MD -MP -MF src/iocore/$(DEPDIR)/libopensmile_la-htkSink.Tpo -c -o src/iocore/libopensmile_la-htkSink.lo `test -f 'src/iocore/htkSink.cpp' || echo '$(srcdir)/'`src/iocore/htkSink.cpp
	$(AM_V_at)$(am__mv) src/iocore/$(DEPDIR)/libopensmile_la-htkSink.Tpo src/iocore/$(DEPDIR)/libopensmile_la-htkSink.Plo
#	$(AM_V_CXX)source='src/iocore/htkSink.cpp' object='src/iocore/libopensmile_la-htkSink.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/iocore/libopensmile_la-htkSink.lo `test -f 'src/iocore/htkSink.cpp' || echo '$(srcdir)/'`src/iocore/htkSink.cpp

src/iocore/libopensmile_la-htkSource.lo: src/iocore/htkSource.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/iocore/libopensmile_la-htkSource.lo -MD -MP -MF src/iocore/$(DEPDIR)/libopensmile_la-htkSource.Tpo -c -o src/iocore/libopensmile_la-htkSource.lo `test -f 'src/iocore/htkSource.cpp' || echo '$(srcdir)/'`src/iocore/htkSource.cpp
	$(AM_V_at)$(am__mv) src/iocore/$(DEPDIR)/libopensmile_la-htkSource.Tpo src/iocore/$(DEPDIR)/libopensmile_la-htkSource.Plo
#	$(AM_V_CXX)source='src/iocore/htkSource.cpp' object='src/iocore/libopensmile_la-htkSource.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/iocore/libopensmile_la-htkSource.lo `test -f 'src/iocore/htkSource.cpp' || echo '$(srcdir)/'`src/iocore/htkSource.cpp

src/iocore/libopensmile_la-waveSink.lo: src/iocore/waveSink.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/iocore/libopensmile_la-waveSink.lo -MD -MP -MF src/iocore/$(DEPDIR)/libopensmile_la-waveSink.Tpo -c -o src/iocore/libopensmile_la-waveSink.lo `test -f 'src/iocore/waveSink.cpp' || echo '$(srcdir)/'`src/iocore/waveSink.cpp
	$(AM_V_at)$(am__mv) src/iocore/$(DEPDIR)/libopensmile_la-waveSink.Tpo src/iocore/$(DEPDIR)/libopensmile_la-waveSink.Plo
#	$(AM_V_CXX)source='src/iocore/waveSink.cpp' object='src/iocore/libopensmile_la-waveSink.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/iocore/libopensmile_la-waveSink.lo `test -f 'src/iocore/waveSink.cpp' || echo '$(srcdir)/'`src/iocore/waveSink.cpp

src/iocore/libopensmile_la-waveSinkCut.lo: src/iocore/waveSinkCut.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/iocore/libopensmile_la-waveSinkCut.lo -MD -MP -MF src/iocore/$(DEPDIR)/libopensmile_la-waveSinkCut.Tpo -c -o src/iocore/libopensmile_la-waveSinkCut.lo `test -f 'src/iocore/waveSinkCut.cpp' || echo '$(srcdir)/'`src/iocore/waveSinkCut.cpp
	$(AM_V_at)$(am__mv) src/iocore/$(DEPDIR)/libopensmile_la-waveSinkCut.Tpo src/iocore/$(DEPDIR)/libopensmile_la-waveSinkCut.Plo
#	$(AM_V_CXX)source='src/iocore/waveSinkCut.cpp' object='src/iocore/libopensmile_la-waveSinkCut.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/iocore/libopensmile_la-waveSinkCut.lo `test -f 'src/iocore/waveSinkCut.cpp' || echo '$(srcdir)/'`src/iocore/waveSinkCut.cpp

src/iocore/libopensmile_la-waveSource.lo: src/iocore/waveSource.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/iocore/libopensmile_la-waveSource.lo -MD -MP -MF src/iocore/$(DEPDIR)/libopensmile_la-waveSource.Tpo -c -o src/iocore/libopensmile_la-waveSource.lo `test -f 'src/iocore/waveSource.cpp' || echo '$(srcdir)/'`src/iocore/waveSource.cpp
	$(AM_V_at)$(am__mv) src/iocore/$(DEPDIR)/libopensmile_la-waveSource.Tpo src/iocore/$(DEPDIR)/libopensmile_la-waveSource.Plo
#	$(AM_V_CXX)source='src/iocore/waveSource.cpp' object='src/iocore/libopensmile_la-waveSource.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/iocore/libopensmile_la-waveSource.lo `test -f 'src/iocore/waveSource.cpp' || echo '$(srcdir)/'`src/iocore/waveSource.cpp

src/lld/libopensmile_la-cens.lo: src/lld/cens.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/lld/libopensmile_la-cens.lo -MD -MP -MF src/lld/$(DEPDIR)/libopensmile_la-cens.Tpo -c -o src/lld/libopensmile_la-cens.lo `test -f 'src/lld/cens.cpp' || echo '$(srcdir)/'`src/lld/cens.cpp
	$(AM_V_at)$(am__mv) src/lld/$(DEPDIR)/libopensmile_la-cens.Tpo src/lld/$(DEPDIR)/libopensmile_la-cens.Plo
#	$(AM_V_CXX)source='src/lld/cens.cpp' object='src/lld/libopensmile_la-cens.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/lld/libopensmile_la-cens.lo `test -f 'src/lld/cens.cpp' || echo '$(srcdir)/'`src/lld/cens.cpp

src/lld/libopensmile_la-chroma.lo: src/lld/chroma.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/lld/libopensmile_la-chroma.lo -MD -MP -MF src/lld/$(DEPDIR)/libopensmile_la-chroma.Tpo -c -o src/lld/libopensmile_la-chroma.lo `test -f 'src/lld/chroma.cpp' || echo '$(srcdir)/'`src/lld/chroma.cpp
	$(AM_V_at)$(am__mv) src/lld/$(DEPDIR)/libopensmile_la-chroma.Tpo src/lld/$(DEPDIR)/libopensmile_la-chroma.Plo
#	$(AM_V_CXX)source='src/lld/chroma.cpp' object='src/lld/libopensmile_la-chroma.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/lld/libopensmile_la-chroma.lo `test -f 'src/lld/chroma.cpp' || echo '$(srcdir)/'`src/lld/chroma.cpp

src/lld/libopensmile_la-harmonics.lo: src/lld/harmonics.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/lld/libopensmile_la-harmonics.lo -MD -MP -MF src/lld/$(DEPDIR)/libopensmile_la-harmonics.Tpo -c -o src/lld/libopensmile_la-harmonics.lo `test -f 'src/lld/harmonics.cpp' || echo '$(srcdir)/'`src/lld/harmonics.cpp
	$(AM_V_at)$(am__mv) src/lld/$(DEPDIR)/libopensmile_la-harmonics.Tpo src/lld/$(DEPDIR)/libopensmile_la-harmonics.Plo
#	$(AM_V_CXX)source='src/lld/harmonics.cpp' object='src/lld/libopensmile_la-harmonics.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/lld/libopensmile_la-harmonics.lo `test -f 'src/lld/harmonics.cpp' || echo '$(srcdir)/'`src/lld/harmonics.cpp

src/lld/libopensmile_la-formantLpc.lo: src/lld/formantLpc.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/lld/libopensmile_la-formantLpc.lo -MD -MP -MF src/lld/$(DEPDIR)/libopensmile_la-formantLpc.Tpo -c -o src/lld/libopensmile_la-formantLpc.lo `test -f 'src/lld/formantLpc.cpp' || echo '$(srcdir)/'`src/lld/formantLpc.cpp
	$(AM_V_at)$(am__mv) src/lld/$(DEPDIR)/libopensmile_la-formantLpc.Tpo src/lld/$(DEPDIR)/libopensmile_la-formantLpc.Plo
#	$(AM_V_CXX)source='src/lld/formantLpc.cpp' object='src/lld/libopensmile_la-formantLpc.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/lld/libopensmile_la-formantLpc.lo `test -f 'src/lld/formantLpc.cpp' || echo '$(srcdir)/'`src/lld/formantLpc.cpp

src/lld/libopensmile_la-formantSmoother.lo: src/lld/formantSmoother.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/lld/libopensmile_la-formantSmoother.lo -MD -MP -MF src/lld/$(DEPDIR)/libopensmile_la-formantSmoother.Tpo -c -o src/lld/libopensmile_la-formantSmoother.lo `test -f 'src/lld/formantSmoother.cpp' || echo '$(srcdir)/'`src/lld/formantSmoother.cpp
	$(AM_V_at)$(am__mv) src/lld/$(DEPDIR)/libopensmile_la-formantSmoother.Tpo src/lld/$(DEPDIR)/libopensmile_la-formantSmoother.Plo
#	$(AM_V_CXX)source='src/lld/formantSmoother.cpp' object='src/lld/libopensmile_la-formantSmoother.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/lld/libopensmile_la-formantSmoother.lo `test -f 'src/lld/formantSmoother.cpp' || echo '$(srcdir)/'`src/lld/formantSmoother.cpp

src/lld/libopensmile_la-lpc.lo: src/lld/lpc.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/lld/libopensmile_la-lpc.lo -MD -MP -MF src/lld/$(DEPDIR)/libopensmile_la-lpc.Tpo -c -o src/lld/libopensmile_la-lpc.lo `test -f 'src/lld/lpc.cpp' || echo '$(srcdir)/'`src/lld/lpc.cpp
	$(AM_V_at)$(am__mv) src/lld/$(DEPDIR)/libopensmile_la-lpc.Tpo src/lld/$(DEPDIR)/libopensmile_la-lpc.Plo
#	$(AM_V_CXX)source='src/lld/lpc.cpp' object='src/lld/libopensmile_la-lpc.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/lld/libopensmile_la-lpc.lo `test -f 'src/lld/lpc.cpp' || echo '$(srcdir)/'`src/lld/lpc.cpp

src/lld/libopensmile_la-pitchDirection.lo: src/lld/pitchDirection.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/lld/libopensmile_la-pitchDirection.lo -MD -MP -MF src/lld/$(DEPDIR)/libopensmile_la-pitchDirection.Tpo -c -o src/lld/libopensmile_la-pitchDirection.lo `test -f 'src/lld/pitchDirection.cpp' || echo '$(srcdir)/'`src/lld/pitchDirection.cpp
	$(AM_V_at)$(am__mv) src/lld/$(DEPDIR)/libopensmile_la-pitchDirection.Tpo src/lld/$(DEPDIR)/libopensmile_la-pitchDirection.Plo
#	$(AM_V_CXX)source='src/lld/pitchDirection.cpp' object='src/lld/libopensmile_la-pitchDirection.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/lld/libopensmile_la-pitchDirection.lo `test -f 'src/lld/pitchDirection.cpp' || echo '$(srcdir)/'`src/lld/pitchDirection.cpp

src/lld/libopensmile_la-pitchJitter.lo: src/lld/pitchJitter.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/lld/libopensmile_la-pitchJitter.lo -MD -MP -MF src/lld/$(DEPDIR)/libopensmile_la-pitchJitter.Tpo -c -o src/lld/libopensmile_la-pitchJitter.lo `test -f 'src/lld/pitchJitter.cpp' || echo '$(srcdir)/'`src/lld/pitchJitter.cpp
	$(AM_V_at)$(am__mv) src/lld/$(DEPDIR)/libopensmile_la-pitchJitter.Tpo src/lld/$(DEPDIR)/libopensmile_la-pitchJitter.Plo
#	$(AM_V_CXX)source='src/lld/pitchJitter.cpp' object='src/lld/libopensmile_la-pitchJitter.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/lld/libopensmile_la-pitchJitter.lo `test -f 'src/lld/pitchJitter.cpp' || echo '$(srcdir)/'`src/lld/pitchJitter.cpp

src/lld/libopensmile_la-pitchShs.lo: src/lld/pitchShs.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/lld/libopensmile_la-pitchShs.lo -MD -MP -MF src/lld/$(DEPDIR)/libopensmile_la-pitchShs.Tpo -c -o src/lld/libopensmile_la-pitchShs.lo `test -f 'src/lld/pitchShs.cpp' || echo '$(srcdir)/'`src/lld/pitchShs.cpp
	$(AM_V_at)$(am__mv) src/lld/$(DEPDIR)/libopensmile_la-pitchShs.Tpo src/lld/$(DEPDIR)/libopensmile_la-pitchShs.Plo
#	$(AM_V_CXX)source='src/lld/pitchShs.cpp' object='src/lld/libopensmile_la-pitchShs.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/lld/libopensmile_la-pitchShs.lo `test -f 'src/lld/pitchShs.cpp' || echo '$(srcdir)/'`src/lld/pitchShs.cpp

src/lld/libopensmile_la-pitchSmootherViterbi.lo: src/lld/pitchSmootherViterbi.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/lld/libopensmile_la-pitchSmootherViterbi.lo -MD -MP -MF src/lld/$(DEPDIR)/libopensmile_la-pitchSmootherViterbi.Tpo -c -o src/lld/libopensmile_la-pitchSmootherViterbi.lo `test -f 'src/lld/pitchSmootherViterbi.cpp' || echo '$(srcdir)/'`src/lld/pitchSmootherViterbi.cpp
	$(AM_V_at)$(am__mv) src/lld/$(DEPDIR)/libopensmile_la-pitchSmootherViterbi.Tpo src/lld/$(DEPDIR)/libopensmile_la-pitchSmootherViterbi.Plo
#	$(AM_V_CXX)source='src/lld/pitchSmootherViterbi.cpp' object='src/lld/libopensmile_la-pitchSmootherViterbi.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/lld/libopensmile_la-pitchSmootherViterbi.lo `test -f 'src/lld/pitchSmootherViterbi.cpp' || echo '$(srcdir)/'`src/lld/pitchSmootherViterbi.cpp

src/lld/libopensmile_la-tonefilt.lo: src/lld/tonefilt.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/lld/libopensmile_la-tonefilt.lo -MD -MP -MF src/lld/$(DEPDIR)/libopensmile_la-tonefilt.Tpo -c -o src/lld/libopensmile_la-tonefilt.lo `test -f 'src/lld/tonefilt.cpp' || echo '$(srcdir)/'`src/lld/tonefilt.cpp
	$(AM_V_at)$(am__mv) src/lld/$(DEPDIR)/libopensmile_la-tonefilt.Tpo src/lld/$(DEPDIR)/libopensmile_la-tonefilt.Plo
#	$(AM_V_CXX)source='src/lld/tonefilt.cpp' object='src/lld/libopensmile_la-tonefilt.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/lld/libopensmile_la-tonefilt.lo `test -f 'src/lld/tonefilt.cpp' || echo '$(srcdir)/'`src/lld/tonefilt.cpp

src/lld/libopensmile_la-tonespec.lo: src/lld/tonespec.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/lld/libopensmile_la-tonespec.lo -MD -MP -MF src/lld/$(DEPDIR)/libopensmile_la-tonespec.Tpo -c -o src/lld/libopensmile_la-tonespec.lo `test -f 'src/lld/tonespec.cpp' || echo '$(srcdir)/'`src/lld/tonespec.cpp
	$(AM_V_at)$(am__mv) src/lld/$(DEPDIR)/libopensmile_la-tonespec.Tpo src/lld/$(DEPDIR)/libopensmile_la-tonespec.Plo
#	$(AM_V_CXX)source='src/lld/tonespec.cpp' object='src/lld/libopensmile_la-tonespec.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/lld/libopensmile_la-tonespec.lo `test -f 'src/lld/tonespec.cpp' || echo '$(srcdir)/'`src/lld/tonespec.cpp

src/lldcore/libopensmile_la-energy.lo: src/lldcore/energy.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/lldcore/libopensmile_la-energy.lo -MD -MP -MF src/lldcore/$(DEPDIR)/libopensmile_la-energy.Tpo -c -o src/lldcore/libopensmile_la-energy.lo `test -f 'src/lldcore/energy.cpp' || echo '$(srcdir)/'`src/lldcore/energy.cpp
	$(AM_V_at)$(am__mv) src/lldcore/$(DEPDIR)/libopensmile_la-energy.Tpo src/lldcore/$(DEPDIR)/libopensmile_la-energy.Plo
#	$(AM_V_CXX)source='src/lldcore/energy.cpp' object='src/lldcore/libopensmile_la-energy.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/lldcore/libopensmile_la-energy.lo `test -f 'src/lldcore/energy.cpp' || echo '$(srcdir)/'`src/lldcore/energy.cpp

src/lldcore/libopensmile_la-intensity.lo: src/lldcore/intensity.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/lldcore/libopensmile_la-intensity.lo -MD -MP -MF src/lldcore/$(DEPDIR)/libopensmile_la-intensity.Tpo -c -o src/lldcore/libopensmile_la-intensity.lo `test -f 'src/lldcore/intensity.cpp' || echo '$(srcdir)/'`src/lldcore/intensity.cpp
	$(AM_V_at)$(am__mv) src/lldcore/$(DEPDIR)/libopensmile_la-intensity.Tpo src/lldcore/$(DEPDIR)/libopensmile_la-intensity.Plo
#	$(AM_V_CXX)source='src/lldcore/intensity.cpp' object='src/lldcore/libopensmile_la-intensity.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/lldcore/libopensmile_la-intensity.lo `test -f 'src/lldcore/intensity.cpp' || echo '$(srcdir)/'`src/lldcore/intensity.cpp

src/lldcore/libopensmile_la-melspec.lo: src/lldcore/melspec.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/lldcore/libopensmile_la-melspec.lo -MD -MP -MF src/lldcore/$(DEPDIR)/libopensmile_la-melspec.Tpo -c -o src/lldcore/libopensmile_la-melspec.lo `test -f 'src/lldcore/melspec.cpp' || echo '$(srcdir)/'`src/lldcore/melspec.cpp
	$(AM_V_at)$(am__mv) src/lldcore/$(DEPDIR)/libopensmile_la-melspec.Tpo src/lldcore/$(DEPDIR)/libopensmile_la-melspec.Plo
#	$(AM_V_CXX)source='src/lldcore/melspec.cpp' object='src/lldcore/libopensmile_la-melspec.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/lldcore/libopensmile_la-melspec.lo `test -f 'src/lldcore/melspec.cpp' || echo '$(srcdir)/'`src/lldcore/melspec.cpp

src/lldcore/libopensmile_la-mfcc.lo: src/lldcore/mfcc.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/lldcore/libopensmile_la-mfcc.lo -MD -MP -MF src/lldcore/$(DEPDIR)/libopensmile_la-mfcc.Tpo -c -o src/lldcore/libopensmile_la-mfcc.lo `test -f 'src/lldcore/mfcc.cpp' || echo '$(srcdir)/'`src/lldcore/mfcc.cpp
	$(AM_V_at)$(am__mv) src/lldcore/$(DEPDIR)/libopensmile_la-mfcc.Tpo src/lldcore/$(DEPDIR)/libopensmile_la-mfcc.Plo
#	$(AM_V_CXX)source='src/lldcore/mfcc.cpp' object='src/lldcore/libopensmile_la-mfcc.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/lldcore/libopensmile_la-mfcc.lo `test -f 'src/lldcore/mfcc.cpp' || echo '$(srcdir)/'`src/lldcore/mfcc.cpp

src/lldcore/libopensmile_la-mzcr.lo: src/lldcore/mzcr.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/lldcore/libopensmile_la-mzcr.lo -MD -MP -MF src/lldcore/$(DEPDIR)/libopensmile_la-mzcr.Tpo -c -o src/lldcore/libopensmile_la-mzcr.lo `test -f 'src/lldcore/mzcr.cpp' || echo '$(srcdir)/'`src/lldcore/mzcr.cpp
	$(AM_V_at)$(am__mv) src/lldcore/$(DEPDIR)/libopensmile_la-mzcr.Tpo src/lldcore/$(DEPDIR)/libopensmile_la-mzcr.Plo
#	$(AM_V_CXX)source='src/lldcore/mzcr.cpp' object='src/lldcore/libopensmile_la-mzcr.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/lldcore/libopensmile_la-mzcr.lo `test -f 'src/lldcore/mzcr.cpp' || echo '$(srcdir)/'`src/lldcore/mzcr.cpp

src/lldcore/libopensmile_la-pitchACF.lo: src/lldcore/pitchACF.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/lldcore/libopensmile_la-pitchACF.lo -MD -MP -MF src/lldcore/$(DEPDIR)/libopensmile_la-pitchACF.Tpo -c -o src/lldcore/libopensmile_la-pitchACF.lo `test -f 'src/lldcore/pitchACF.cpp' || echo '$(srcdir)/'`src/lldcore/pitchACF.cpp
	$(AM_V_at)$(am__mv) src/lldcore/$(DEPDIR)/libopensmile_la-pitchACF.Tpo src/lldcore/$(DEPDIR)/libopensmile_la-pitchACF.Plo
#	$(AM_V_CXX)source='src/lldcore/pitchACF.cpp' object='src/lldcore/libopensmile_la-pitchACF.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/lldcore/libopensmile_la-pitchACF.lo `test -f 'src/lldcore/pitchACF.cpp' || echo '$(srcdir)/'`src/lldcore/pitchACF.cpp

src/lldcore/libopensmile_la-pitchBase.lo: src/lldcore/pitchBase.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/lldcore/libopensmile_la-pitchBase.lo -MD -MP -MF src/lldcore/$(DEPDIR)/libopensmile_la-pitchBase.Tpo -c -o src/lldcore/libopensmile_la-pitchBase.lo `test -f 'src/lldcore/pitchBase.cpp' || echo '$(srcdir)/'`src/lldcore/pitchBase.cpp
	$(AM_V_at)$(am__mv) src/lldcore/$(DEPDIR)/libopensmile_la-pitchBase.Tpo src/lldcore/$(DEPDIR)/libopensmile_la-pitchBase.Plo
#	$(AM_V_CXX)source='src/lldcore/pitchBase.cpp' object='src/lldcore/libopensmile_la-pitchBase.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/lldcore/libopensmile_la-pitchBase.lo `test -f 'src/lldcore/pitchBase.cpp' || echo '$(srcdir)/'`src/lldcore/pitchBase.cpp

src/lldcore/libopensmile_la-pitchSmoother.lo: src/lldcore/pitchSmoother.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/lldcore/libopensmile_la-pitchSmoother.lo -MD -MP -MF src/lldcore/$(DEPDIR)/libopensmile_la-pitchSmoother.Tpo -c -o src/lldcore/libopensmile_la-pitchSmoother.lo `test -f 'src/lldcore/pitchSmoother.cpp' || echo '$(srcdir)/'`src/lldcore/pitchSmoother.cpp
	$(AM_V_at)$(am__mv) src/lldcore/$(DEPDIR)/libopensmile_la-pitchSmoother.Tpo src/lldcore/$(DEPDIR)/libopensmile_la-pitchSmoother.Plo
#	$(AM_V_CXX)source='src/lldcore/pitchSmoother.cpp' object='src/lldcore/libopensmile_la-pitchSmoother.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/lldcore/libopensmile_la-pitchSmoother.lo `test -f 'src/lldcore/pitchSmoother.cpp' || echo '$(srcdir)/'`src/lldcore/pitchSmoother.cpp

src/lldcore/libopensmile_la-plp.lo: src/lldcore/plp.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/lldcore/libopensmile_la-plp.lo -MD -MP -MF src/lldcore/$(DEPDIR)/libopensmile_la-plp.Tpo -c -o src/lldcore/libopensmile_la-plp.lo `test -f 'src/lldcore/plp.cpp' || echo '$(srcdir)/'`src/lldcore/plp.cpp
	$(AM_V_at)$(am__mv) src/lldcore/$(DEPDIR)/libopensmile_la-plp.Tpo src/lldcore/$(DEPDIR)/libopensmile_la-plp.Plo
#	$(AM_V_CXX)source='src/lldcore/plp.cpp' object='src/lldcore/libopensmile_la-plp.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/lldcore/libopensmile_la-plp.lo `test -f 'src/lldcore/plp.cpp' || echo '$(srcdir)/'`src/lldcore/plp.cpp

src/lldcore/libopensmile_la-spectral.lo: src/lldcore/spectral.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/lldcore/libopensmile_la-spectral.lo -MD -MP -MF src/lldcore/$(DEPDIR)/libopensmile_la-spectral.Tpo -c -o src/lldcore/libopensmile_la-spectral.lo `test -f 'src/lldcore/spectral.cpp' || echo '$(srcdir)/'`src/lldcore/spectral.cpp
	$(AM_V_at)$(am__mv) src/lldcore/$(DEPDIR)/libopensmile_la-spectral.Tpo src/lldcore/$(DEPDIR)/libopensmile_la-spectral.Plo
#	$(AM_V_CXX)source='src/lldcore/spectral.cpp' object='src/lldcore/libopensmile_la-spectral.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/lldcore/libopensmile_la-spectral.lo `test -f 'src/lldcore/spectral.cpp' || echo '$(srcdir)/'`src/lldcore/spectral.cpp

src/other/libopensmile_la-bowProducer.lo: src/other/bowProducer.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/other/libopensmile_la-bowProducer.lo -MD -MP -MF src/other/$(DEPDIR)/libopensmile_la-bowProducer.Tpo -c -o src/other/libopensmile_la-bowProducer.lo `test -f 'src/other/bowProducer.cpp' || echo '$(srcdir)/'`src/other/bowProducer.cpp
	$(AM_V_at)$(am__mv) src/other/$(DEPDIR)/libopensmile_la-bowProducer.Tpo src/other/$(DEPDIR)/libopensmile_la-bowProducer.Plo
#	$(AM_V_CXX)source='src/other/bowProducer.cpp' object='src/other/libopensmile_la-bowProducer.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/other/libopensmile_la-bowProducer.lo `test -f 'src/other/bowProducer.cpp' || echo '$(srcdir)/'`src/other/bowProducer.cpp

src/other/libopensmile_la-maxIndex.lo: src/other/maxIndex.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/other/libopensmile_la-maxIndex.lo -MD -MP -MF src/other/$(DEPDIR)/libopensmile_la-maxIndex.Tpo -c -o src/other/libopensmile_la-maxIndex.lo `test -f 'src/other/maxIndex.cpp' || echo '$(srcdir)/'`src/other/maxIndex.cpp
	$(AM_V_at)$(am__mv) src/other/$(DEPDIR)/libopensmile_la-maxIndex.Tpo src/other/$(DEPDIR)/libopensmile_la-maxIndex.Plo
#	$(AM_V_CXX)source='src/other/maxIndex.cpp' object='src/other/libopensmile_la-maxIndex.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/other/libopensmile_la-maxIndex.lo `test -f 'src/other/maxIndex.cpp' || echo '$(srcdir)/'`src/other/maxIndex.cpp

src/other/libopensmile_la-valbasedSelector.lo: src/other/valbasedSelector.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/other/libopensmile_la-valbasedSelector.lo -MD -MP -MF src/other/$(DEPDIR)/libopensmile_la-valbasedSelector.Tpo -c -o src/other/libopensmile_la-valbasedSelector.lo `test -f 'src/other/valbasedSelector.cpp' || echo '$(srcdir)/'`src/other/valbasedSelector.cpp
	$(AM_V_at)$(am__mv) src/other/$(DEPDIR)/libopensmile_la-valbasedSelector.Tpo src/other/$(DEPDIR)/libopensmile_la-valbasedSelector.Plo
#	$(AM_V_CXX)source='src/other/valbasedSelector.cpp' object='src/other/libopensmile_la-valbasedSelector.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/other/libopensmile_la-valbasedSelector.lo `test -f 'src/other/valbasedSelector.cpp' || echo '$(srcdir)/'`src/other/valbasedSelector.cpp

src/other/libopensmile_la-vectorConcat.lo: src/other/vectorConcat.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/other/libopensmile_la-vectorConcat.lo -MD -MP -MF src/other/$(DEPDIR)/libopensmile_la-vectorConcat.Tpo -c -o src/other/libopensmile_la-vectorConcat.lo `test -f 'src/other/vectorConcat.cpp' || echo '$(srcdir)/'`src/other/vectorConcat.cpp
	$(AM_V_at)$(am__mv) src/other/$(DEPDIR)/libopensmile_la-vectorConcat.Tpo src/other/$(DEPDIR)/libopensmile_la-vectorConcat.Plo
#	$(AM_V_CXX)source='src/other/vectorConcat.cpp' object='src/other/libopensmile_la-vectorConcat.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/other/libopensmile_la-vectorConcat.lo `test -f 'src/other/vectorConcat.cpp' || echo '$(srcdir)/'`src/other/vectorConcat.cpp

src/other/libopensmile_la-vectorOperation.lo: src/other/vectorOperation.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/other/libopensmile_la-vectorOperation.lo -MD -MP -MF src/other/$(DEPDIR)/libopensmile_la-vectorOperation.Tpo -c -o src/other/libopensmile_la-vectorOperation.lo `test -f 'src/other/vectorOperation.cpp' || echo '$(srcdir)/'`src/other/vectorOperation.cpp
	$(AM_V_at)$(am__mv) src/other/$(DEPDIR)/libopensmile_la-vectorOperation.Tpo src/other/$(DEPDIR)/libopensmile_la-vectorOperation.Plo
#	$(AM_V_CXX)source='src/other/vectorOperation.cpp' object='src/other/libopensmile_la-vectorOperation.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/other/libopensmile_la-vectorOperation.lo `test -f 'src/other/vectorOperation.cpp' || echo '$(srcdir)/'`src/other/vectorOperation.cpp

src/portaudio/libopensmile_la-portaudioDuplex.lo: src/portaudio/portaudioDuplex.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/portaudio/libopensmile_la-portaudioDuplex.lo -MD -MP -MF src/portaudio/$(DEPDIR)/libopensmile_la-portaudioDuplex.Tpo -c -o src/portaudio/libopensmile_la-portaudioDuplex.lo `test -f 'src/portaudio/portaudioDuplex.cpp' || echo '$(srcdir)/'`src/portaudio/portaudioDuplex.cpp
	$(AM_V_at)$(am__mv) src/portaudio/$(DEPDIR)/libopensmile_la-portaudioDuplex.Tpo src/portaudio/$(DEPDIR)/libopensmile_la-portaudioDuplex.Plo
#	$(AM_V_CXX)source='src/portaudio/portaudioDuplex.cpp' object='src/portaudio/libopensmile_la-portaudioDuplex.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/portaudio/libopensmile_la-portaudioDuplex.lo `test -f 'src/portaudio/portaudioDuplex.cpp' || echo '$(srcdir)/'`src/portaudio/portaudioDuplex.cpp

src/portaudio/libopensmile_la-portaudioSink.lo: src/portaudio/portaudioSink.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/portaudio/libopensmile_la-portaudioSink.lo -MD -MP -MF src/portaudio/$(DEPDIR)/libopensmile_la-portaudioSink.Tpo -c -o src/portaudio/libopensmile_la-portaudioSink.lo `test -f 'src/portaudio/portaudioSink.cpp' || echo '$(srcdir)/'`src/portaudio/portaudioSink.cpp
	$(AM_V_at)$(am__mv) src/portaudio/$(DEPDIR)/libopensmile_la-portaudioSink.Tpo src/portaudio/$(DEPDIR)/libopensmile_la-portaudioSink.Plo
#	$(AM_V_CXX)source='src/portaudio/portaudioSink.cpp' object='src/portaudio/libopensmile_la-portaudioSink.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/portaudio/libopensmile_la-portaudioSink.lo `test -f 'src/portaudio/portaudioSink.cpp' || echo '$(srcdir)/'`src/portaudio/portaudioSink.cpp

src/portaudio/libopensmile_la-portaudioSource.lo: src/portaudio/portaudioSource.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/portaudio/libopensmile_la-portaudioSource.lo -MD -MP -MF src/portaudio/$(DEPDIR)/libopensmile_la-portaudioSource.Tpo -c -o src/portaudio/libopensmile_la-portaudioSource.lo `test -f 'src/portaudio/portaudioSource.cpp' || echo '$(srcdir)/'`src/portaudio/portaudioSource.cpp
	$(AM_V_at)$(am__mv) src/portaudio/$(DEPDIR)/libopensmile_la-portaudioSource.Tpo src/portaudio/$(DEPDIR)/libopensmile_la-portaudioSource.Plo
#	$(AM_V_CXX)source='src/portaudio/portaudioSource.cpp' object='src/portaudio/libopensmile_la-portaudioSource.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/portaudio/libopensmile_la-portaudioSource.lo `test -f 'src/portaudio/portaudioSource.cpp' || echo '$(srcdir)/'`src/portaudio/portaudioSource.cpp

src/portaudio/libopensmile_la-portaudioWavplayer.lo: src/portaudio/portaudioWavplayer.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/portaudio/libopensmile_la-portaudioWavplayer.lo -MD -MP -MF src/portaudio/$(DEPDIR)/libopensmile_la-portaudioWavplayer.Tpo -c -o src/portaudio/libopensmile_la-portaudioWavplayer.lo `test -f 'src/portaudio/portaudioWavplayer.cpp' || echo '$(srcdir)/'`src/portaudio/portaudioWavplayer.cpp
	$(AM_V_at)$(am__mv) src/portaudio/$(DEPDIR)/libopensmile_la-portaudioWavplayer.Tpo src/portaudio/$(DEPDIR)/libopensmile_la-portaudioWavplayer.Plo
#	$(AM_V_CXX)source='src/portaudio/portaudioWavplayer.cpp' object='src/portaudio/libopensmile_la-portaudioWavplayer.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/portaudio/libopensmile_la-portaudioWavplayer.lo `test -f 'src/portaudio/portaudioWavplayer.cpp' || echo '$(srcdir)/'`src/portaudio/portaudioWavplayer.cpp

src/android/libopensmile_la-openslesSource.lo: src/android/openslesSource.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/android/libopensmile_la-openslesSource.lo -MD -MP -MF src/android/$(DEPDIR)/libopensmile_la-openslesSource.Tpo -c -o src/android/libopensmile_la-openslesSource.lo `test -f 'src/android/openslesSource.cpp' || echo '$(srcdir)/'`src/android/openslesSource.cpp
	$(AM_V_at)$(am__mv) src/android/$(DEPDIR)/libopensmile_la-openslesSource.Tpo src/android/$(DEPDIR)/libopensmile_la-openslesSource.Plo
#	$(AM_V_CXX)source='src/android/openslesSource.cpp' object='src/android/libopensmile_la-openslesSource.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/android/libopensmile_la-openslesSource.lo `test -f 'src/android/openslesSource.cpp' || echo '$(srcdir)/'`src/android/openslesSource.cpp

src/android/libopensmile_la-jniMessageInterface.lo: src/android/jniMessageInterface.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/android/libopensmile_la-jniMessageInterface.lo -MD -MP -MF src/android/$(DEPDIR)/libopensmile_la-jniMessageInterface.Tpo -c -o src/android/libopensmile_la-jniMessageInterface.lo `test -f 'src/android/jniMessageInterface.cpp' || echo '$(srcdir)/'`src/android/jniMessageInterface.cpp
	$(AM_V_at)$(am__mv) src/android/$(DEPDIR)/libopensmile_la-jniMessageInterface.Tpo src/android/$(DEPDIR)/libopensmile_la-jniMessageInterface.Plo
#	$(AM_V_CXX)source='src/android/jniMessageInterface.cpp' object='src/android/libopensmile_la-jniMessageInterface.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/android/libopensmile_la-jniMessageInterface.lo `test -f 'src/android/jniMessageInterface.cpp' || echo '$(srcdir)/'`src/android/jniMessageInterface.cpp

src/rnn/libopensmile_la-rnn.lo: src/rnn/rnn.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/rnn/libopensmile_la-rnn.lo -MD -MP -MF src/rnn/$(DEPDIR)/libopensmile_la-rnn.Tpo -c -o src/rnn/libopensmile_la-rnn.lo `test -f 'src/rnn/rnn.cpp' || echo '$(srcdir)/'`src/rnn/rnn.cpp
	$(AM_V_at)$(am__mv) src/rnn/$(DEPDIR)/libopensmile_la-rnn.Tpo src/rnn/$(DEPDIR)/libopensmile_la-rnn.Plo
#	$(AM_V_CXX)source='src/rnn/rnn.cpp' object='src/rnn/libopensmile_la-rnn.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/rnn/libopensmile_la-rnn.lo `test -f 'src/rnn/rnn.cpp' || echo '$(srcdir)/'`src/rnn/rnn.cpp

src/rnn/libopensmile_la-rnnProcessor.lo: src/rnn/rnnProcessor.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/rnn/libopensmile_la-rnnProcessor.lo -MD -MP -MF src/rnn/$(DEPDIR)/libopensmile_la-rnnProcessor.Tpo -c -o src/rnn/libopensmile_la-rnnProcessor.lo `test -f 'src/rnn/rnnProcessor.cpp' || echo '$(srcdir)/'`src/rnn/rnnProcessor.cpp
	$(AM_V_at)$(am__mv) src/rnn/$(DEPDIR)/libopensmile_la-rnnProcessor.Tpo src/rnn/$(DEPDIR)/libopensmile_la-rnnProcessor.Plo
#	$(AM_V_CXX)source='src/rnn/rnnProcessor.cpp' object='src/rnn/libopensmile_la-rnnProcessor.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/rnn/libopensmile_la-rnnProcessor.lo `test -f 'src/rnn/rnnProcessor.cpp' || echo '$(srcdir)/'`src/rnn/rnnProcessor.cpp

src/rnn/libopensmile_la-rnnSink.lo: src/rnn/rnnSink.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/rnn/libopensmile_la-rnnSink.lo -MD -MP -MF src/rnn/$(DEPDIR)/libopensmile_la-rnnSink.Tpo -c -o src/rnn/libopensmile_la-rnnSink.lo `test -f 'src/rnn/rnnSink.cpp' || echo '$(srcdir)/'`src/rnn/rnnSink.cpp
	$(AM_V_at)$(am__mv) src/rnn/$(DEPDIR)/libopensmile_la-rnnSink.Tpo src/rnn/$(DEPDIR)/libopensmile_la-rnnSink.Plo
#	$(AM_V_CXX)source='src/rnn/rnnSink.cpp' object='src/rnn/libopensmile_la-rnnSink.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/rnn/libopensmile_la-rnnSink.lo `test -f 'src/rnn/rnnSink.cpp' || echo '$(srcdir)/'`src/rnn/rnnSink.cpp

src/rnn/libopensmile_la-rnnVad2.lo: src/rnn/rnnVad2.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/rnn/libopensmile_la-rnnVad2.lo -MD -MP -MF src/rnn/$(DEPDIR)/libopensmile_la-rnnVad2.Tpo -c -o src/rnn/libopensmile_la-rnnVad2.lo `test -f 'src/rnn/rnnVad2.cpp' || echo '$(srcdir)/'`src/rnn/rnnVad2.cpp
	$(AM_V_at)$(am__mv) src/rnn/$(DEPDIR)/libopensmile_la-rnnVad2.Tpo src/rnn/$(DEPDIR)/libopensmile_la-rnnVad2.Plo
#	$(AM_V_CXX)source='src/rnn/rnnVad2.cpp' object='src/rnn/libopensmile_la-rnnVad2.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/rnn/libopensmile_la-rnnVad2.lo `test -f 'src/rnn/rnnVad2.cpp' || echo '$(srcdir)/'`src/rnn/rnnVad2.cpp

src/smileutil/libopensmile_la-zerosolve.lo: src/smileutil/zerosolve.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/smileutil/libopensmile_la-zerosolve.lo -MD -MP -MF src/smileutil/$(DEPDIR)/libopensmile_la-zerosolve.Tpo -c -o src/smileutil/libopensmile_la-zerosolve.lo `test -f 'src/smileutil/zerosolve.cpp' || echo '$(srcdir)/'`src/smileutil/zerosolve.cpp
	$(AM_V_at)$(am__mv) src/smileutil/$(DEPDIR)/libopensmile_la-zerosolve.Tpo src/smileutil/$(DEPDIR)/libopensmile_la-zerosolve.Plo
#	$(AM_V_CXX)source='src/smileutil/zerosolve.cpp' object='src/smileutil/libopensmile_la-zerosolve.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/smileutil/libopensmile_la-zerosolve.lo `test -f 'src/smileutil/zerosolve.cpp' || echo '$(srcdir)/'`src/smileutil/zerosolve.cpp

src/video/libopensmile_la-openCVSource.lo: src/video/openCVSource.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/video/libopensmile_la-openCVSource.lo -MD -MP -MF src/video/$(DEPDIR)/libopensmile_la-openCVSource.Tpo -c -o src/video/libopensmile_la-openCVSource.lo `test -f 'src/video/openCVSource.cpp' || echo '$(srcdir)/'`src/video/openCVSource.cpp
	$(AM_V_at)$(am__mv) src/video/$(DEPDIR)/libopensmile_la-openCVSource.Tpo src/video/$(DEPDIR)/libopensmile_la-openCVSource.Plo
#	$(AM_V_CXX)source='src/video/openCVSource.cpp' object='src/video/libopensmile_la-openCVSource.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/video/libopensmile_la-openCVSource.lo `test -f 'src/video/openCVSource.cpp' || echo '$(srcdir)/'`src/video/openCVSource.cpp

progsrc/smilextract/SMILExtract-SMILExtract.o: progsrc/smilextract/SMILExtract.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SMILExtract_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT progsrc/smilextract/SMILExtract-SMILExtract.o -MD -MP -MF progsrc/smilextract/$(DEPDIR)/SMILExtract-SMILExtract.Tpo -c -o progsrc/smilextract/SMILExtract-SMILExtract.o `test -f 'progsrc/smilextract/SMILExtract.cpp' || echo '$(srcdir)/'`progsrc/smilextract/SMILExtract.cpp
	$(AM_V_at)$(am__mv) progsrc/smilextract/$(DEPDIR)/SMILExtract-SMILExtract.Tpo progsrc/smilextract/$(DEPDIR)/SMILExtract-SMILExtract.Po
#	$(AM_V_CXX)source='progsrc/smilextract/SMILExtract.cpp' object='progsrc/smilextract/SMILExtract-SMILExtract.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SMILExtract_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o progsrc/smilextract/SMILExtract-SMILExtract.o `test -f 'progsrc/smilextract/SMILExtract.cpp' || echo '$(srcdir)/'`progsrc/smilextract/SMILExtract.cpp

progsrc/smilextract/SMILExtract-SMILExtract.obj: progsrc/smilextract/SMILExtract.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SMILExtract_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT progsrc/smilextract/SMILExtract-SMILExtract.obj -MD -MP -MF progsrc/smilextract/$(DEPDIR)/SMILExtract-SMILExtract.Tpo -c -o progsrc/smilextract/SMILExtract-SMILExtract.obj `if test -f 'progsrc/smilextract/SMILExtract.cpp'; then $(CYGPATH_W) 'progsrc/smilextract/SMILExtract.cpp'; else $(CYGPATH_W) '$(srcdir)/progsrc/smilextract/SMILExtract.cpp'; fi`
	$(AM_V_at)$(am__mv) progsrc/smilextract/$(DEPDIR)/SMILExtract-SMILExtract.Tpo progsrc/smilextract/$(DEPDIR)/SMILExtract-SMILExtract.Po
#	$(AM_V_CXX)source='progsrc/smilextract/SMILExtract.cpp' object='progsrc/smilextract/SMILExtract-SMILExtract.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SMILExtract_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o progsrc/smilextract/SMILExtract-SMILExtract.obj `if test -f 'progsrc/smilextract/SMILExtract.cpp'; then $(CYGPATH_W) 'progsrc/smilextract/SMILExtract.cpp'; else $(CYGPATH_W) '$(srcdir)/progsrc/smilextract/SMILExtract.cpp'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
	-rm -rf src/android/.libs src/android/_libs
	-rm -rf src/classifiers/.libs src/classifiers/_libs
	-rm -rf src/classifiers/julius/.libs src/classifiers/julius/_libs
	-rm -rf src/classifiers/libsvm/.libs src/classifiers/libsvm/_libs
	-rm -rf src/core/.libs src/core/_libs
	-rm -rf src/dsp/.libs src/dsp/_libs
	-rm -rf src/dspcore/.libs src/dspcore/_libs
	-rm -rf src/examples/.libs src/examples/_libs
	-rm -rf src/functionals/.libs src/functionals/_libs
	-rm -rf src/io/.libs src/io/_libs
	-rm -rf src/iocore/.libs src/iocore/_libs
	-rm -rf src/lld/.libs src/lld/_libs
	-rm -rf src/lldcore/.libs src/lldcore/_libs
	-rm -rf src/other/.libs src/other/_libs
	-rm -rf src/portaudio/.libs src/portaudio/_libs
	-rm -rf src/rnn/.libs src/rnn/_libs
	-rm -rf src/smileutil/.libs src/smileutil/_libs
	-rm -rf src/video/.libs src/video/_libs

distclean-libtool:
	-rm -f libtool config.lt

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscope: cscope.files
	test ! -s cscope.files \
	  || $(CSCOPE) -b -q $(AM_CSCOPEFLAGS) $(CSCOPEFLAGS) -i cscope.files $(CSCOPE_ARGS)
clean-cscope:
	-rm -f cscope.files
cscope.files: clean-cscope cscopelist
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
	-rm -f cscope.out cscope.in.out cscope.po.out cscope.files

distdir: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) distdir-am

distdir-am: $(DISTFILES)
	$(am__remove_distdir)
	test -d "$(distdir)" || mkdir "$(distdir)"
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	-test -n "$(am__skip_mode_fix)" \
	|| find "$(distdir)" -type d ! -perm -755 \
		-exec chmod u+rwx,go+rx {} \; -o \
	  ! -type d ! -perm -444 -links 1 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -400 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -444 -exec $(install_sh) -c -m a+r {} {} \; \
	|| chmod -R a+r "$(distdir)"
dist-gzip: distdir
	tardir=$(distdir) && $(am__tar) | eval GZIP= gzip $(GZIP_ENV) -c >$(distdir).tar.gz
	$(am__post_remove_distdir)

dist-bzip2: distdir
	tardir=$(distdir) && $(am__tar) | BZIP2=$${BZIP2--9} bzip2 -c >$(distdir).tar.bz2
	$(am__post_remove_distdir)

dist-lzip: distdir
	tardir=$(distdir) && $(am__tar) | lzip -c $${LZIP_OPT--9} >$(distdir).tar.lz
	$(am__post_remove_distdir)

dist-xz: distdir
	tardir=$(distdir) && $(am__tar) | XZ_OPT=$${XZ_OPT--e} xz -c >$(distdir).tar.xz
	$(am__post_remove_distdir)

dist-tarZ: distdir
	@echo WARNING: "Support for distribution archives compressed with" \
		       "legacy program 'compress' is deprecated." >&2
	@echo WARNING: "It will be removed altogether in Automake 2.0" >&2
	tardir=$(distdir) && $(am__tar) | compress -c >$(distdir).tar.Z
	$(am__post_remove_distdir)

dist-shar: distdir
	@echo WARNING: "Support for shar distribution archives is" \
	               "deprecated." >&2
	@echo WARNING: "It will be removed altogether in Automake 2.0" >&2
	shar $(distdir) | eval GZIP= gzip $(GZIP_ENV) -c >$(distdir).shar.gz
	$(am__post_remove_distdir)

dist-zip: distdir
	-rm -f $(distdir).zip
	zip -rq $(distdir).zip $(distdir)
	$(am__post_remove_distdir)

dist dist-all:
	$(MAKE) $(AM_MAKEFLAGS) $(DIST_TARGETS) am__post_remove_distdir='@:'
	$(am__post_remove_distdir)

# This target untars the dist file and tries a VPATH configuration.  Then
# it guarantees that the distribution is self-contained by making another
# tarfile.
distcheck: dist
	case '$(DIST_ARCHIVES)' in \
	*.tar.gz*) \
	  eval GZIP= gzip $(GZIP_ENV) -dc $(distdir).tar.gz | $(am__untar) ;;\
	*.tar.bz2*) \
	  bzip2 -dc $(distdir).tar.bz2 | $(am__untar) ;;\
	*.tar.lz*) \
	  lzip -dc $(distdir).tar.lz | $(am__untar) ;;\
	*.tar.xz*) \
	  xz -dc $(distdir).tar.xz | $(am__untar) ;;\
	*.tar.Z*) \
	  uncompress -c $(distdir).tar.Z | $(am__untar) ;;\
	*.shar.gz*) \
	  eval GZIP= gzip $(GZIP_ENV) -dc $(distdir).shar.gz | unshar ;;\
	*.zip*) \
	  unzip $(distdir).zip ;;\
	esac
	chmod -R a-w $(distdir)
	chmod u+w $(distdir)
	mkdir $(distdir)/_build $(distdir)/_build/sub $(distdir)/_inst
	chmod a-w $(distdir)
	test -d $(distdir)/_build || exit 0; \
	dc_install_base=`$(am__cd) $(distdir)/_inst && pwd | sed -e 's,^[^:\\/]:[\\/],/,'` \
	  && dc_destdir="$${TMPDIR-/tmp}/am-dc-$$$$/" \
	  && am__cwd=`pwd` \
	  && $(am__cd) $(distdir)/_build/sub \
	  && ../../configure \
	    $(AM_DISTCHECK_CONFIGURE_FLAGS) \
	    $(DISTCHECK_CONFIGURE_FLAGS) \
	    --srcdir=../.. --prefix="$$dc_install_base" \
	  && $(MAKE) $(AM_MAKEFLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) dvi \
	  && $(MAKE) $(AM_MAKEFLAGS) check \
	  && $(MAKE) $(AM_MAKEFLAGS) install \
	  && $(MAKE) $(AM_MAKEFLAGS) installcheck \
	  && $(MAKE) $(AM_MAKEFLAGS) uninstall \
	  && $(MAKE) $(AM_MAKEFLAGS) distuninstallcheck_dir="$$dc_install_base" \
	        distuninstallcheck \
	  && chmod -R a-w "$$dc_install_base" \
	  && ({ \
	       (cd ../.. && umask 077 && mkdir "$$dc_destdir") \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" install \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" uninstall \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" \
	            distuninstallcheck_dir="$$dc_destdir" distuninstallcheck; \
	      } || { rm -rf "$$dc_destdir"; exit 1; }) \
	  && rm -rf "$$dc_destdir" \
	  && $(MAKE) $(AM_MAKEFLAGS) dist \
	  && rm -rf $(DIST_ARCHIVES) \
	  && $(MAKE) $(AM_MAKEFLAGS) distcleancheck \
	  && cd "$$am__cwd" \
	  || exit 1
	$(am__post_remove_distdir)
	@(echo "$(distdir) archives ready for distribution: "; \
	  list='$(DIST_ARCHIVES)'; for i in $$list; do echo $$i; done) | \
	  sed -e 1h -e 1s/./=/g -e 1p -e 1x -e '$$p' -e '$$x'
distuninstallcheck:
	@test -n '$(distuninstallcheck_dir)' || { \
	  echo 'ERROR: trying to run $@ with an empty' \
	       '$$(distuninstallcheck_dir)' >&2; \
	  exit 1; \
	}; \
	$(am__cd) '$(distuninstallcheck_dir)' || { \
	  echo 'ERROR: cannot chdir into $(distuninstallcheck_dir)' >&2; \
	  exit 1; \
	}; \
	test `$(am__distuninstallcheck_listfiles) | wc -l` -eq 0 \
	   || { echo "ERROR: files left after uninstall:" ; \
	        if test -n "$(DESTDIR)"; then \
	          echo "  (check DESTDIR support)"; \
	        fi ; \
	        $(distuninstallcheck_listfiles) ; \
	        exit 1; } >&2
distcleancheck: distclean
	@if test '$(srcdir)' = . ; then \
	  echo "ERROR: distcleancheck can only run from a VPATH build" ; \
	  exit 1 ; \
	fi
	@test `$(distcleancheck_listfiles) | wc -l` -eq 0 \
	  || { echo "ERROR: files left in build directory after distclean:" ; \
	       $(distcleancheck_listfiles) ; \
	       exit 1; } >&2
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS) $(LTLIBRARIES) config.h
install-binPROGRAMS: install-libLTLIBRARIES

installdirs:
	for dir in "$(DESTDIR)$(bindir)" "$(DESTDIR)$(libdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-rm -f progsrc/smilextract/$(DEPDIR)/$(am__dirstamp)
	-rm -f progsrc/smilextract/$(am__dirstamp)
	-rm -f src/android/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/android/$(am__dirstamp)
	-rm -f src/classifiers/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/classifiers/$(am__dirstamp)
	-rm -f src/classifiers/julius/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/classifiers/julius/$(am__dirstamp)
	-rm -f src/classifiers/libsvm/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/classifiers/libsvm/$(am__dirstamp)
	-rm -f src/core/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/core/$(am__dirstamp)
	-rm -f src/dsp/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/dsp/$(am__dirstamp)
	-rm -f src/dspcore/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/dspcore/$(am__dirstamp)
	-rm -f src/examples/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/examples/$(am__dirstamp)
	-rm -f src/functionals/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/functionals/$(am__dirstamp)
	-rm -f src/io/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/io/$(am__dirstamp)
	-rm -f src/iocore/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/iocore/$(am__dirstamp)
	-rm -f src/lld/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/lld/$(am__dirstamp)
	-rm -f src/lldcore/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/lldcore/$(am__dirstamp)
	-rm -f src/other/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/other/$(am__dirstamp)
	-rm -f src/portaudio/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/portaudio/$(am__dirstamp)
	-rm -f src/rnn/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/rnn/$(am__dirstamp)
	-rm -f src/smileutil/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/smileutil/$(am__dirstamp)
	-rm -f src/video/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/video/$(am__dirstamp)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libLTLIBRARIES \
	clean-libtool mostlyclean-am

distclean: distclean-am
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
		-rm -f progsrc/smilextract/$(DEPDIR)/SMILExtract-SMILExtract.Po
	-rm -f src/android/$(DEPDIR)/libopensmile_la-jniMessageInterface.Plo
	-rm -f src/android/$(DEPDIR)/libopensmile_la-openslesSource.Plo
	-rm -f src/classifiers/$(DEPDIR)/libopensmile_la-libsvmliveSink.Plo
	-rm -f src/classifiers/$(DEPDIR)/libopensmile_la-svmSink.Plo
	-rm -f src/classifiers/julius/$(DEPDIR)/libopensmile_la-juliusSink.Plo
	-rm -f src/classifiers/libsvm/$(DEPDIR)/libopensmile_la-svm.Plo
	-rm -f src/core/$(DEPDIR)/libopensmile_la-commandlineParser.Plo
	-rm -f src/core/$(DEPDIR)/libopensmile_la-componentManager.Plo
	-rm -f src/core/$(DEPDIR)/libopensmile_la-configManager.Plo
	-rm -f src/core/$(DEPDIR)/libopensmile_la-dataMemory.Plo
	-rm -f src/core/$(DEPDIR)/libopensmile_la-dataProcessor.Plo
	-rm -f src/core/$(DEPDIR)/libopensmile_la-dataReader.Plo
	-rm -f src/core/$(DEPDIR)/libopensmile_la-dataSelector.Plo
	-rm -f src/core/$(DEPDIR)/libopensmile_la-dataSink.Plo
	-rm -f src/core/$(DEPDIR)/libopensmile_la-dataSource.Plo
	-rm -f src/core/$(DEPDIR)/libopensmile_la-dataWriter.Plo
	-rm -f src/core/$(DEPDIR)/libopensmile_la-exceptions.Plo
	-rm -f src/core/$(DEPDIR)/libopensmile_la-nullSink.Plo
	-rm -f src/core/$(DEPDIR)/libopensmile_la-smileCommon.Plo
	-rm -f src/core/$(DEPDIR)/libopensmile_la-smileComponent.Plo
	-rm -f src/core/$(DEPDIR)/libopensmile_la-smileLogger.Plo
	-rm -f src/core/$(DEPDIR)/libopensmile_la-vecToWinProcessor.Plo
	-rm -f src/core/$(DEPDIR)/libopensmile_la-vectorProcessor.Plo
	-rm -f src/core/$(DEPDIR)/libopensmile_la-vectorTransform.Plo
	-rm -f src/core/$(DEPDIR)/libopensmile_la-winToVecProcessor.Plo
	-rm -f src/core/$(DEPDIR)/libopensmile_la-windowProcessor.Plo
	-rm -f src/dsp/$(DEPDIR)/libopensmile_la-dbA.Plo
	-rm -f src/dsp/$(DEPDIR)/libopensmile_la-signalGenerator.Plo
	-rm -f src/dsp/$(DEPDIR)/libopensmile_la-smileResample.Plo
	-rm -f src/dsp/$(DEPDIR)/libopensmile_la-specResample.Plo
	-rm -f src/dsp/$(DEPDIR)/libopensmile_la-specScale.Plo
	-rm -f src/dsp/$(DEPDIR)/libopensmile_la-vadV1.Plo
	-rm -f src/dspcore/$(DEPDIR)/libopensmile_la-acf.Plo
	-rm -f src/dspcore/$(DEPDIR)/libopensmile_la-amdf.Plo
	-rm -f src/dspcore/$(DEPDIR)/libopensmile_la-contourSmoother.Plo
	-rm -f src/dspcore/$(DEPDIR)/libopensmile_la-deltaRegression.Plo
	-rm -f src/dspcore/$(DEPDIR)/libopensmile_la-fftmagphase.Plo
	-rm -f src/dspcore/$(DEPDIR)/libopensmile_la-fftsg.Plo
	-rm -f src/dspcore/$(DEPDIR)/libopensmile_la-framer.Plo
	-rm -f src/dspcore/$(DEPDIR)/libopensmile_la-fullinputMean.Plo
	-rm -f src/dspcore/$(DEPDIR)/libopensmile_la-fullturnMean.Plo
	-rm -f src/dspcore/$(DEPDIR)/libopensmile_la-monoMixdown.Plo
	-rm -f src/dspcore/$(DEPDIR)/libopensmile_la-preemphasis.Plo
	-rm -f src/dspcore/$(DEPDIR)/libopensmile_la-transformFft.Plo
	-rm -f src/dspcore/$(DEPDIR)/libopensmile_la-turnDetector.Plo
	-rm -f src/dspcore/$(DEPDIR)/libopensmile_la-vectorMVN.Plo
	-rm -f src/dspcore/$(DEPDIR)/libopensmile_la-vectorPreemphasis.Plo
	-rm -f src/dspcore/$(DEPDIR)/libopensmile_la-windower.Plo
	-rm -f src/examples/$(DEPDIR)/libopensmile_la-exampleSink.Plo
	-rm -f src/examples/$(DEPDIR)/libopensmile_la-exampleSource.Plo
	-rm -f src/examples/$(DEPDIR)/libopensmile_la-simpleMessageSender.Plo
	-rm -f src/functionals/$(DEPDIR)/libopensmile_la-functionalComponent.Plo
	-rm -f src/functionals/$(DEPDIR)/libopensmile_la-functionalCrossings.Plo
	-rm -f src/functionals/$(DEPDIR)/libopensmile_la-functionalDCT.Plo
	-rm -f src/functionals/$(DEPDIR)/libopensmile_la-functionalExtremes.Plo
	-rm -f src/functionals/$(DEPDIR)/libopensmile_la-functionalLpc.Plo
	-rm -f src/functionals/$(DEPDIR)/libopensmile_la-functionalMeans.Plo
	-rm -f src/functionals/$(DEPDIR)/libopensmile_la-functionalMoments.Plo
	-rm -f src/functionals/$(DEPDIR)/libopensmile_la-functionalOnset.Plo
	-rm -f src/functionals/$(DEPDIR)/libopensmile_la-functionalPeaks.Plo
	-rm -f src/functionals/$(DEPDIR)/libopensmile_la-functionalPeaks2.Plo
	-rm -f src/functionals/$(DEPDIR)/libopensmile_la-functionalPercentiles.Plo
	-rm -f src/functionals/$(DEPDIR)/libopensmile_la-functionalRegression.Plo
	-rm -f src/functionals/$(DEPDIR)/libopensmile_la-functionalSamples.Plo
	-rm -f src/functionals/$(DEPDIR)/libopensmile_la-functionalSegments.Plo
	-rm -f src/functionals/$(DEPDIR)/libopensmile_la-functionalTimes.Plo
	-rm -f src/functionals/$(DEPDIR)/libopensmile_la-functionals.Plo
	-rm -f src/io/$(DEPDIR)/libopensmile_la-libsvmSink.Plo
	-rm -f src/iocore/$(DEPDIR)/libopensmile_la-arffSink.Plo
	-rm -f src/iocore/$(DEPDIR)/libopensmile_la-arffSource.Plo
	-rm -f src/iocore/$(DEPDIR)/libopensmile_la-csvSink.Plo
	-rm -f src/iocore/$(DEPDIR)/libopensmile_la-csvSource.Plo
	-rm -f src/iocore/$(DEPDIR)/libopensmile_la-datadumpSink.Plo
	-rm -f src/iocore/$(DEPDIR)/libopensmile_la-htkSink.Plo
	-rm -f src/iocore/$(DEPDIR)/libopensmile_la-htkSource.Plo
	-rm -f src/iocore/$(DEPDIR)/libopensmile_la-waveSink.Plo
	-rm -f src/iocore/$(DEPDIR)/libopensmile_la-waveSinkCut.Plo
	-rm -f src/iocore/$(DEPDIR)/libopensmile_la-waveSource.Plo
	-rm -f src/lld/$(DEPDIR)/libopensmile_la-cens.Plo
	-rm -f src/lld/$(DEPDIR)/libopensmile_la-chroma.Plo
	-rm -f src/lld/$(DEPDIR)/libopensmile_la-formantLpc.Plo
	-rm -f src/lld/$(DEPDIR)/libopensmile_la-formantSmoother.Plo
	-rm -f src/lld/$(DEPDIR)/libopensmile_la-harmonics.Plo
	-rm -f src/lld/$(DEPDIR)/libopensmile_la-lpc.Plo
	-rm -f src/lld/$(DEPDIR)/libopensmile_la-lsp.Plo
	-rm -f src/lld/$(DEPDIR)/libopensmile_la-pitchDirection.Plo
	-rm -f src/lld/$(DEPDIR)/libopensmile_la-pitchJitter.Plo
	-rm -f src/lld/$(DEPDIR)/libopensmile_la-pitchShs.Plo
	-rm -f src/lld/$(DEPDIR)/libopensmile_la-pitchSmootherViterbi.Plo
	-rm -f src/lld/$(DEPDIR)/libopensmile_la-tonefilt.Plo
	-rm -f src/lld/$(DEPDIR)/libopensmile_la-tonespec.Plo
	-rm -f src/lldcore/$(DEPDIR)/libopensmile_la-energy.Plo
	-rm -f src/lldcore/$(DEPDIR)/libopensmile_la-intensity.Plo
	-rm -f src/lldcore/$(DEPDIR)/libopensmile_la-melspec.Plo
	-rm -f src/lldcore/$(DEPDIR)/libopensmile_la-mfcc.Plo
	-rm -f src/lldcore/$(DEPDIR)/libopensmile_la-mzcr.Plo
	-rm -f src/lldcore/$(DEPDIR)/libopensmile_la-pitchACF.Plo
	-rm -f src/lldcore/$(DEPDIR)/libopensmile_la-pitchBase.Plo
	-rm -f src/lldcore/$(DEPDIR)/libopensmile_la-pitchSmoother.Plo
	-rm -f src/lldcore/$(DEPDIR)/libopensmile_la-plp.Plo
	-rm -f src/lldcore/$(DEPDIR)/libopensmile_la-spectral.Plo
	-rm -f src/other/$(DEPDIR)/libopensmile_la-bowProducer.Plo
	-rm -f src/other/$(DEPDIR)/libopensmile_la-maxIndex.Plo
	-rm -f src/other/$(DEPDIR)/libopensmile_la-valbasedSelector.Plo
	-rm -f src/other/$(DEPDIR)/libopensmile_la-vectorConcat.Plo
	-rm -f src/other/$(DEPDIR)/libopensmile_la-vectorOperation.Plo
	-rm -f src/portaudio/$(DEPDIR)/libopensmile_la-portaudioDuplex.Plo
	-rm -f src/portaudio/$(DEPDIR)/libopensmile_la-portaudioSink.Plo
	-rm -f src/portaudio/$(DEPDIR)/libopensmile_la-portaudioSource.Plo
	-rm -f src/portaudio/$(DEPDIR)/libopensmile_la-portaudioWavplayer.Plo
	-rm -f src/rnn/$(DEPDIR)/libopensmile_la-rnn.Plo
	-rm -f src/rnn/$(DEPDIR)/libopensmile_la-rnnProcessor.Plo
	-rm -f src/rnn/$(DEPDIR)/libopensmile_la-rnnSink.Plo
	-rm -f src/rnn/$(DEPDIR)/libopensmile_la-rnnVad2.Plo
	-rm -f src/smileutil/$(DEPDIR)/libopensmile_la-smileUtil.Plo
	-rm -f src/smileutil/$(DEPDIR)/libopensmile_la-smileUtilSpline.Plo
	-rm -f src/smileutil/$(DEPDIR)/libopensmile_la-zerosolve.Plo
	-rm -f src/video/$(DEPDIR)/libopensmile_la-openCVSource.Plo
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-hdr distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS install-libLTLIBRARIES

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf $(top_srcdir)/autom4te.cache
		-rm -f progsrc/smilextract/$(DEPDIR)/SMILExtract-SMILExtract.Po
	-rm -f src/android/$(DEPDIR)/libopensmile_la-jniMessageInterface.Plo
	-rm -f src/android/$(DEPDIR)/libopensmile_la-openslesSource.Plo
	-rm -f src/classifiers/$(DEPDIR)/libopensmile_la-libsvmliveSink.Plo
	-rm -f src/classifiers/$(DEPDIR)/libopensmile_la-svmSink.Plo
	-rm -f src/classifiers/julius/$(DEPDIR)/libopensmile_la-juliusSink.Plo
	-rm -f src/classifiers/libsvm/$(DEPDIR)/libopensmile_la-svm.Plo
	-rm -f src/core/$(DEPDIR)/libopensmile_la-commandlineParser.Plo
	-rm -f src/core/$(DEPDIR)/libopensmile_la-componentManager.Plo
	-rm -f src/core/$(DEPDIR)/libopensmile_la-configManager.Plo
	-rm -f src/core/$(DEPDIR)/libopensmile_la-dataMemory.Plo
	-rm -f src/core/$(DEPDIR)/libopensmile_la-dataProcessor.Plo
	-rm -f src/core/$(DEPDIR)/libopensmile_la-dataReader.Plo
	-rm -f src/core/$(DEPDIR)/libopensmile_la-dataSelector.Plo
	-rm -f src/core/$(DEPDIR)/libopensmile_la-dataSink.Plo
	-rm -f src/core/$(DEPDIR)/libopensmile_la-dataSource.Plo
	-rm -f src/core/$(DEPDIR)/libopensmile_la-dataWriter.Plo
	-rm -f src/core/$(DEPDIR)/libopensmile_la-exceptions.Plo
	-rm -f src/core/$(DEPDIR)/libopensmile_la-nullSink.Plo
	-rm -f src/core/$(DEPDIR)/libopensmile_la-smileCommon.Plo
	-rm -f src/core/$(DEPDIR)/libopensmile_la-smileComponent.Plo
	-rm -f src/core/$(DEPDIR)/libopensmile_la-smileLogger.Plo
	-rm -f src/core/$(DEPDIR)/libopensmile_la-vecToWinProcessor.Plo
	-rm -f src/core/$(DEPDIR)/libopensmile_la-vectorProcessor.Plo
	-rm -f src/core/$(DEPDIR)/libopensmile_la-vectorTransform.Plo
	-rm -f src/core/$(DEPDIR)/libopensmile_la-winToVecProcessor.Plo
	-rm -f src/core/$(DEPDIR)/libopensmile_la-windowProcessor.Plo
	-rm -f src/dsp/$(DEPDIR)/libopensmile_la-dbA.Plo
	-rm -f src/dsp/$(DEPDIR)/libopensmile_la-signalGenerator.Plo
	-rm -f src/dsp/$(DEPDIR)/libopensmile_la-smileResample.Plo
	-rm -f src/dsp/$(DEPDIR)/libopensmile_la-specResample.Plo
	-rm -f src/dsp/$(DEPDIR)/libopensmile_la-specScale.Plo
	-rm -f src/dsp/$(DEPDIR)/libopensmile_la-vadV1.Plo
	-rm -f src/dspcore/$(DEPDIR)/libopensmile_la-acf.Plo
	-rm -f src/dspcore/$(DEPDIR)/libopensmile_la-amdf.Plo
	-rm -f src/dspcore/$(DEPDIR)/libopensmile_la-contourSmoother.Plo
	-rm -f src/dspcore/$(DEPDIR)/libopensmile_la-deltaRegression.Plo
	-rm -f src/dspcore/$(DEPDIR)/libopensmile_la-fftmagphase.Plo
	-rm -f src/dspcore/$(DEPDIR)/libopensmile_la-fftsg.Plo
	-rm -f src/dspcore/$(DEPDIR)/libopensmile_la-framer.Plo
	-rm -f src/dspcore/$(DEPDIR)/libopensmile_la-fullinputMean.Plo
	-rm -f src/dspcore/$(DEPDIR)/libopensmile_la-fullturnMean.Plo
	-rm -f src/dspcore/$(DEPDIR)/libopensmile_la-monoMixdown.Plo
	-rm -f src/dspcore/$(DEPDIR)/libopensmile_la-preemphasis.Plo
	-rm -f src/dspcore/$(DEPDIR)/libopensmile_la-transformFft.Plo
	-rm -f src/dspcore/$(DEPDIR)/libopensmile_la-turnDetector.Plo
	-rm -f src/dspcore/$(DEPDIR)/libopensmile_la-vectorMVN.Plo
	-rm -f src/dspcore/$(DEPDIR)/libopensmile_la-vectorPreemphasis.Plo
	-rm -f src/dspcore/$(DEPDIR)/libopensmile_la-windower.Plo
	-rm -f src/examples/$(DEPDIR)/libopensmile_la-exampleSink.Plo
	-rm -f src/examples/$(DEPDIR)/libopensmile_la-exampleSource.Plo
	-rm -f src/examples/$(DEPDIR)/libopensmile_la-simpleMessageSender.Plo
	-rm -f src/functionals/$(DEPDIR)/libopensmile_la-functionalComponent.Plo
	-rm -f src/functionals/$(DEPDIR)/libopensmile_la-functionalCrossings.Plo
	-rm -f src/functionals/$(DEPDIR)/libopensmile_la-functionalDCT.Plo
	-rm -f src/functionals/$(DEPDIR)/libopensmile_la-functionalExtremes.Plo
	-rm -f src/functionals/$(DEPDIR)/libopensmile_la-functionalLpc.Plo
	-rm -f src/functionals/$(DEPDIR)/libopensmile_la-functionalMeans.Plo
	-rm -f src/functionals/$(DEPDIR)/libopensmile_la-functionalMoments.Plo
	-rm -f src/functionals/$(DEPDIR)/libopensmile_la-functionalOnset.Plo
	-rm -f src/functionals/$(DEPDIR)/libopensmile_la-functionalPeaks.Plo
	-rm -f src/functionals/$(DEPDIR)/libopensmile_la-functionalPeaks2.Plo
	-rm -f src/functionals/$(DEPDIR)/libopensmile_la-functionalPercentiles.Plo
	-rm -f src/functionals/$(DEPDIR)/libopensmile_la-functionalRegression.Plo
	-rm -f src/functionals/$(DEPDIR)/libopensmile_la-functionalSamples.Plo
	-rm -f src/functionals/$(DEPDIR)/libopensmile_la-functionalSegments.Plo
	-rm -f src/functionals/$(DEPDIR)/libopensmile_la-functionalTimes.Plo
	-rm -f src/functionals/$(DEPDIR)/libopensmile_la-functionals.Plo
	-rm -f src/io/$(DEPDIR)/libopensmile_la-libsvmSink.Plo
	-rm -f src/iocore/$(DEPDIR)/libopensmile_la-arffSink.Plo
	-rm -f src/iocore/$(DEPDIR)/libopensmile_la-arffSource.Plo
	-rm -f src/iocore/$(DEPDIR)/libopensmile_la-csvSink.Plo
	-rm -f src/iocore/$(DEPDIR)/libopensmile_la-csvSource.Plo
	-rm -f src/iocore/$(DEPDIR)/libopensmile_la-datadumpSink.Plo
	-rm -f src/iocore/$(DEPDIR)/libopensmile_la-htkSink.Plo
	-rm -f src/iocore/$(DEPDIR)/libopensmile_la-htkSource.Plo
	-rm -f src/iocore/$(DEPDIR)/libopensmile_la-waveSink.Plo
	-rm -f src/iocore/$(DEPDIR)/libopensmile_la-waveSinkCut.Plo
	-rm -f src/iocore/$(DEPDIR)/libopensmile_la-waveSource.Plo
	-rm -f src/lld/$(DEPDIR)/libopensmile_la-cens.Plo
	-rm -f src/lld/$(DEPDIR)/libopensmile_la-chroma.Plo
	-rm -f src/lld/$(DEPDIR)/libopensmile_la-formantLpc.Plo
	-rm -f src/lld/$(DEPDIR)/libopensmile_la-formantSmoother.Plo
	-rm -f src/lld/$(DEPDIR)/libopensmile_la-harmonics.Plo
	-rm -f src/lld/$(DEPDIR)/libopensmile_la-lpc.Plo
	-rm -f src/lld/$(DEPDIR)/libopensmile_la-lsp.Plo
	-rm -f src/lld/$(DEPDIR)/libopensmile_la-pitchDirection.Plo
	-rm -f src/lld/$(DEPDIR)/libopensmile_la-pitchJitter.Plo
	-rm -f src/lld/$(DEPDIR)/libopensmile_la-pitchShs.Plo
	-rm -f src/lld/$(DEPDIR)/libopensmile_la-pitchSmootherViterbi.Plo
	-rm -f src/lld/$(DEPDIR)/libopensmile_la-tonefilt.Plo
	-rm -f src/lld/$(DEPDIR)/libopensmile_la-tonespec.Plo
	-rm -f src/lldcore/$(DEPDIR)/libopensmile_la-energy.Plo
	-rm -f src/lldcore/$(DEPDIR)/libopensmile_la-intensity.Plo
	-rm -f src/lldcore/$(DEPDIR)/libopensmile_la-melspec.Plo
	-rm -f src/lldcore/$(DEPDIR)/libopensmile_la-mfcc.Plo
	-rm -f src/lldcore/$(DEPDIR)/libopensmile_la-mzcr.Plo
	-rm -f src/lldcore/$(DEPDIR)/libopensmile_la-pitchACF.Plo
	-rm -f src/lldcore/$(DEPDIR)/libopensmile_la-pitchBase.Plo
	-rm -f src/lldcore/$(DEPDIR)/libopensmile_la-pitchSmoother.Plo
	-rm -f src/lldcore/$(DEPDIR)/libopensmile_la-plp.Plo
	-rm -f src/lldcore/$(DEPDIR)/libopensmile_la-spectral.Plo
	-rm -f src/other/$(DEPDIR)/libopensmile_la-bowProducer.Plo
	-rm -f src/other/$(DEPDIR)/libopensmile_la-maxIndex.Plo
	-rm -f src/other/$(DEPDIR)/libopensmile_la-valbasedSelector.Plo
	-rm -f src/other/$(DEPDIR)/libopensmile_la-vectorConcat.Plo
	-rm -f src/other/$(DEPDIR)/libopensmile_la-vectorOperation.Plo
	-rm -f src/portaudio/$(DEPDIR)/libopensmile_la-portaudioDuplex.Plo
	-rm -f src/portaudio/$(DEPDIR)/libopensmile_la-portaudioSink.Plo
	-rm -f src/portaudio/$(DEPDIR)/libopensmile_la-portaudioSource.Plo
	-rm -f src/portaudio/$(DEPDIR)/libopensmile_la-portaudioWavplayer.Plo
	-rm -f src/rnn/$(DEPDIR)/libopensmile_la-rnn.Plo
	-rm -f src/rnn/$(DEPDIR)/libopensmile_la-rnnProcessor.Plo
	-rm -f src/rnn/$(DEPDIR)/libopensmile_la-rnnSink.Plo
	-rm -f src/rnn/$(DEPDIR)/libopensmile_la-rnnVad2.Plo
	-rm -f src/smileutil/$(DEPDIR)/libopensmile_la-smileUtil.Plo
	-rm -f src/smileutil/$(DEPDIR)/libopensmile_la-smileUtilSpline.Plo
	-rm -f src/smileutil/$(DEPDIR)/libopensmile_la-zerosolve.Plo
	-rm -f src/video/$(DEPDIR)/libopensmile_la-openCVSource.Plo
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-libLTLIBRARIES

.MAKE: all install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am am--depfiles am--refresh check \
	check-am clean clean-binPROGRAMS clean-cscope clean-generic \
	clean-libLTLIBRARIES clean-libtool cscope cscopelist-am ctags \
	ctags-am dist dist-all dist-bzip2 dist-gzip dist-lzip \
	dist-shar dist-tarZ dist-xz dist-zip distcheck distclean \
	distclean-compile distclean-generic distclean-hdr \
	distclean-libtool distclean-tags distcleancheck distdir \
	distuninstallcheck dvi dvi-am html html-am info info-am \
	install install-am install-binPROGRAMS install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-libLTLIBRARIES install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags tags-am uninstall uninstall-am uninstall-binPROGRAMS \
	uninstall-libLTLIBRARIES

.PRECIOUS: Makefile


# endif 

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
